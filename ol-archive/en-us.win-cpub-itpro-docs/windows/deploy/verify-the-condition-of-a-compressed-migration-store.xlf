<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\deploy\verify-the-condition-of-a-compressed-migration-store.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">2b6580c4c995a9c2f99bd9ce087d23fe8eab333e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Verify the Condition of a Compressed Migration Store (Windows 10)</source>
          <target>Verify the Condition of a Compressed Migration Store (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Verify the Condition of a Compressed Migration Store</source>
          <target>Verify the Condition of a Compressed Migration Store</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Verify the Condition of a Compressed Migration Store</source>
          <target>Verify the Condition of a Compressed Migration Store</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>When you migrate files and settings during a typical PC-refresh migration, the user state is usually stored in a compressed folder on the intermediate store.</source>
          <target>When you migrate files and settings during a typical PC-refresh migration, the user state is usually stored in a compressed folder on the intermediate store.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>This compressed folder, also called the compressed migration store, is a single image file that contains:</source>
          <target>This compressed folder, also called the compressed migration store, is a single image file that contains:</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>All of the files being migrated.</source>
          <target>All of the files being migrated.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>The user’s settings.</source>
          <target>The user’s settings.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>A catalog file that contains metadata for all files in the migration store.</source>
          <target>A catalog file that contains metadata for all files in the migration store.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When you run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LoadState</pc> command to load the data from these files to the destination computer, LoadState requires a valid catalog file in order to open the migration store.</source>
          <target>When you run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LoadState</pc> command to load the data from these files to the destination computer, LoadState requires a valid catalog file in order to open the migration store.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You can run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UsmtUtils</pc> command with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/verify</pc> option to determine whether the compressed migration store is intact, or whether it contains corrupted files or a corrupted catalog.</source>
          <target>You can run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UsmtUtils</pc> command with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/verify</pc> option to determine whether the compressed migration store is intact, or whether it contains corrupted files or a corrupted catalog.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>You should run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option on the migration store before you overwrite the original user-state files and settings.</source>
          <target>You should run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option on the migration store before you overwrite the original user-state files and settings.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When you use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option, you can specify what type of information to report in the UsmtUtils log file.</source>
          <target>When you use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option, you can specify what type of information to report in the UsmtUtils log file.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>These report types are:</source>
          <target>These report types are:</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Catalog</pc>: Displays the status of only the catalog file.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Catalog</pc>: Displays the status of only the catalog file.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">All</pc>: Displays the status of all files, including the catalog file.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">All</pc>: Displays the status of all files, including the catalog file.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Failure only</pc>: Displays only the files that are corrupted.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Failure only</pc>: Displays only the files that are corrupted.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>In This Topic</source>
          <target>In This Topic</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The following sections demonstrate how to run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UsmtUtils</pc> command with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/verify</pc> option, and how to specify the information to display in the UsmtUtils log file.</source>
          <target>The following sections demonstrate how to run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UsmtUtils</pc> command with the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/verify</pc> option, and how to specify the information to display in the UsmtUtils log file.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>The UsmtUtils syntax for the /verify option</source>
          <target>The UsmtUtils syntax for the /verify option</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>To verify that the migration store is intact</source>
          <target>To verify that the migration store is intact</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>To verify the status of only the catalog file</source>
          <target>To verify the status of only the catalog file</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>To verify the status of all files</source>
          <target>To verify the status of all files</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>To verify the status of the files and return only the corrupted files</source>
          <target>To verify the status of the files and return only the corrupted files</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>The UsmtUtils Syntax for the /verify Option</source>
          <target>The UsmtUtils Syntax for the /verify Option</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>To verify the condition of a compressed migration store, use the following UsmtUtils syntax:</source>
          <target>To verify the condition of a compressed migration store, use the following UsmtUtils syntax:</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
          <data id="id3">\[</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;\]</data>
          <data id="id6">&amp;lt;</data>
          <data id="id7">&amp;gt;</data>
          <data id="id8">\[</data>
          <data id="id9">&amp;lt;</data>
          <data id="id10">&amp;gt;\]</data>
          <data id="id11">\[</data>
          <data id="id12">\[</data>
          <data id="id13">&amp;lt;</data>
          <data id="id14">&amp;gt;\]</data>
          <data id="id15">&amp;lt;</data>
          <data id="id16">&amp;gt;</data>
          <data id="id17">&amp;lt;</data>
          <data id="id18">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>cd /d<ph dataRef="id1" id="ph1" />USMTpath<ph dataRef="id2" id="ph2" />usmtutils /verify<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />reportType<ph dataRef="id5" id="ph5" /><ph dataRef="id6" id="ph6" />filePath<ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />/l:<ph dataRef="id9" id="ph9" />logfile<ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />/decrypt <ph dataRef="id12" id="ph12" />:<ph dataRef="id13" id="ph13" />AlgID<ph dataRef="id14" id="ph14" /> {/key:<ph dataRef="id15" id="ph15" />keystring<ph dataRef="id16" id="ph16" /> | /keyfile:<ph dataRef="id17" id="ph17" />filename<ph dataRef="id18" id="ph18" />}</source>
          <target>cd /d<ph dataRef="id1" id="ph1" />USMTpath<ph dataRef="id2" id="ph2" />usmtutils /verify<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />reportType<ph dataRef="id5" id="ph5" /><ph dataRef="id6" id="ph6" />filePath<ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />/l:<ph dataRef="id9" id="ph9" />logfile<ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />/decrypt <ph dataRef="id12" id="ph12" />:<ph dataRef="id13" id="ph13" />AlgID<ph dataRef="id14" id="ph14" /> {/key:<ph dataRef="id15" id="ph15" />keystring<ph dataRef="id16" id="ph16" /> | /keyfile:<ph dataRef="id17" id="ph17" />filename<ph dataRef="id18" id="ph18" />}</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Where the placeholders have the following values:</source>
          <target>Where the placeholders have the following values:</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />USMTpath<ph dataRef="id4" id="ph2" /></pc> is the location where you have saved the USMT files and tools.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />USMTpath<ph dataRef="id4" id="ph2" /></pc> is the location where you have saved the USMT files and tools.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />reportType<ph dataRef="id4" id="ph2" /></pc> specifies whether to report on all files, corrupted files only, or the status of the catalog.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />reportType<ph dataRef="id4" id="ph2" /></pc> specifies whether to report on all files, corrupted files only, or the status of the catalog.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />filePath<ph dataRef="id4" id="ph2" /></pc> is the location of the compressed migration store.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />filePath<ph dataRef="id4" id="ph2" /></pc> is the location of the compressed migration store.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />logfile<ph dataRef="id4" id="ph2" /></pc> is the location and name of the log file.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />logfile<ph dataRef="id4" id="ph2" /></pc> is the location and name of the log file.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />AlgID<ph dataRef="id4" id="ph2" /></pc> is the cryptographic algorithm that was used to create the migration store on the <pc dataRefEnd="id6" dataRefStart="id5" id="p2">ScanState</pc> command line.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />AlgID<ph dataRef="id4" id="ph2" /></pc> is the cryptographic algorithm that was used to create the migration store on the <pc dataRefEnd="id6" dataRefStart="id5" id="p2">ScanState</pc> command line.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />keystring<ph dataRef="id4" id="ph2" /></pc> is the encryption key that was used to encrypt the migration store.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />keystring<ph dataRef="id4" id="ph2" /></pc> is the encryption key that was used to encrypt the migration store.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />filename<ph dataRef="id4" id="ph2" /></pc> is the location and name of the text file that contains the encryption key.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />filename<ph dataRef="id4" id="ph2" /></pc> is the location and name of the text file that contains the encryption key.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>To Verify that the Migration Store is Intact</source>
          <target>To Verify that the Migration Store is Intact</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>To verify whether the migration store is intact or whether it contains corrupted files or a corrupted catalog, type:</source>
          <target>To verify whether the migration store is intact or whether it contains corrupted files or a corrupted catalog, type:</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Because no report type is specified, UsmtUtils displays the default summary report.</source>
          <target>Because no report type is specified, UsmtUtils displays the default summary report.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>To Verify the Status of Only the Catalog File</source>
          <target>To Verify the Status of Only the Catalog File</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>To verify whether the catalog file is corrupted or intact, type:</source>
          <target>To verify whether the catalog file is corrupted or intact, type:</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>To Verify the Status of all Files</source>
          <target>To Verify the Status of all Files</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>To verify whether there are any corrupted files in the compressed migration store, and to specify the name and location of the log file, type:</source>
          <target>To verify whether there are any corrupted files in the compressed migration store, and to specify the name and location of the log file, type:</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>In addition to verifying the status of all files, this example decrypts the files.</source>
          <target>In addition to verifying the status of all files, this example decrypts the files.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Because no encryption algorithm is specified, UsmtUtils uses the default 3DES cryptographic algorithm.</source>
          <target>Because no encryption algorithm is specified, UsmtUtils uses the default 3DES cryptographic algorithm.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>To Verify the Status of the Files and Return Only the Corrupted Files</source>
          <target>To Verify the Status of the Files and Return Only the Corrupted Files</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>In this example, the log file will only list the files that became corrupted during the ScanState process.</source>
          <target>In this example, the log file will only list the files that became corrupted during the ScanState process.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>This list will include the catalog file if it is also corrupted.</source>
          <target>This list will include the catalog file if it is also corrupted.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>This example also decrypts the files by specifying the cryptographic algorithm and the location of the file that contains the encryption key.</source>
          <target>This example also decrypts the files by specifying the cryptographic algorithm and the location of the file that contains the encryption key.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Next Steps</source>
          <target>Next Steps</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option indicates that there are corrupted files in the migration store, you can use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/extract</pc> option in the UsmtUtils tool to recover data from some corrupted stores.</source>
          <target>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option indicates that there are corrupted files in the migration store, you can use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/extract</pc> option in the UsmtUtils tool to recover data from some corrupted stores.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](usmt-extract-files-from-a-compressed-migration-store.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extract Files from a Compressed USMT Migration Store</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extract Files from a Compressed USMT Migration Store</pc>.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>UsmtUtils Syntax</source>
          <target>UsmtUtils Syntax</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Return Codes</source>
          <target>Return Codes</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>