<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\deploy\usmt-configxml-file.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">a9f3db7d8233bbac03d11a13bfffd52b0ff6246f</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Config.xml File (Windows 10)</source>
          <target>Config.xml File (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Config.xml File</source>
          <target>Config.xml File</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Config.xml File</source>
          <target>Config.xml File</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Config.xml File</source>
          <target>Config.xml File</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The Config.xml file is an optional User State Migration Tool (USMT) 10.0 file that you can create using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/genconfig</pc> option with the ScanState.exe tool.</source>
          <target>The Config.xml file is an optional User State Migration Tool (USMT) 10.0 file that you can create using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/genconfig</pc> option with the ScanState.exe tool.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>If you want to include all of the default components, and do not want to change the default store-creation or profile-migration behavior, you do not need to create a Config.xml file.</source>
          <target>If you want to include all of the default components, and do not want to change the default store-creation or profile-migration behavior, you do not need to create a Config.xml file.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>However, if you are satisfied with the default migration behavior defined in the MigApp.xml, MigUser.xml and MigDocs.xml files, but you want to exclude certain components, you can create and modify a Config.xml file and leave the other .xml files unchanged.</source>
          <target>However, if you are satisfied with the default migration behavior defined in the MigApp.xml, MigUser.xml and MigDocs.xml files, but you want to exclude certain components, you can create and modify a Config.xml file and leave the other .xml files unchanged.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>For example, you must create and modify the Config.xml file if you want to exclude any of the operating-system settings that are migrated.</source>
          <target>For example, you must create and modify the Config.xml file if you want to exclude any of the operating-system settings that are migrated.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>It is necessary to create and modify this file if you want to change any of the default store-creation or profile-migration behavior.</source>
          <target>It is necessary to create and modify this file if you want to change any of the default store-creation or profile-migration behavior.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>The Config.xml file has a different format than the other migration .xml files, because it does not contain any migration rules.</source>
          <target>The Config.xml file has a different format than the other migration .xml files, because it does not contain any migration rules.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>It contains only a list of the operating-system components, applications, user documents that can be migrated, as well as user-profile policy and error-control policy.</source>
          <target>It contains only a list of the operating-system components, applications, user documents that can be migrated, as well as user-profile policy and error-control policy.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>For this reason, excluding components using the Config.xml file is easier than modifying the migration .xml files, because you do not need to be familiar with the migration rules and syntax.</source>
          <target>For this reason, excluding components using the Config.xml file is easier than modifying the migration .xml files, because you do not need to be familiar with the migration rules and syntax.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>However, you cannot use wildcard characters in this file.</source>
          <target>However, you cannot use wildcard characters in this file.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](understanding-migration-xml-files.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about using the Config.xml file with other migration files, such as the MigDocs.xml and MigApps.xml files, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding Migration XML Files</pc>.</source>
          <target>For more information about using the Config.xml file with other migration files, such as the MigDocs.xml and MigApps.xml files, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding Migration XML Files</pc>.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To exclude a component from the Config.xml file, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">migrate</pc> value to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">"no"</pc>.</source>
          <target>To exclude a component from the Config.xml file, set the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">migrate</pc> value to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">"no"</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Deleting the XML tag for the component from the Config.xml file will not exclude the component from your migration.</source>
          <target>Deleting the XML tag for the component from the Config.xml file will not exclude the component from your migration.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>In This Topic</source>
          <target>In This Topic</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>In USMT there are new migration policies that can be configured in the Config.xml file.</source>
          <target>In USMT there are new migration policies that can be configured in the Config.xml file.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">&amp;lt;</data>
          <data id="id12">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>For example, you can configure additional <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />ProfileControl<ph dataRef="id8" id="ph4" /></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p3"><ph dataRef="id11" id="ph5" />HardLinkStoreControl<ph dataRef="id12" id="ph6" /></pc> options.</source>
          <target>For example, you can configure additional <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc>, <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />ProfileControl<ph dataRef="id8" id="ph4" /></pc>, and <pc dataRefEnd="id10" dataRefStart="id9" id="p3"><ph dataRef="id11" id="ph5" />HardLinkStoreControl<ph dataRef="id12" id="ph6" /></pc> options.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>The following elements and parameters are for use in the Config.xml file only.</source>
          <target>The following elements and parameters are for use in the Config.xml file only.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Policies</source>
          <target>Policies</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>ErrorControl</source>
          <target>ErrorControl</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>fatal</source>
          <target>fatal</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>fileError</source>
          <target>fileError</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>nonfatal</source>
          <target>nonfatal</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>registryError</source>
          <target>registryError</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>HardLinkStoreControl</source>
          <target>HardLinkStoreControl</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>fileLocked</source>
          <target>fileLocked</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>createHardLink</source>
          <target>createHardLink</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>errorHardLink</source>
          <target>errorHardLink</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>ProfileControl</source>
          <target>ProfileControl</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>localGroups</source>
          <target>localGroups</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>mappings</source>
          <target>mappings</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>changeGroup</source>
          <target>changeGroup</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>include</source>
          <target>include</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>exclude</source>
          <target>exclude</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Sample Config.xml File</source>
          <target>Sample Config.xml File</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Policies</source>
          <target>Policies</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Policies<ph dataRef="id4" id="ph2" /></pc> element contains elements that describe the policies that USMT follows while creating a migration store.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Policies<ph dataRef="id4" id="ph2" /></pc> element contains elements that describe the policies that USMT follows while creating a migration store.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">&amp;lt;</data>
          <data id="id12">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Valid children of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Policies<ph dataRef="id4" id="ph2" /></pc> element are <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />ErrorControl<ph dataRef="id8" id="ph4" /></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p3"><ph dataRef="id11" id="ph5" />HardLinkStoreControl<ph dataRef="id12" id="ph6" /></pc>.</source>
          <target>Valid children of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Policies<ph dataRef="id4" id="ph2" /></pc> element are <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />ErrorControl<ph dataRef="id8" id="ph4" /></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p3"><ph dataRef="id11" id="ph5" />HardLinkStoreControl<ph dataRef="id12" id="ph6" /></pc>.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Policies<ph dataRef="id4" id="ph2" /></pc> element is a child of <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />Configuration<ph dataRef="id8" id="ph4" /></pc>.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Policies<ph dataRef="id4" id="ph2" /></pc> element is a child of <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />Configuration<ph dataRef="id8" id="ph4" /></pc>.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>ErrorControl</source>
          <target>ErrorControl</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> element is an optional element you can configure in the Config.xml file.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> element is an optional element you can configure in the Config.xml file.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The configurable <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> rules support only the environment variables for the operating system that is running and the currently logged-on user.</source>
          <target>The configurable <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> rules support only the environment variables for the operating system that is running and the currently logged-on user.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">\*</data>
        </originalData>
        <segment state="initial">
          <source>As a workaround, you can specify a path using the (<ph dataRef="id1" id="ph1" />) wildcard character.</source>
          <target>As a workaround, you can specify a path using the (<ph dataRef="id1" id="ph1" />) wildcard character.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />Policies<ph dataRef="id6" id="ph2" /></pc> element</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />Policies<ph dataRef="id6" id="ph2" /></pc> element</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">&amp;lt;</data>
          <data id="id10">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileError<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />registryError<ph dataRef="id10" id="ph4" /></pc> element</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileError<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />registryError<ph dataRef="id10" id="ph4" /></pc> element</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>The following example specifies that all locked files, regardless of their location (including files in C:<ph dataRef="id1" id="ph1" />Users), should be ignored.</source>
          <target>The following example specifies that all locked files, regardless of their location (including files in C:<ph dataRef="id1" id="ph1" />Users), should be ignored.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>However, the migration fails if any file in C:<ph dataRef="id1" id="ph1" />Users cannot be accessed because of any other reason.</source>
          <target>However, the migration fails if any file in C:<ph dataRef="id1" id="ph1" />Users cannot be accessed because of any other reason.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>In the example below, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> element ignores any problems in migrating registry keys that match the supplied pattern, and it resolves them to an <pc dataRefEnd="id6" dataRefStart="id5" id="p2">Access denied</pc> error.</source>
          <target>In the example below, the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> element ignores any problems in migrating registry keys that match the supplied pattern, and it resolves them to an <pc dataRefEnd="id6" dataRefStart="id5" id="p2">Access denied</pc> error.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Additionally, the order in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> section implies priority.</source>
          <target>Additionally, the order in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> section implies priority.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>In this example, the first <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />nonFatal<ph dataRef="id4" id="ph2" /></pc> tag takes precedence over the second <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />fatal<ph dataRef="id8" id="ph4" /></pc> tag.</source>
          <target>In this example, the first <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />nonFatal<ph dataRef="id4" id="ph2" /></pc> tag takes precedence over the second <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />fatal<ph dataRef="id8" id="ph4" /></pc> tag.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>This precedence is applied, regardless of how many tags are listed.</source>
          <target>This precedence is applied, regardless of how many tags are listed.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Important</source>
          <target>Important</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The configurable <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> rules support only the environment variables for the operating system that is running and the currently logged-on user.</source>
          <target>The configurable <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> rules support only the environment variables for the operating system that is running and the currently logged-on user.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">\*</data>
        </originalData>
        <segment state="initial">
          <source>As a workaround, you can specify a path using the (<ph dataRef="id1" id="ph1" />) wildcard character.</source>
          <target>As a workaround, you can specify a path using the (<ph dataRef="id1" id="ph1" />) wildcard character.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>fatal</source>
          <target>fatal</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fatal<ph dataRef="id4" id="ph2" /></pc> element is not required.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fatal<ph dataRef="id4" id="ph2" /></pc> element is not required.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">&amp;lt;</data>
          <data id="id10">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileError<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />registryError<ph dataRef="id10" id="ph4" /></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileError<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />registryError<ph dataRef="id10" id="ph4" /></pc></target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: None.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: None.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">`&lt;fatal errorCode="any"&gt;`</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></source>
          <target>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Parameter</source>
          <target>Parameter</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Required</source>
          <target>Required</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Value</source>
          <target>Value</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>errorCode</source>
          <target>errorCode</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;&lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>any<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />specify system error message here</source>
          <target>any<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />specify system error message here</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fatal<ph dataRef="id4" id="ph2" /></pc> element to specify that errors matching a specific pattern should cause USMT to halt the migration.</source>
          <target>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fatal<ph dataRef="id4" id="ph2" /></pc> element to specify that errors matching a specific pattern should cause USMT to halt the migration.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>fileError</source>
          <target>fileError</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileError<ph dataRef="id4" id="ph2" /></pc> element is not required.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileError<ph dataRef="id4" id="ph2" /></pc> element is not required.</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ErrorControl<ph dataRef="id6" id="ph2" /></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ErrorControl<ph dataRef="id6" id="ph2" /></pc></target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">&amp;lt;</data>
          <data id="id10">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />nonFatal<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />fatal<ph dataRef="id10" id="ph4" /></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />nonFatal<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />fatal<ph dataRef="id10" id="ph4" /></pc></target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileError<ph dataRef="id4" id="ph2" /></pc> element to represent the behavior associated with file errors.</source>
          <target>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileError<ph dataRef="id4" id="ph2" /></pc> element to represent the behavior associated with file errors.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>nonFatal</source>
          <target>nonFatal</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />nonFatal<ph dataRef="id4" id="ph2" /></pc> element is not required.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />nonFatal<ph dataRef="id4" id="ph2" /></pc> element is not required.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">&amp;lt;</data>
          <data id="id10">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileError<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />registryError<ph dataRef="id10" id="ph4" /></pc> elements.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: The <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileError<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />registryError<ph dataRef="id10" id="ph4" /></pc> elements.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: None.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: None.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">`&lt;nonfatal errorCode="any"&gt;`</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></source>
          <target>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Parameter</source>
          <target>Parameter</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Required</source>
          <target>Required</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Value</source>
          <target>Value</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>errorCode</source>
          <target>errorCode</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;&lt;em&gt;</data>
          <data id="id3">&lt;/em&gt;&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>any<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />specify system error message here<ph dataRef="id3" id="ph3" />.</source>
          <target>any<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />specify system error message here<ph dataRef="id3" id="ph3" />.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>If system error messages are not specified, the default behavior applies the parameter to all system error messages.</source>
          <target>If system error messages are not specified, the default behavior applies the parameter to all system error messages.</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />nonFatal<ph dataRef="id4" id="ph2" /></pc> element to specify that errors matching a specific pattern should not cause USMT to halt the migration.</source>
          <target>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />nonFatal<ph dataRef="id4" id="ph2" /></pc> element to specify that errors matching a specific pattern should not cause USMT to halt the migration.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>registryError</source>
          <target>registryError</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />registryError<ph dataRef="id4" id="ph2" /></pc>element is not required.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />registryError<ph dataRef="id4" id="ph2" /></pc>element is not required.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ErrorControl<ph dataRef="id6" id="ph2" /></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />ErrorControl<ph dataRef="id6" id="ph2" /></pc></target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">&amp;lt;</data>
          <data id="id10">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />nonfatal<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />fatal<ph dataRef="id10" id="ph4" /></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />nonfatal<ph dataRef="id6" id="ph2" /></pc> and <pc dataRefEnd="id8" dataRefStart="id7" id="p3"><ph dataRef="id9" id="ph3" />fatal<ph dataRef="id10" id="ph4" /></pc></target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Parameter</source>
          <target>Parameter</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>Required</source>
          <target>Required</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Value</source>
          <target>Value</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>errorCode</source>
          <target>errorCode</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;&lt;em&gt;</data>
          <data id="id3">&lt;/em&gt;&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>any<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />specify system error message here<ph dataRef="id3" id="ph3" />.</source>
          <target>any<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />specify system error message here<ph dataRef="id3" id="ph3" />.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>If system error messages are not specified, the default behavior applies the parameter to all system error messages.</source>
          <target>If system error messages are not specified, the default behavior applies the parameter to all system error messages.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />registryError<ph dataRef="id4" id="ph2" /></pc> element to specify that errors matching a specific pattern should not cause USMT to halt the migration.</source>
          <target>You use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />registryError<ph dataRef="id4" id="ph2" /></pc> element to specify that errors matching a specific pattern should not cause USMT to halt the migration.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>HardLinkStoreControl</source>
          <target>HardLinkStoreControl</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />HardLinkStoreControl<ph dataRef="id4" id="ph2" /></pc> element contains elements that describe how to handle files during the creation of a hard-link migration store.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />HardLinkStoreControl<ph dataRef="id4" id="ph2" /></pc> element contains elements that describe how to handle files during the creation of a hard-link migration store.</target>
        </segment>
      </unit>
      <unit id="211">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Its only valid child is <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileLocked<ph dataRef="id4" id="ph2" /></pc>.</source>
          <target>Its only valid child is <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileLocked<ph dataRef="id4" id="ph2" /></pc>.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="213">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Number of occurrences</pc>: Once for each component</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />Policies<ph dataRef="id6" id="ph2" /></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Parent elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />Policies<ph dataRef="id6" id="ph2" /></pc></target>
        </segment>
      </unit>
      <unit id="215">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileLocked<ph dataRef="id6" id="ph2" /></pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Child elements</pc>: <pc dataRefEnd="id4" dataRefStart="id3" id="p2"><ph dataRef="id5" id="ph1" />fileLocked<ph dataRef="id6" id="ph2" /></pc></target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="217">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />HardLinkStoreControl<ph dataRef="id4" id="ph2" /></pc> sample code below specifies that hard links can be created to locked files only if the locked file resides somewhere under C:<ph dataRef="id5" id="ph3" />Users<ph dataRef="id6" id="ph4" />.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />HardLinkStoreControl<ph dataRef="id4" id="ph2" /></pc> sample code below specifies that hard links can be created to locked files only if the locked file resides somewhere under C:<ph dataRef="id5" id="ph3" />Users<ph dataRef="id6" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>Otherwise, a file-access error occurs when a locked file is encountered that cannot be copied, even though is technically possible for the link to be created.</source>
          <target>Otherwise, a file-access error occurs when a locked file is encountered that cannot be copied, even though is technically possible for the link to be created.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Important</source>
          <target>Important</target>
        </segment>
      </unit>
      <unit id="220">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> section can be configured to conditionally ignore file access errors, based on the file’s location.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> section can be configured to conditionally ignore file access errors, based on the file’s location.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>fileLocked</source>
          <target>fileLocked</target>
        </segment>
      </unit>
      <unit id="222">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileLocked<ph dataRef="id4" id="ph2" /></pc> element contains elements that describe how to handle files that are locked for editing.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileLocked<ph dataRef="id4" id="ph2" /></pc> element contains elements that describe how to handle files that are locked for editing.</target>
        </segment>
      </unit>
      <unit id="223">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The rules defined by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileLocked<ph dataRef="id4" id="ph2" /></pc> element are processed in the order in which they appear in the XML file.</source>
          <target>The rules defined by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />fileLocked<ph dataRef="id4" id="ph2" /></pc> element are processed in the order in which they appear in the XML file.</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>createHardLink</source>
          <target>createHardLink</target>
        </segment>
      </unit>
      <unit id="226">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />createHardLink<ph dataRef="id4" id="ph2" /></pc> element defines a standard MigXML pattern that describes file paths where hard links should be created, even if the file is locked for editing by another application.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />createHardLink<ph dataRef="id4" id="ph2" /></pc> element defines a standard MigXML pattern that describes file paths where hard links should be created, even if the file is locked for editing by another application.</target>
        </segment>
      </unit>
      <unit id="227">
        <originalData>
          <data id="id1">`&lt;createHardLink&gt;`</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></source>
          <target>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>errorHardLink</source>
          <target>errorHardLink</target>
        </segment>
      </unit>
      <unit id="229">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />errorHardLink<ph dataRef="id4" id="ph2" /></pc> element defines a standard MigXML pattern that describes file paths where hard links should not be created if the file is locked for editing by another application.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />errorHardLink<ph dataRef="id4" id="ph2" /></pc> element defines a standard MigXML pattern that describes file paths where hard links should not be created if the file is locked for editing by another application.</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>USMT will attempt to copy files under these paths into the migration store.</source>
          <target>USMT will attempt to copy files under these paths into the migration store.</target>
        </segment>
      </unit>
      <unit id="231">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\_</data>
        </originalData>
        <segment state="initial">
          <source>However, if that is not possible, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error<ph dataRef="id3" id="ph1" />Locked</pc> is thrown.</source>
          <target>However, if that is not possible, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Error<ph dataRef="id3" id="ph1" />Locked</pc> is thrown.</target>
        </segment>
      </unit>
      <unit id="232">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>This is a standard Windows application programming interface (API) error that can be captured by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> section to either cause USMT to skip the file or abort the migration.</source>
          <target>This is a standard Windows application programming interface (API) error that can be captured by the <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />ErrorControl<ph dataRef="id4" id="ph2" /></pc> section to either cause USMT to skip the file or abort the migration.</target>
        </segment>
      </unit>
      <unit id="233">
        <originalData>
          <data id="id1">`&lt;errorHardLink&gt;`</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></source>
          <target>Syntax: <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />pattern<ph dataRef="id5" id="ph3" /></pc></target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>ProfileControl</source>
          <target>ProfileControl</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>This element is used to contain other elements that establish rules for migrating profiles, users, and policies around local group membership during the migration.</source>
          <target>This element is used to contain other elements that establish rules for migrating profiles, users, and policies around local group membership during the migration.</target>
        </segment>
      </unit>
      <unit id="236">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />ProfileMigration<ph dataRef="id4" id="ph2" /></pc> is a child of <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />Configuration<ph dataRef="id8" id="ph4" /></pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />ProfileMigration<ph dataRef="id4" id="ph2" /></pc> is a child of <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />Configuration<ph dataRef="id8" id="ph4" /></pc>.</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>localGroups</source>
          <target>localGroups</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>This element is used to contain other elements that establish rules for how to migrate local groups.</source>
          <target>This element is used to contain other elements that establish rules for how to migrate local groups.</target>
        </segment>
      </unit>
      <unit id="240">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />localGroups<ph dataRef="id4" id="ph2" /></pc> is a child of <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />ProfileControl<ph dataRef="id8" id="ph4" /></pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">
              <ph dataRef="id3" id="ph1" />localGroups<ph dataRef="id4" id="ph2" /></pc> is a child of <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />ProfileControl<ph dataRef="id8" id="ph4" /></pc>.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>mappings</source>
          <target>mappings</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>This element is used to contain other elements that establish mappings between groups.</source>
          <target>This element is used to contain other elements that establish mappings between groups.</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>changeGroup</source>
          <target>changeGroup</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>This element describes the source and destination groups for a local group membership change during the migration.</source>
          <target>This element describes the source and destination groups for a local group membership change during the migration.</target>
        </segment>
      </unit>
      <unit id="247">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>It is a child of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />localGroups<ph dataRef="id4" id="ph2" /></pc>.</source>
          <target>It is a child of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />localGroups<ph dataRef="id4" id="ph2" /></pc>.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>The following parameters are defined:</source>
          <target>The following parameters are defined:</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>Parameter</source>
          <target>Parameter</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>Required</source>
          <target>Required</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Value</source>
          <target>Value</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>From</source>
          <target>From</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>Yes</source>
          <target>Yes</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>A valid local group on the source machine that contains users selected for migration on the command line.</source>
          <target>A valid local group on the source machine that contains users selected for migration on the command line.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>To</source>
          <target>To</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>Yes</source>
          <target>Yes</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>A local group that the users are to be moved to during the migration.</source>
          <target>A local group that the users are to be moved to during the migration.</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>appliesTo</source>
          <target>appliesTo</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>Yes</source>
          <target>Yes</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>nonmigratedUsers, migratedUsers, AllUsers.</source>
          <target>nonmigratedUsers, migratedUsers, AllUsers.</target>
        </segment>
      </unit>
      <unit id="261">
        <segment state="initial">
          <source>This value defines which users the change group operation should apply to.</source>
          <target>This value defines which users the change group operation should apply to.</target>
        </segment>
      </unit>
      <unit id="262">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">&amp;lt;</data>
          <data id="id12">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The valid and required children of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />changeGroup<ph dataRef="id4" id="ph2" /></pc> are <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />include<ph dataRef="id8" id="ph4" /></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p3"><ph dataRef="id11" id="ph5" />exclude<ph dataRef="id12" id="ph6" /></pc>.</source>
          <target>The valid and required children of <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />changeGroup<ph dataRef="id4" id="ph2" /></pc> are <pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />include<ph dataRef="id8" id="ph4" /></pc> and <pc dataRefEnd="id10" dataRefStart="id9" id="p3"><ph dataRef="id11" id="ph5" />exclude<ph dataRef="id12" id="ph6" /></pc>.</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>Although both can be children at the same time, only one is required.</source>
          <target>Although both can be children at the same time, only one is required.</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>include</source>
          <target>include</target>
        </segment>
      </unit>
      <unit id="266">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>This element specifies that its required child, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />pattern<ph dataRef="id4" id="ph2" /></pc>, should be included in the migration.</source>
          <target>This element specifies that its required child, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />pattern<ph dataRef="id4" id="ph2" /></pc>, should be included in the migration.</target>
        </segment>
      </unit>
      <unit id="267">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source>exclude</source>
          <target>exclude</target>
        </segment>
      </unit>
      <unit id="269">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>This element specifies that its required child, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />pattern<ph dataRef="id4" id="ph2" /></pc>, should be excluded from the migration.</source>
          <target>This element specifies that its required child, <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />pattern<ph dataRef="id4" id="ph2" /></pc>, should be excluded from the migration.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="271">
        <segment state="initial">
          <source>Sample Config.xml File</source>
          <target>Sample Config.xml File</target>
        </segment>
      </unit>
      <unit id="272">
        <segment state="initial">
          <source>Refer to the following sample Config.xml file for additional details about items you can choose to exclude from a migration.</source>
          <target>Refer to the following sample Config.xml file for additional details about items you can choose to exclude from a migration.</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="274">
        <segment state="initial">
          <source>USMT XML Reference</source>
          <target>USMT XML Reference</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>