<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\deploy\usmt-utilities.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">4a061045335cf06a24169f312647dca8b6c5bb78</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>UsmtUtils Syntax (Windows 10)</source>
          <target>UsmtUtils Syntax (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>UsmtUtils Syntax</source>
          <target>UsmtUtils Syntax</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>UsmtUtils Syntax</source>
          <target>UsmtUtils Syntax</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>This topic describes the syntax for the utilities available in User State Migration Tool (USMT) 10.0 through the command-line interface.</source>
          <target>This topic describes the syntax for the utilities available in User State Migration Tool (USMT) 10.0 through the command-line interface.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>These utilities:</source>
          <target>These utilities:</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Improve your ability to determine cryptographic options for your migration.</source>
          <target>Improve your ability to determine cryptographic options for your migration.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Assist in removing hard-link stores that cannot otherwise be deleted due to a sharing lock.</source>
          <target>Assist in removing hard-link stores that cannot otherwise be deleted due to a sharing lock.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Verify whether the catalog file or any of the other files in the compressed migration store have become corrupted.</source>
          <target>Verify whether the catalog file or any of the other files in the compressed migration store have become corrupted.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Extract files from the compressed migration store when you migrate files and settings to the destination computer.</source>
          <target>Extract files from the compressed migration store when you migrate files and settings to the destination computer.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>In This Topic</source>
          <target>In This Topic</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Usmtutils.exe</source>
          <target>Usmtutils.exe</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Verify Options</source>
          <target>Verify Options</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Extract Options</source>
          <target>Extract Options</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Usmtutils.exe</source>
          <target>Usmtutils.exe</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>The following table lists command-line options for USMTutils.exe.</source>
          <target>The following table lists command-line options for USMTutils.exe.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The sections that follow provide further command-line options for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/extract</pc> options.</source>
          <target>The sections that follow provide further command-line options for the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">/extract</pc> options.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>The syntax for UsmtUtils.exe is:</source>
          <target>The syntax for UsmtUtils.exe is:</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">\[</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;</data>
          <data id="id6">*</data>
          <data id="id7">*</data>
          <data id="id8">&amp;lt;</data>
          <data id="id9">&amp;gt;</data>
          <data id="id10">\[</data>
          <data id="id11">\]</data>
          <data id="id12">*</data>
          <data id="id13">*</data>
          <data id="id14">&amp;lt;</data>
          <data id="id15">&amp;gt;</data>
          <data id="id16">*</data>
          <data id="id17">*</data>
          <data id="id18">&amp;lt;</data>
          <data id="id19">&amp;gt;</data>
          <data id="id20">\[</data>
        </originalData>
        <segment state="initial">
          <source>usmtutils <ph dataRef="id1" id="ph1" />/ec | /rd <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />storeDir<ph dataRef="id5" id="ph3" /></pc> | /verify <pc dataRefEnd="id7" dataRefStart="id6" id="p2"><ph dataRef="id8" id="ph4" />filepath<ph dataRef="id9" id="ph5" /></pc><ph dataRef="id10" id="ph6" />options<ph dataRef="id11" id="ph7" /> | /extract <pc dataRefEnd="id13" dataRefStart="id12" id="p3"><ph dataRef="id14" id="ph8" />filepath<ph dataRef="id15" id="ph9" /></pc><pc dataRefEnd="id17" dataRefStart="id16" id="p4"><ph dataRef="id18" id="ph10" />destinationPath<ph dataRef="id19" id="ph11" /></pc><ph dataRef="id20" id="ph12" />options</source>
          <target>usmtutils <ph dataRef="id1" id="ph1" />/ec | /rd <pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />storeDir<ph dataRef="id5" id="ph3" /></pc> | /verify <pc dataRefEnd="id7" dataRefStart="id6" id="p2"><ph dataRef="id8" id="ph4" />filepath<ph dataRef="id9" id="ph5" /></pc><ph dataRef="id10" id="ph6" />options<ph dataRef="id11" id="ph7" /> | /extract <pc dataRefEnd="id13" dataRefStart="id12" id="p3"><ph dataRef="id14" id="ph8" />filepath<ph dataRef="id15" id="ph9" /></pc><pc dataRefEnd="id17" dataRefStart="id16" id="p4"><ph dataRef="id18" id="ph10" />destinationPath<ph dataRef="id19" id="ph11" /></pc><ph dataRef="id20" id="ph12" />options</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Command-line Option</source>
          <target>Command-line Option</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>/ec</source>
          <target>/ec</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Returns a list of supported cryptographic algorithms (AlgIDs) on the current system.</source>
          <target>Returns a list of supported cryptographic algorithms (AlgIDs) on the current system.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use this on a destination computer to determine which algorithm to use with the <ph dataRef="id1" id="ph1" />/encrypt<ph dataRef="id2" id="ph2" /> command before you run the ScanState tool on the source computer.</source>
          <target>You can use this on a destination computer to determine which algorithm to use with the <ph dataRef="id1" id="ph1" />/encrypt<ph dataRef="id2" id="ph2" /> command before you run the ScanState tool on the source computer.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/rd<ph dataRef="id1" id="ph1" />storeDir</source>
          <target>/rd<ph dataRef="id1" id="ph1" />storeDir</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Removes the directory path specified by the <ph dataRef="id1" id="ph1" />storeDir<ph dataRef="id2" id="ph2" /> argument on the computer.</source>
          <target>Removes the directory path specified by the <ph dataRef="id1" id="ph1" />storeDir<ph dataRef="id2" id="ph2" /> argument on the computer.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>You can use this command to delete hard-link migration stores that cannot otherwise be deleted at a command prompt due to a sharing lock.</source>
          <target>You can use this command to delete hard-link migration stores that cannot otherwise be deleted at a command prompt due to a sharing lock.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>If the migration store spans multiple volumes on a given drive, it will be deleted from all of these volumes.</source>
          <target>If the migration store spans multiple volumes on a given drive, it will be deleted from all of these volumes.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>For example:</source>
          <target>For example:</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>/y</source>
          <target>/y</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Overrides the accept deletions prompt when used with the <ph dataRef="id1" id="ph1" />/rd<ph dataRef="id2" id="ph2" /> option.</source>
          <target>Overrides the accept deletions prompt when used with the <ph dataRef="id1" id="ph1" />/rd<ph dataRef="id2" id="ph2" /> option.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>When you use the <ph dataRef="id1" id="ph1" />/y<ph dataRef="id2" id="ph2" /> option with the <ph dataRef="id3" id="ph3" />/rd<ph dataRef="id4" id="ph4" /> option, you will not be prompted to accept the deletions before USMT deletes the directories.</source>
          <target>When you use the <ph dataRef="id1" id="ph1" />/y<ph dataRef="id2" id="ph2" /> option with the <ph dataRef="id3" id="ph3" />/rd<ph dataRef="id4" id="ph4" /> option, you will not be prompted to accept the deletions before USMT deletes the directories.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>/verify</source>
          <target>/verify</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Returns information on whether the compressed migration store is intact or whether it contains corrupted files or a corrupted catalog.</source>
          <target>Returns information on whether the compressed migration store is intact or whether it contains corrupted files or a corrupted catalog.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#bkmk-verifyoptions)</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Verify Options</pc> for syntax and options to use with <ph dataRef="id3" id="ph1" />/verify<ph dataRef="id4" id="ph2" />.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Verify Options</pc> for syntax and options to use with <ph dataRef="id3" id="ph1" />/verify<ph dataRef="id4" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>/extract</source>
          <target>/extract</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Recovers files from a compressed USMT migration store.</source>
          <target>Recovers files from a compressed USMT migration store.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#bkmk-extractoptions)</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extract Options</pc> for syntax and options to use with <ph dataRef="id3" id="ph1" />/extract<ph dataRef="id4" id="ph2" />.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Extract Options</pc> for syntax and options to use with <ph dataRef="id3" id="ph1" />/extract<ph dataRef="id4" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Verify Options</source>
          <target>Verify Options</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option when you want to determine whether a compressed migration store is intact or whether it contains corrupted files or a corrupted catalog.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option when you want to determine whether a compressed migration store is intact or whether it contains corrupted files or a corrupted catalog.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](verify-the-condition-of-a-compressed-migration-store.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information on how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Verify the Condition of a Compressed Migration Store</pc>.</source>
          <target>For more information on how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> option, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Verify the Condition of a Compressed Migration Store</pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The syntax for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> is:</source>
          <target>The syntax for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> is:</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">\[</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;</data>
          <data id="id6">\]</data>
          <data id="id7">*</data>
          <data id="id8">*</data>
          <data id="id9">&amp;lt;</data>
          <data id="id10">&amp;gt;</data>
          <data id="id11">\[</data>
          <data id="id12">*</data>
          <data id="id13">*</data>
          <data id="id14">&amp;lt;</data>
          <data id="id15">&amp;gt;</data>
          <data id="id16">\]</data>
          <data id="id17">\[</data>
          <data id="id18">*</data>
          <data id="id19">*</data>
          <data id="id20">\]</data>
          <data id="id21">\[</data>
          <data id="id22">\[</data>
          <data id="id23">*</data>
          <data id="id24">*</data>
          <data id="id25">&amp;lt;</data>
          <data id="id26">&amp;gt;</data>
          <data id="id27">\]</data>
          <data id="id28">*</data>
          <data id="id29">*</data>
          <data id="id30">&amp;lt;</data>
          <data id="id31">&amp;gt;</data>
          <data id="id32">*</data>
          <data id="id33">*</data>
          <data id="id34">&amp;lt;</data>
          <data id="id35">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>usmtutils /verify<ph dataRef="id1" id="ph1" />:<pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />reportType<ph dataRef="id5" id="ph3" /></pc><ph dataRef="id6" id="ph4" /><pc dataRefEnd="id8" dataRefStart="id7" id="p2"><ph dataRef="id9" id="ph5" />filePath<ph dataRef="id10" id="ph6" /></pc><ph dataRef="id11" id="ph7" />/l:<pc dataRefEnd="id13" dataRefStart="id12" id="p3"><ph dataRef="id14" id="ph8" />logfile<ph dataRef="id15" id="ph9" /></pc><ph dataRef="id16" id="ph10" /><ph dataRef="id17" id="ph11" />/v:<pc dataRefEnd="id19" dataRefStart="id18" id="p4">VerbosityLevel</pc><ph dataRef="id20" id="ph12" /><ph dataRef="id21" id="ph13" />/decrypt <ph dataRef="id22" id="ph14" />:<pc dataRefEnd="id24" dataRefStart="id23" id="p5"><ph dataRef="id25" id="ph15" />AlgID<ph dataRef="id26" id="ph16" /></pc><ph dataRef="id27" id="ph17" /> {/key:<pc dataRefEnd="id29" dataRefStart="id28" id="p6"><ph dataRef="id30" id="ph18" />keystring<ph dataRef="id31" id="ph19" /></pc> | /keyfile:<pc dataRefEnd="id33" dataRefStart="id32" id="p7"><ph dataRef="id34" id="ph20" />filename<ph dataRef="id35" id="ph21" /></pc>}</source>
          <target>usmtutils /verify<ph dataRef="id1" id="ph1" />:<pc dataRefEnd="id3" dataRefStart="id2" id="p1"><ph dataRef="id4" id="ph2" />reportType<ph dataRef="id5" id="ph3" /></pc><ph dataRef="id6" id="ph4" /><pc dataRefEnd="id8" dataRefStart="id7" id="p2"><ph dataRef="id9" id="ph5" />filePath<ph dataRef="id10" id="ph6" /></pc><ph dataRef="id11" id="ph7" />/l:<pc dataRefEnd="id13" dataRefStart="id12" id="p3"><ph dataRef="id14" id="ph8" />logfile<ph dataRef="id15" id="ph9" /></pc><ph dataRef="id16" id="ph10" /><ph dataRef="id17" id="ph11" />/v:<pc dataRefEnd="id19" dataRefStart="id18" id="p4">VerbosityLevel</pc><ph dataRef="id20" id="ph12" /><ph dataRef="id21" id="ph13" />/decrypt <ph dataRef="id22" id="ph14" />:<pc dataRefEnd="id24" dataRefStart="id23" id="p5"><ph dataRef="id25" id="ph15" />AlgID<ph dataRef="id26" id="ph16" /></pc><ph dataRef="id27" id="ph17" /> {/key:<pc dataRefEnd="id29" dataRefStart="id28" id="p6"><ph dataRef="id30" id="ph18" />keystring<ph dataRef="id31" id="ph19" /></pc> | /keyfile:<pc dataRefEnd="id33" dataRefStart="id32" id="p7"><ph dataRef="id34" id="ph20" />filename<ph dataRef="id35" id="ph21" /></pc>}</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Command-line Option</source>
          <target>Command-line Option</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>reportType</source>
          <target>reportType</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Specifies whether to report on all files, corrupted files only, or the status of the catalog.</source>
          <target>Specifies whether to report on all files, corrupted files only, or the status of the catalog.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Summary<ph dataRef="id1" id="ph1" />.</source>
          <target>Summary<ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Returns both the number of files that are intact and the number of files that are corrupted in the migration store.</source>
          <target>Returns both the number of files that are intact and the number of files that are corrupted in the migration store.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>If no algorithm is specified, the summary report is displayed as a default.</source>
          <target>If no algorithm is specified, the summary report is displayed as a default.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>all<ph dataRef="id1" id="ph1" />.</source>
          <target>all<ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Returns a tab-delimited list of all of the files in the compressed migration store and the status for each file.</source>
          <target>Returns a tab-delimited list of all of the files in the compressed migration store and the status for each file.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Each line contains the file name followed by a tab spacing, and either “CORRUPTED” or “OK” depending on the status of the file.</source>
          <target>Each line contains the file name followed by a tab spacing, and either “CORRUPTED” or “OK” depending on the status of the file.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>The last entry reports the corruption status of the <ph dataRef="id1" id="ph1" />CATALOG<ph dataRef="id2" id="ph2" /> of the store.</source>
          <target>The last entry reports the corruption status of the <ph dataRef="id1" id="ph1" />CATALOG<ph dataRef="id2" id="ph2" /> of the store.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>A catalog file contains metadata for all files in a migration store.</source>
          <target>A catalog file contains metadata for all files in a migration store.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>The LoadState tool requires a valid catalog file in order to open the migration store.</source>
          <target>The LoadState tool requires a valid catalog file in order to open the migration store.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
          <data id="id3">&amp;quot;</data>
          <data id="id4">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>Returns <ph dataRef="id1" id="ph1" />OK<ph dataRef="id2" id="ph2" /> if the catalog file is intact and LoadState can open the migration store and <ph dataRef="id3" id="ph3" />CORRUPTED<ph dataRef="id4" id="ph4" /> if the migration store is corrupted.</source>
          <target>Returns <ph dataRef="id1" id="ph1" />OK<ph dataRef="id2" id="ph2" /> if the catalog file is intact and LoadState can open the migration store and <ph dataRef="id3" id="ph3" />CORRUPTED<ph dataRef="id4" id="ph4" /> if the migration store is corrupted.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>failureonly<ph dataRef="id1" id="ph1" />.</source>
          <target>failureonly<ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Returns a tab-delimited list of only the files that are corrupted in the compressed migration store.</source>
          <target>Returns a tab-delimited list of only the files that are corrupted in the compressed migration store.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Catalog<ph dataRef="id1" id="ph1" />.</source>
          <target>Catalog<ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Returns only the status of the catalog file.</source>
          <target>Returns only the status of the catalog file.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>/l:</source>
          <target>/l:</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>logfilePath</source>
          <target>logfilePath</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Specifies the location and name of the log file.</source>
          <target>Specifies the location and name of the log file.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/v:<ph dataRef="id1" id="ph1" />VerbosityLevel</source>
          <target>/v:<ph dataRef="id1" id="ph1" />VerbosityLevel</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>(Verbosity)</source>
          <target>(Verbosity)</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Enables verbose output in the UsmtUtils log file.</source>
          <target>Enables verbose output in the UsmtUtils log file.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>The default value is 0.</source>
          <target>The default value is 0.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can set the <ph dataRef="id1" id="ph1" />VerbosityLevel<ph dataRef="id2" id="ph2" /> to one of the following levels:</source>
          <target>You can set the <ph dataRef="id1" id="ph1" />VerbosityLevel<ph dataRef="id2" id="ph2" /> to one of the following levels:</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Level</source>
          <target>Level</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Explanation</source>
          <target>Explanation</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>0</source>
          <target>0</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Only the default errors and warnings are enabled.</source>
          <target>Only the default errors and warnings are enabled.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>1</source>
          <target>1</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Enables verbose output.</source>
          <target>Enables verbose output.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>4</source>
          <target>4</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Enables error and status output.</source>
          <target>Enables error and status output.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>5</source>
          <target>5</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Enables verbose and status output.</source>
          <target>Enables verbose and status output.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>8</source>
          <target>8</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Enables error output to a debugger.</source>
          <target>Enables error output to a debugger.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>9</source>
          <target>9</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Enables verbose output to a debugger.</source>
          <target>Enables verbose output to a debugger.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>12</source>
          <target>12</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Enables error and status output to a debugger.</source>
          <target>Enables error and status output to a debugger.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>13</source>
          <target>13</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Enables verbose, status, and debugger output.</source>
          <target>Enables verbose, status, and debugger output.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;&lt;strong&gt;/&lt;/strong&gt;</data>
          <data id="id3">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />:<ph dataRef="id3" id="ph3" />KeyString</source>
          <target>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />:<ph dataRef="id3" id="ph3" />KeyString</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>or</source>
          <target>or</target>
        </segment>
      </unit>
      <unit id="189">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;&lt;strong&gt;/&lt;/strong&gt;</data>
          <data id="id3">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />:<ph dataRef="id3" id="ph3" />“Key String”</source>
          <target>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />:<ph dataRef="id3" id="ph3" />“Key String”</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>or</source>
          <target>or</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/decrypt:<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />/keyfile<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />FileName</source>
          <target>/decrypt:<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />/keyfile<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />FileName</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Specifies that the <ph dataRef="id1" id="ph1" />/encrypt<ph dataRef="id2" id="ph2" /> option was used to create the migration store with the ScanState tool.</source>
          <target>Specifies that the <ph dataRef="id1" id="ph1" />/encrypt<ph dataRef="id2" id="ph2" /> option was used to create the migration store with the ScanState tool.</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>To decrypt the migration store, specify a <ph dataRef="id1" id="ph1" />/key<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />/keyfile<ph dataRef="id4" id="ph4" /> option as follows:</source>
          <target>To decrypt the migration store, specify a <ph dataRef="id1" id="ph1" />/key<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />/keyfile<ph dataRef="id4" id="ph4" /> option as follows:</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>AlgID<ph dataRef="id1" id="ph1" /> specifies the cryptographic algorithm that was used to create the migration store on the ScanState command line.</source>
          <target>AlgID<ph dataRef="id1" id="ph1" /> specifies the cryptographic algorithm that was used to create the migration store on the ScanState command line.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>If no algorithm is specified, ScanState and UsmtUtils use the 3DES algorithm as a default.</source>
          <target>If no algorithm is specified, ScanState and UsmtUtils use the 3DES algorithm as a default.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>AlgID<ph dataRef="id1" id="ph1" /> valid values include: AES_128, AES_192, AES_256, 3DES, or 3DES_112.</source>
          <target>AlgID<ph dataRef="id1" id="ph1" /> valid values include: AES_128, AES_192, AES_256, 3DES, or 3DES_112.</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/key:<ph dataRef="id1" id="ph1" />KeyString<ph dataRef="id2" id="ph2" /> specifies the encryption key.</source>
          <target>/key:<ph dataRef="id1" id="ph1" />KeyString<ph dataRef="id2" id="ph2" /> specifies the encryption key.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>If there is a space in <ph dataRef="id1" id="ph1" />KeyString<ph dataRef="id2" id="ph2" />, you must surround the argument with quotation marks.</source>
          <target>If there is a space in <ph dataRef="id1" id="ph1" />KeyString<ph dataRef="id2" id="ph2" />, you must surround the argument with quotation marks.</target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;em&gt;&amp;lt;</data>
          <data id="id3">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/keyfile<ph dataRef="id1" id="ph1" />: <ph dataRef="id2" id="ph2" />FileName<ph dataRef="id3" id="ph3" /> specifies the location and name of a text (.txt) file that contains the encryption key.</source>
          <target>/keyfile<ph dataRef="id1" id="ph1" />: <ph dataRef="id2" id="ph2" />FileName<ph dataRef="id3" id="ph3" /> specifies the location and name of a text (.txt) file that contains the encryption key.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](usmt-migration-store-encryption.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about supported encryption algorithms, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Migration Store Encryption</pc></source>
          <target>For more information about supported encryption algorithms, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Migration Store Encryption</pc></target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Some examples of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> commands:</source>
          <target>Some examples of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/verify</pc> commands:</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>Extract Options</source>
          <target>Extract Options</target>
        </segment>
      </unit>
      <unit id="203">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> option to recover files from a compressed USMT migration store if it will not restore normally with loadstate.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> option to recover files from a compressed USMT migration store if it will not restore normally with loadstate.</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](usmt-extract-files-from-a-compressed-migration-store.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information on how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> option, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extract Files from a Compressed USMT Migration Store</pc>.</source>
          <target>For more information on how to use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> option, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Extract Files from a Compressed USMT Migration Store</pc>.</target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The syntax for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> is:</source>
          <target>The syntax for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> is:</target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
          <data id="id9">\[</data>
          <data id="id10">*</data>
          <data id="id11">*</data>
          <data id="id12">&amp;lt;</data>
          <data id="id13">&amp;gt;</data>
          <data id="id14">\]</data>
          <data id="id15">\[</data>
          <data id="id16">*</data>
          <data id="id17">*</data>
          <data id="id18">&amp;lt;</data>
          <data id="id19">&amp;gt;</data>
          <data id="id20">\]</data>
          <data id="id21">\[</data>
          <data id="id22">*</data>
          <data id="id23">*</data>
          <data id="id24">&amp;lt;</data>
          <data id="id25">&amp;gt;</data>
          <data id="id26">\]</data>
          <data id="id27">\[</data>
          <data id="id28">*</data>
          <data id="id29">*</data>
          <data id="id30">&amp;gt;</data>
          <data id="id31">\]</data>
          <data id="id32">\[</data>
          <data id="id33">\[</data>
          <data id="id34">*</data>
          <data id="id35">*</data>
          <data id="id36">&amp;lt;</data>
          <data id="id37">&amp;gt;</data>
          <data id="id38">\]</data>
          <data id="id39">*</data>
          <data id="id40">*</data>
          <data id="id41">&amp;lt;</data>
          <data id="id42">&amp;gt;</data>
          <data id="id43">*</data>
          <data id="id44">*</data>
          <data id="id45">&amp;lt;</data>
          <data id="id46">&amp;gt;</data>
          <data id="id47">\]</data>
          <data id="id48">\[</data>
        </originalData>
        <segment state="initial">
          <source>/extract <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />filePath<ph dataRef="id4" id="ph2" /></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />destinationPath<ph dataRef="id8" id="ph4" /></pc><ph dataRef="id9" id="ph5" />/i:<pc dataRefEnd="id11" dataRefStart="id10" id="p3"><ph dataRef="id12" id="ph6" />includePattern<ph dataRef="id13" id="ph7" /></pc><ph dataRef="id14" id="ph8" /><ph dataRef="id15" id="ph9" />/e: <pc dataRefEnd="id17" dataRefStart="id16" id="p4"><ph dataRef="id18" id="ph10" />excludePattern<ph dataRef="id19" id="ph11" /></pc><ph dataRef="id20" id="ph12" /><ph dataRef="id21" id="ph13" />/l: <pc dataRefEnd="id23" dataRefStart="id22" id="p5"><ph dataRef="id24" id="ph14" />logfile<ph dataRef="id25" id="ph15" /></pc><ph dataRef="id26" id="ph16" /><ph dataRef="id27" id="ph17" />/v: <pc dataRefEnd="id29" dataRefStart="id28" id="p6">VerbosityLevel<ph dataRef="id30" id="ph18" /></pc><ph dataRef="id31" id="ph19" /><ph dataRef="id32" id="ph20" />/decrypt<ph dataRef="id33" id="ph21" />:<pc dataRefEnd="id35" dataRefStart="id34" id="p7"><ph dataRef="id36" id="ph22" />AlgID<ph dataRef="id37" id="ph23" /></pc><ph dataRef="id38" id="ph24" /> {key: <pc dataRefEnd="id40" dataRefStart="id39" id="p8"><ph dataRef="id41" id="ph25" />keystring<ph dataRef="id42" id="ph26" /></pc> | /keyfile: <pc dataRefEnd="id44" dataRefStart="id43" id="p9"><ph dataRef="id45" id="ph27" />filename<ph dataRef="id46" id="ph28" /></pc>}<ph dataRef="id47" id="ph29" /><ph dataRef="id48" id="ph30" />/o</source>
          <target>/extract <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />filePath<ph dataRef="id4" id="ph2" /></pc><pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" />destinationPath<ph dataRef="id8" id="ph4" /></pc><ph dataRef="id9" id="ph5" />/i:<pc dataRefEnd="id11" dataRefStart="id10" id="p3"><ph dataRef="id12" id="ph6" />includePattern<ph dataRef="id13" id="ph7" /></pc><ph dataRef="id14" id="ph8" /><ph dataRef="id15" id="ph9" />/e: <pc dataRefEnd="id17" dataRefStart="id16" id="p4"><ph dataRef="id18" id="ph10" />excludePattern<ph dataRef="id19" id="ph11" /></pc><ph dataRef="id20" id="ph12" /><ph dataRef="id21" id="ph13" />/l: <pc dataRefEnd="id23" dataRefStart="id22" id="p5"><ph dataRef="id24" id="ph14" />logfile<ph dataRef="id25" id="ph15" /></pc><ph dataRef="id26" id="ph16" /><ph dataRef="id27" id="ph17" />/v: <pc dataRefEnd="id29" dataRefStart="id28" id="p6">VerbosityLevel<ph dataRef="id30" id="ph18" /></pc><ph dataRef="id31" id="ph19" /><ph dataRef="id32" id="ph20" />/decrypt<ph dataRef="id33" id="ph21" />:<pc dataRefEnd="id35" dataRefStart="id34" id="p7"><ph dataRef="id36" id="ph22" />AlgID<ph dataRef="id37" id="ph23" /></pc><ph dataRef="id38" id="ph24" /> {key: <pc dataRefEnd="id40" dataRefStart="id39" id="p8"><ph dataRef="id41" id="ph25" />keystring<ph dataRef="id42" id="ph26" /></pc> | /keyfile: <pc dataRefEnd="id44" dataRefStart="id43" id="p9"><ph dataRef="id45" id="ph27" />filename<ph dataRef="id46" id="ph28" /></pc>}<ph dataRef="id47" id="ph29" /><ph dataRef="id48" id="ph30" />/o</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Command-line Option</source>
          <target>Command-line Option</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>filePath</source>
          <target>filePath</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>Path to the USMT migration store.</source>
          <target>Path to the USMT migration store.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>For example:</source>
          <target>For example:</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>destinationPath</source>
          <target>destinationPath</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Path to the folder where the tool puts the individual files.</source>
          <target>Path to the folder where the tool puts the individual files.</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/i<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />includePattern</source>
          <target>/i<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />includePattern</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>Specifies a pattern for files to include in the extraction.</source>
          <target>Specifies a pattern for files to include in the extraction.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>You can specify more than one pattern.</source>
          <target>You can specify more than one pattern.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>Separate patterns with a comma or a semicolon.</source>
          <target>Separate patterns with a comma or a semicolon.</target>
        </segment>
      </unit>
      <unit id="218">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;em&gt;&amp;lt;</data>
          <data id="id4">&amp;gt;&lt;/em&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;em&gt;&amp;lt;</data>
          <data id="id8">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use <ph dataRef="id1" id="ph1" />/i<ph dataRef="id2" id="ph2" />: <ph dataRef="id3" id="ph3" />includePattern<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />/e<ph dataRef="id6" id="ph6" />: <ph dataRef="id7" id="ph7" />excludePattern<ph dataRef="id8" id="ph8" /> options in the same command.</source>
          <target>You can use <ph dataRef="id1" id="ph1" />/i<ph dataRef="id2" id="ph2" />: <ph dataRef="id3" id="ph3" />includePattern<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />/e<ph dataRef="id6" id="ph6" />: <ph dataRef="id7" id="ph7" />excludePattern<ph dataRef="id8" id="ph8" /> options in the same command.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>When both include and exclude patterns are used on the command line, include patterns take precedence over exclude patterns.</source>
          <target>When both include and exclude patterns are used on the command line, include patterns take precedence over exclude patterns.</target>
        </segment>
      </unit>
      <unit id="220">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/e<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />excludePattern</source>
          <target>/e<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />excludePattern</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Specifies a pattern for files to omit from the extraction.</source>
          <target>Specifies a pattern for files to omit from the extraction.</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>You can specify more than one pattern.</source>
          <target>You can specify more than one pattern.</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>Separate patterns with a comma or a semicolon.</source>
          <target>Separate patterns with a comma or a semicolon.</target>
        </segment>
      </unit>
      <unit id="224">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;em&gt;&amp;lt;</data>
          <data id="id4">&amp;gt;&lt;/em&gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&lt;em&gt;&amp;lt;</data>
          <data id="id8">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use <ph dataRef="id1" id="ph1" />/i<ph dataRef="id2" id="ph2" />: <ph dataRef="id3" id="ph3" />includePattern<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />/e<ph dataRef="id6" id="ph6" />: <ph dataRef="id7" id="ph7" />excludePattern<ph dataRef="id8" id="ph8" /> options in the same command.</source>
          <target>You can use <ph dataRef="id1" id="ph1" />/i<ph dataRef="id2" id="ph2" />: <ph dataRef="id3" id="ph3" />includePattern<ph dataRef="id4" id="ph4" /> and <ph dataRef="id5" id="ph5" />/e<ph dataRef="id6" id="ph6" />: <ph dataRef="id7" id="ph7" />excludePattern<ph dataRef="id8" id="ph8" /> options in the same command.</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>When both include and exclude patterns are used on the command line, include patterns take precedence over exclude patterns.</source>
          <target>When both include and exclude patterns are used on the command line, include patterns take precedence over exclude patterns.</target>
        </segment>
      </unit>
      <unit id="226">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/l<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />logfilePath</source>
          <target>/l<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />logfilePath</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>Specifies the location and name of the log file.</source>
          <target>Specifies the location and name of the log file.</target>
        </segment>
      </unit>
      <unit id="228">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/v:<ph dataRef="id1" id="ph1" />VerbosityLevel</source>
          <target>/v:<ph dataRef="id1" id="ph1" />VerbosityLevel</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>(Verbosity)</source>
          <target>(Verbosity)</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>Enables verbose output in the UsmtUtils log file.</source>
          <target>Enables verbose output in the UsmtUtils log file.</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>The default value is 0.</source>
          <target>The default value is 0.</target>
        </segment>
      </unit>
      <unit id="232">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can set the <ph dataRef="id1" id="ph1" />VerbosityLevel<ph dataRef="id2" id="ph2" /> to one of the following levels:</source>
          <target>You can set the <ph dataRef="id1" id="ph1" />VerbosityLevel<ph dataRef="id2" id="ph2" /> to one of the following levels:</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>Level</source>
          <target>Level</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Explanation</source>
          <target>Explanation</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>0</source>
          <target>0</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>Only the default errors and warnings are enabled.</source>
          <target>Only the default errors and warnings are enabled.</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>1</source>
          <target>1</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>Enables verbose output.</source>
          <target>Enables verbose output.</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>4</source>
          <target>4</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>Enables error and status output.</source>
          <target>Enables error and status output.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>5</source>
          <target>5</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>Enables verbose and status output.</source>
          <target>Enables verbose and status output.</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>8</source>
          <target>8</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>Enables error output to a debugger.</source>
          <target>Enables error output to a debugger.</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>9</source>
          <target>9</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>Enables verbose output to a debugger.</source>
          <target>Enables verbose output to a debugger.</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>12</source>
          <target>12</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>Enables error and status output to a debugger.</source>
          <target>Enables error and status output to a debugger.</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>13</source>
          <target>13</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>Enables verbose, status, and debugger output.</source>
          <target>Enables verbose, status, and debugger output.</target>
        </segment>
      </unit>
      <unit id="251">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />/key<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />KeyString</source>
          <target>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />/key<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />KeyString</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>or</source>
          <target>or</target>
        </segment>
      </unit>
      <unit id="253">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;&lt;strong&gt;/&lt;/strong&gt;</data>
          <data id="id3">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />:<ph dataRef="id3" id="ph3" />“Key String”</source>
          <target>/decrypt<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />:<ph dataRef="id3" id="ph3" />“Key String”</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>or</source>
          <target>or</target>
        </segment>
      </unit>
      <unit id="255">
        <originalData>
          <data id="id1">&lt;/strong&gt;&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/decrypt:<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />/keyfile<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />FileName</source>
          <target>/decrypt:<ph dataRef="id1" id="ph1" />AlgID<ph dataRef="id2" id="ph2" />/keyfile<ph dataRef="id3" id="ph3" />:<ph dataRef="id4" id="ph4" />FileName</target>
        </segment>
      </unit>
      <unit id="256">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Specifies that the <ph dataRef="id1" id="ph1" />/encrypt<ph dataRef="id2" id="ph2" /> option was used to create the migration store with the ScanState tool.</source>
          <target>Specifies that the <ph dataRef="id1" id="ph1" />/encrypt<ph dataRef="id2" id="ph2" /> option was used to create the migration store with the ScanState tool.</target>
        </segment>
      </unit>
      <unit id="257">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">&lt;strong&gt;</data>
          <data id="id4">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>To decrypt the migration store, you must also specify a <ph dataRef="id1" id="ph1" />/key<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />/keyfile<ph dataRef="id4" id="ph4" /> option as follows:</source>
          <target>To decrypt the migration store, you must also specify a <ph dataRef="id1" id="ph1" />/key<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />/keyfile<ph dataRef="id4" id="ph4" /> option as follows:</target>
        </segment>
      </unit>
      <unit id="258">
        <originalData>
          <data id="id1">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>AlgID<ph dataRef="id1" id="ph1" /> specifies the cryptographic algorithm that was used to create the migration store on the ScanState command line.</source>
          <target>AlgID<ph dataRef="id1" id="ph1" /> specifies the cryptographic algorithm that was used to create the migration store on the ScanState command line.</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>If no algorithm is specified, ScanState and UsmtUtils use the 3DES algorithm as a default.</source>
          <target>If no algorithm is specified, ScanState and UsmtUtils use the 3DES algorithm as a default.</target>
        </segment>
      </unit>
      <unit id="260">
        <originalData>
          <data id="id1">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>AlgID<ph dataRef="id1" id="ph1" /> valid values include: AES_128, AES_192, AES_256, 3DES, or 3DES_112.</source>
          <target>AlgID<ph dataRef="id1" id="ph1" /> valid values include: AES_128, AES_192, AES_256, 3DES, or 3DES_112.</target>
        </segment>
      </unit>
      <unit id="261">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;em&gt;&amp;lt;</data>
          <data id="id3">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/key<ph dataRef="id1" id="ph1" />: <ph dataRef="id2" id="ph2" />KeyString<ph dataRef="id3" id="ph3" /> specifies the encryption key.</source>
          <target>/key<ph dataRef="id1" id="ph1" />: <ph dataRef="id2" id="ph2" />KeyString<ph dataRef="id3" id="ph3" /> specifies the encryption key.</target>
        </segment>
      </unit>
      <unit id="262">
        <originalData>
          <data id="id1">&lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>If there is a space in <ph dataRef="id1" id="ph1" />KeyString<ph dataRef="id2" id="ph2" />, you must surround the argument with quotation marks.</source>
          <target>If there is a space in <ph dataRef="id1" id="ph1" />KeyString<ph dataRef="id2" id="ph2" />, you must surround the argument with quotation marks.</target>
        </segment>
      </unit>
      <unit id="263">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;em&gt;&amp;lt;</data>
          <data id="id3">&amp;gt;&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/keyfile<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />FileName<ph dataRef="id3" id="ph3" /> specifies a text (.txt) file that contains the encryption key</source>
          <target>/keyfile<ph dataRef="id1" id="ph1" />:<ph dataRef="id2" id="ph2" />FileName<ph dataRef="id3" id="ph3" /> specifies a text (.txt) file that contains the encryption key</target>
        </segment>
      </unit>
      <unit id="264">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](usmt-migration-store-encryption.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about supported encryption algorithms, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Migration Store Encryption</pc>.</source>
          <target>For more information about supported encryption algorithms, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Migration Store Encryption</pc>.</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>/o</source>
          <target>/o</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>Overwrites existing output files.</source>
          <target>Overwrites existing output files.</target>
        </segment>
      </unit>
      <unit id="267">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Some examples of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> commands:</source>
          <target>Some examples of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/extract</pc> commands:</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source>User State Migration Tool (USMT) Command-line Syntax</source>
          <target>User State Migration Tool (USMT) Command-line Syntax</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>Return Codes</source>
          <target>Return Codes</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>