<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\how-user-account-control-works.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">d20d017a9e10c353a2dd332796f61aa9633abadc</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>How User Account Control works (Windows 10)</source>
          <target>How User Account Control works (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>User Account Control (UAC) is a fundamental component of Microsoft's overall security vision.</source>
          <target>User Account Control (UAC) is a fundamental component of Microsoft's overall security vision.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>UAC helps mitigate the impact of malware.</source>
          <target>UAC helps mitigate the impact of malware.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>How User Account Control works</source>
          <target>How User Account Control works</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>User Account Control (UAC) is a fundamental component of Microsoft's overall security vision.</source>
          <target>User Account Control (UAC) is a fundamental component of Microsoft's overall security vision.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>UAC helps mitigate the impact of malware.</source>
          <target>UAC helps mitigate the impact of malware.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>UAC process and interactions</source>
          <target>UAC process and interactions</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Each app that requires the administrator access token must prompt for consent.</source>
          <target>Each app that requires the administrator access token must prompt for consent.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>The one exception is the relationship that exists between parent and child processes.</source>
          <target>The one exception is the relationship that exists between parent and child processes.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Child processes inherit the user's access token from the parent process.</source>
          <target>Child processes inherit the user's access token from the parent process.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Both the parent and child processes, however, must have the same integrity level.</source>
          <target>Both the parent and child processes, however, must have the same integrity level.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Windows 10 protects processes by marking their integrity levels.</source>
          <target>Windows 10 protects processes by marking their integrity levels.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Integrity levels are measurements of trust.</source>
          <target>Integrity levels are measurements of trust.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>A "high" integrity application is one that performs tasks that modify system data, such as a disk partitioning application, while a "low" integrity application is one that performs tasks that could potentially compromise the operating system, such as a Web browser.</source>
          <target>A "high" integrity application is one that performs tasks that modify system data, such as a disk partitioning application, while a "low" integrity application is one that performs tasks that could potentially compromise the operating system, such as a Web browser.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Apps with lower integrity levels cannot modify data in applications with higher integrity levels.</source>
          <target>Apps with lower integrity levels cannot modify data in applications with higher integrity levels.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>When a standard user attempts to run an app that requires an administrator access token, UAC requires that the user provide valid administrator credentials.</source>
          <target>When a standard user attempts to run an app that requires an administrator access token, UAC requires that the user provide valid administrator credentials.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>In order to better understand how this process happens, let's look at the Windows logon process.</source>
          <target>In order to better understand how this process happens, let's look at the Windows logon process.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Logon process</source>
          <target>Logon process</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>The following shows how the logon process for an administrator differs from the logon process for a standard user.</source>
          <target>The following shows how the logon process for an administrator differs from the logon process for a standard user.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>uac windows logon process</source>
          <target>uac windows logon process</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>By default, standard users and administrators access resources and run apps in the security context of standard users.</source>
          <target>By default, standard users and administrators access resources and run apps in the security context of standard users.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>When a user logs on to a computer, the system creates an access token for that user.</source>
          <target>When a user logs on to a computer, the system creates an access token for that user.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>The access token contains information about the level of access that the user is granted, including specific security identifiers (SIDs) and Windows privileges.</source>
          <target>The access token contains information about the level of access that the user is granted, including specific security identifiers (SIDs) and Windows privileges.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>When an administrator logs on, two separate access tokens are created for the user: a standard user access token and an administrator access token.</source>
          <target>When an administrator logs on, two separate access tokens are created for the user: a standard user access token and an administrator access token.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>The standard user access token contains the same user-specific information as the administrator access token, but the administrative Windows privileges and SIDs are removed.</source>
          <target>The standard user access token contains the same user-specific information as the administrator access token, but the administrative Windows privileges and SIDs are removed.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>The standard user access token is used to start apps that do not perform administrative tasks (standard user apps).</source>
          <target>The standard user access token is used to start apps that do not perform administrative tasks (standard user apps).</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>The standard user access token is then used to display the desktop (explorer.exe).</source>
          <target>The standard user access token is then used to display the desktop (explorer.exe).</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Explorer.exe is the parent process from which all other user-initiated processes inherit their access token.</source>
          <target>Explorer.exe is the parent process from which all other user-initiated processes inherit their access token.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>As a result, all apps run as a standard user unless a user provides consent or credentials to approve an app to use a full administrative access token.</source>
          <target>As a result, all apps run as a standard user unless a user provides consent or credentials to approve an app to use a full administrative access token.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>A user that is a member of the Administrators group can log on, browse the Web, and read e-mail while using a standard user access token.</source>
          <target>A user that is a member of the Administrators group can log on, browse the Web, and read e-mail while using a standard user access token.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>When the administrator needs to perform a task that requires the administrator access token, Windows 10 automatically prompts the user for approval.</source>
          <target>When the administrator needs to perform a task that requires the administrator access token, Windows 10 automatically prompts the user for approval.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>This prompt is called an elevation prompt, and its behavior can be configured by using the Local Security Policy snap-in (Secpol.msc) or Group Policy.</source>
          <target>This prompt is called an elevation prompt, and its behavior can be configured by using the Local Security Policy snap-in (Secpol.msc) or Group Policy.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](user-account-control-security-policy-settings.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control security policy settings</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control security policy settings</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The UAC User Experience</source>
          <target>The UAC User Experience</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>When UAC is enabled, the user experience for standard users is different from that of administrators in Admin Approval Mode.</source>
          <target>When UAC is enabled, the user experience for standard users is different from that of administrators in Admin Approval Mode.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>The recommended and more secure method of running Windows 10 is to make your primary user account a standard user account.</source>
          <target>The recommended and more secure method of running Windows 10 is to make your primary user account a standard user account.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Running as a standard user helps to maximize security for a managed environment.</source>
          <target>Running as a standard user helps to maximize security for a managed environment.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>With the built-in UAC elevation component, standard users can easily perform an administrative task by entering valid credentials for a local administrator account.</source>
          <target>With the built-in UAC elevation component, standard users can easily perform an administrative task by entering valid credentials for a local administrator account.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>The default, built-in UAC elevation component for standard users is the credential prompt.</source>
          <target>The default, built-in UAC elevation component for standard users is the credential prompt.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The alternative to running as a standard user is to run as an administrator in Admin Approval Mode.</source>
          <target>The alternative to running as a standard user is to run as an administrator in Admin Approval Mode.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>With the built-in UAC elevation component, members of the local Administrators group can easily perform an administrative task by providing approval.</source>
          <target>With the built-in UAC elevation component, members of the local Administrators group can easily perform an administrative task by providing approval.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>The default, built-in UAC elevation component for an administrator account in Admin Approval Mode is called the consent prompt.</source>
          <target>The default, built-in UAC elevation component for an administrator account in Admin Approval Mode is called the consent prompt.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>The consent and credential prompts</source>
          <target>The consent and credential prompts</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>With UAC enabled, Windows 10 prompts for consent or prompts for credentials of a valid local administrator account before starting a program or task that requires a full administrator access token.</source>
          <target>With UAC enabled, Windows 10 prompts for consent or prompts for credentials of a valid local administrator account before starting a program or task that requires a full administrator access token.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>This prompt ensures that no malicious software can be silently installed.</source>
          <target>This prompt ensures that no malicious software can be silently installed.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>The consent prompt</source>
          <target>The consent prompt</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>The consent prompt is presented when a user attempts to perform a task that requires a user's administrative access token.</source>
          <target>The consent prompt is presented when a user attempts to perform a task that requires a user's administrative access token.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>The following is an example of the UAC consent prompt.</source>
          <target>The following is an example of the UAC consent prompt.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>uac consent prompt</source>
          <target>uac consent prompt</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>The credential prompt</source>
          <target>The credential prompt</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>The credential prompt is presented when a standard user attempts to perform a task that requires a user's administrative access token.</source>
          <target>The credential prompt is presented when a standard user attempts to perform a task that requires a user's administrative access token.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Administrators can also be required to provide their credentials by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode</pc> policy setting value to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Prompt for credentials</pc>.</source>
          <target>Administrators can also be required to provide their credentials by setting the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode</pc> policy setting value to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Prompt for credentials</pc>.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>The following is an example of the UAC credential prompt.</source>
          <target>The following is an example of the UAC credential prompt.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>uac credential prompt</source>
          <target>uac credential prompt</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>UAC elevation prompts</source>
          <target>UAC elevation prompts</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>The UAC elevation prompts are color-coded to be app-specific, enabling for immediate identification of an application's potential security risk.</source>
          <target>The UAC elevation prompts are color-coded to be app-specific, enabling for immediate identification of an application's potential security risk.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>When an app attempts to run with an administrator's full access token, Windows 10 first analyzes the executable file to determine its publisher.</source>
          <target>When an app attempts to run with an administrator's full access token, Windows 10 first analyzes the executable file to determine its publisher.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Apps are first separated into three categories based on the file's publisher: Windows 10, publisher verified (signed), and publisher not verified (unsigned).</source>
          <target>Apps are first separated into three categories based on the file's publisher: Windows 10, publisher verified (signed), and publisher not verified (unsigned).</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>The following diagram illustrates how Windows 10 determines which color elevation prompt to present to the user.</source>
          <target>The following diagram illustrates how Windows 10 determines which color elevation prompt to present to the user.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>The elevation prompt color-coding is as follows:</source>
          <target>The elevation prompt color-coding is as follows:</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Red background with a red shield icon: The app is blocked by Group Policy or is from a publisher that is blocked.</source>
          <target>Red background with a red shield icon: The app is blocked by Group Policy or is from a publisher that is blocked.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Blue background with a blue and gold shield icon: The application is a Windows 10 administrative app, such as a Control Panel item.</source>
          <target>Blue background with a blue and gold shield icon: The application is a Windows 10 administrative app, such as a Control Panel item.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Blue background with a blue shield icon: The application is signed by using Authenticode and is trusted by the local computer.</source>
          <target>Blue background with a blue shield icon: The application is signed by using Authenticode and is trusted by the local computer.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Yellow background with a yellow shield icon: The application is unsigned or signed but is not yet trusted by the local computer.</source>
          <target>Yellow background with a yellow shield icon: The application is unsigned or signed but is not yet trusted by the local computer.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Shield icon</source>
          <target>Shield icon</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Some Control Panel items, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Date and Time Properties</pc>, contain a combination of administrator and standard user operations.</source>
          <target>Some Control Panel items, such as <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Date and Time Properties</pc>, contain a combination of administrator and standard user operations.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Standard users can view the clock and change the time zone, but a full administrator access token is required to change the local system time.</source>
          <target>Standard users can view the clock and change the time zone, but a full administrator access token is required to change the local system time.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following is a screen shot of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Date and Time Properties</pc> Control Panel item.</source>
          <target>The following is a screen shot of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Date and Time Properties</pc> Control Panel item.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>uac shield icon</source>
          <target>uac shield icon</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The shield icon on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Change date and time</pc> button indicates that the process requires a full administrator access token and will display a UAC elevation prompt.</source>
          <target>The shield icon on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Change date and time</pc> button indicates that the process requires a full administrator access token and will display a UAC elevation prompt.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Securing the elevation prompt</source>
          <target>Securing the elevation prompt</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>The elevation process is further secured by directing the prompt to the secure desktop.</source>
          <target>The elevation process is further secured by directing the prompt to the secure desktop.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>The consent and credential prompts are displayed on the secure desktop by default in Windows 10.</source>
          <target>The consent and credential prompts are displayed on the secure desktop by default in Windows 10.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Only Windows processes can access the secure desktop.</source>
          <target>Only Windows processes can access the secure desktop.</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For higher levels of security, we recommend keeping the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control: Switch to the secure desktop when prompting for elevation</pc> policy setting enabled.</source>
          <target>For higher levels of security, we recommend keeping the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control: Switch to the secure desktop when prompting for elevation</pc> policy setting enabled.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>When an executable file requests elevation, the interactive desktop, also called the user desktop, is switched to the secure desktop.</source>
          <target>When an executable file requests elevation, the interactive desktop, also called the user desktop, is switched to the secure desktop.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>The secure desktop dims the user desktop and displays an elevation prompt that must be responded to before continuing.</source>
          <target>The secure desktop dims the user desktop and displays an elevation prompt that must be responded to before continuing.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>When the user clicks <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">No</pc>, the desktop switches back to the user desktop.</source>
          <target>When the user clicks <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">No</pc>, the desktop switches back to the user desktop.</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Malware can present an imitation of the secure desktop, but when the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode</pc> policy setting is set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Prompt for consent</pc>, the malware does not gain elevation if the user clicks <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Yes</pc> on the imitation.</source>
          <target>Malware can present an imitation of the secure desktop, but when the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode</pc> policy setting is set to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Prompt for consent</pc>, the malware does not gain elevation if the user clicks <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Yes</pc> on the imitation.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If the policy setting is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials</pc>, malware imitating the credential prompt may be able to gather the credentials from the user.</source>
          <target>If the policy setting is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials</pc>, malware imitating the credential prompt may be able to gather the credentials from the user.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>However, the malware does not gain elevated privilege and the system has other protections that mitigate malware from taking control of the user interface even with a harvested password.</source>
          <target>However, the malware does not gain elevated privilege and the system has other protections that mitigate malware from taking control of the user interface even with a harvested password.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>While malware could present an imitation of the secure desktop, this issue cannot occur unless a user previously installed the malware on the PC.</source>
          <target>While malware could present an imitation of the secure desktop, this issue cannot occur unless a user previously installed the malware on the PC.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Because processes requiring an administrator access token cannot silently install when UAC is enabled, the user must explicitly provide consent by clicking <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc> or by providing administrator credentials.</source>
          <target>Because processes requiring an administrator access token cannot silently install when UAC is enabled, the user must explicitly provide consent by clicking <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Yes</pc> or by providing administrator credentials.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>The specific behavior of the UAC elevation prompt is dependent upon Group Policy.</source>
          <target>The specific behavior of the UAC elevation prompt is dependent upon Group Policy.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>UAC Architecture</source>
          <target>UAC Architecture</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>The following diagram details the UAC architecture.</source>
          <target>The following diagram details the UAC architecture.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>uac architecture</source>
          <target>uac architecture</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>To better understand each component, review the table below:</source>
          <target>To better understand each component, review the table below:</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Component</source>
          <target>Component</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>User</source>
          <target>User</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>User performs operation requiring privilege</source>
          <target>User performs operation requiring privilege</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>If the operation changes the file system or registry, Virtualization is called.</source>
          <target>If the operation changes the file system or registry, Virtualization is called.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>All other operations call ShellExecute.</source>
          <target>All other operations call ShellExecute.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>ShellExecute</source>
          <target>ShellExecute</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>ShellExecute calls CreateProcess.</source>
          <target>ShellExecute calls CreateProcess.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>ShellExecute looks for the ERROR_ELEVATION_REQUIRED error from CreateProcess.</source>
          <target>ShellExecute looks for the ERROR_ELEVATION_REQUIRED error from CreateProcess.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>If it receives the error, ShellExecute calls the Application Information service to attempt to perform the requested task with the elevated prompt.</source>
          <target>If it receives the error, ShellExecute calls the Application Information service to attempt to perform the requested task with the elevated prompt.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>CreateProcess</source>
          <target>CreateProcess</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>If the application requires elevation, CreateProcess rejects the call with ERROR_ELEVATION_REQUIRED.</source>
          <target>If the application requires elevation, CreateProcess rejects the call with ERROR_ELEVATION_REQUIRED.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>System</source>
          <target>System</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>Application Information service</source>
          <target>Application Information service</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>A system service that helps start apps that require one or more elevated privileges or user rights to run, such as local administrative tasks, and apps that require higher integrity levels.</source>
          <target>A system service that helps start apps that require one or more elevated privileges or user rights to run, such as local administrative tasks, and apps that require higher integrity levels.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>The Application Information service helps start such apps by creating a new process for the application with an administrative user's full access token when elevation is required and (depending on Group Policy) consent is given by the user to do so.</source>
          <target>The Application Information service helps start such apps by creating a new process for the application with an administrative user's full access token when elevation is required and (depending on Group Policy) consent is given by the user to do so.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Elevating an ActiveX install</source>
          <target>Elevating an ActiveX install</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>If ActiveX is not installed, the system checks the UAC slider level.</source>
          <target>If ActiveX is not installed, the system checks the UAC slider level.</target>
        </segment>
      </unit>
      <unit id="209">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>If ActiveX is installed, the <ph dataRef="id1" id="ph1" />User Account Control: Switch to the secure desktop when prompting for elevation<ph dataRef="id2" id="ph2" /> Group Policy setting is checked.</source>
          <target>If ActiveX is installed, the <ph dataRef="id1" id="ph1" />User Account Control: Switch to the secure desktop when prompting for elevation<ph dataRef="id2" id="ph2" /> Group Policy setting is checked.</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>Check UAC slider level</source>
          <target>Check UAC slider level</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>UAC has four levels of notification to choose from and a slider to use to select the notification level:</source>
          <target>UAC has four levels of notification to choose from and a slider to use to select the notification level:</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>High</source>
          <target>High</target>
        </segment>
      </unit>
      <unit id="213">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>If the slider is set to <ph dataRef="id1" id="ph1" />Always notify<ph dataRef="id2" id="ph2" />, the system checks whether the secure desktop is enabled.</source>
          <target>If the slider is set to <ph dataRef="id1" id="ph1" />Always notify<ph dataRef="id2" id="ph2" />, the system checks whether the secure desktop is enabled.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>Medium</source>
          <target>Medium</target>
        </segment>
      </unit>
      <unit id="215">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
          <data id="id3">&lt;b&gt;</data>
          <data id="id4">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>If the slider is set to <ph dataRef="id1" id="ph1" />Notify me only when programs try to make changes to my computer<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />User Account Control: Only elevate executable files that are signed and validated<ph dataRef="id4" id="ph4" /> policy setting is checked:</source>
          <target>If the slider is set to <ph dataRef="id1" id="ph1" />Notify me only when programs try to make changes to my computer<ph dataRef="id2" id="ph2" />, the <ph dataRef="id3" id="ph3" />User Account Control: Only elevate executable files that are signed and validated<ph dataRef="id4" id="ph4" /> policy setting is checked:</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>If the policy setting is enabled, the public key infrastructure (PKI) certification path validation is enforced for a given file before it is permitted to run.</source>
          <target>If the policy setting is enabled, the public key infrastructure (PKI) certification path validation is enforced for a given file before it is permitted to run.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>If the policy setting is not enabled (default), the PKI certification path validation is not enforced before a given file is permitted to run.</source>
          <target>If the policy setting is not enabled (default), the PKI certification path validation is not enforced before a given file is permitted to run.</target>
        </segment>
      </unit>
      <unit id="218">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />User Account Control: Switch to the secure desktop when prompting for elevation<ph dataRef="id2" id="ph2" /> Group Policy setting is checked.</source>
          <target>The <ph dataRef="id1" id="ph1" />User Account Control: Switch to the secure desktop when prompting for elevation<ph dataRef="id2" id="ph2" /> Group Policy setting is checked.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Low</source>
          <target>Low</target>
        </segment>
      </unit>
      <unit id="220">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>If the slider is set to <ph dataRef="id1" id="ph1" />Notify me only when apps try to make changes to my computer (do not dim by desktop)<ph dataRef="id2" id="ph2" />, the CreateProcess is called.</source>
          <target>If the slider is set to <ph dataRef="id1" id="ph1" />Notify me only when apps try to make changes to my computer (do not dim by desktop)<ph dataRef="id2" id="ph2" />, the CreateProcess is called.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Never Notify</source>
          <target>Never Notify</target>
        </segment>
      </unit>
      <unit id="222">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>If the slider is set to <ph dataRef="id1" id="ph1" />Never notify me when<ph dataRef="id2" id="ph2" />, UAC prompt will never notify when an app is trying to install or trying to make any change on the computer.</source>
          <target>If the slider is set to <ph dataRef="id1" id="ph1" />Never notify me when<ph dataRef="id2" id="ph2" />, UAC prompt will never notify when an app is trying to install or trying to make any change on the computer.</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>Important</source>
          <target>Important</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>This setting is not recommended.</source>
          <target>This setting is not recommended.</target>
        </segment>
      </unit>
      <unit id="225">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
          <data id="id3">&lt;b&gt;</data>
          <data id="id4">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>This setting is the same as setting the <ph dataRef="id1" id="ph1" />User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode<ph dataRef="id2" id="ph2" /> policy setting to <ph dataRef="id3" id="ph3" />Elevate without prompting<ph dataRef="id4" id="ph4" />.</source>
          <target>This setting is the same as setting the <ph dataRef="id1" id="ph1" />User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode<ph dataRef="id2" id="ph2" /> policy setting to <ph dataRef="id3" id="ph3" />Elevate without prompting<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>Secure desktop enabled</source>
          <target>Secure desktop enabled</target>
        </segment>
      </unit>
      <unit id="227">
        <originalData>
          <data id="id1">&lt;b&gt;</data>
          <data id="id2">&lt;/b&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />User Account Control: Switch to the secure desktop when prompting for elevation<ph dataRef="id2" id="ph2" /> policy setting is checked:</source>
          <target>The <ph dataRef="id1" id="ph1" />User Account Control: Switch to the secure desktop when prompting for elevation<ph dataRef="id2" id="ph2" /> policy setting is checked:</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>If the secure desktop is enabled, all elevation requests go to the secure desktop regardless of prompt behavior policy settings for administrators and standard users.</source>
          <target>If the secure desktop is enabled, all elevation requests go to the secure desktop regardless of prompt behavior policy settings for administrators and standard users.</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>If the secure desktop is not enabled, all elevation requests go to the interactive user's desktop, and the per-user settings for administrators and standard users are used.</source>
          <target>If the secure desktop is not enabled, all elevation requests go to the interactive user's desktop, and the per-user settings for administrators and standard users are used.</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>CreateProcess</source>
          <target>CreateProcess</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>CreateProcess calls AppCompat, Fusion, and Installer detection to assess if the app requires elevation.</source>
          <target>CreateProcess calls AppCompat, Fusion, and Installer detection to assess if the app requires elevation.</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>The file is then inspected to determine its requested execution level, which is stored in the application manifest for the file.</source>
          <target>The file is then inspected to determine its requested execution level, which is stored in the application manifest for the file.</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>CreateProcess fails if the requested execution level specified in the manifest does not match the access token and returns an error (ERROR_ELEVATION_REQUIRED) to ShellExecute.</source>
          <target>CreateProcess fails if the requested execution level specified in the manifest does not match the access token and returns an error (ERROR_ELEVATION_REQUIRED) to ShellExecute.</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>AppCompat</source>
          <target>AppCompat</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>The AppCompat database stores information in the application compatibility fix entries for an application.</source>
          <target>The AppCompat database stores information in the application compatibility fix entries for an application.</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>Fusion</source>
          <target>Fusion</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>The Fusion database stores information from application manifests that describe the applications.</source>
          <target>The Fusion database stores information from application manifests that describe the applications.</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>The manifest schema is updated to add a new requested execution level field.</source>
          <target>The manifest schema is updated to add a new requested execution level field.</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>Installer detection</source>
          <target>Installer detection</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>Installer detection detects setup files, which helps prevent installations from being run without the user's knowledge and consent.</source>
          <target>Installer detection detects setup files, which helps prevent installations from being run without the user's knowledge and consent.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Kernel</source>
          <target>Kernel</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>Virtualization</source>
          <target>Virtualization</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>Virtualization technology ensures that non-compliant apps do not silently fail to run or fail in a way that the cause cannot be determined.</source>
          <target>Virtualization technology ensures that non-compliant apps do not silently fail to run or fail in a way that the cause cannot be determined.</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>UAC also provides file and registry virtualization and logging for applications that write to protected areas.</source>
          <target>UAC also provides file and registry virtualization and logging for applications that write to protected areas.</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>File system and registry</source>
          <target>File system and registry</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>The per-user file and registry virtualization redirects per-computer registry and file write requests to equivalent per-user locations.</source>
          <target>The per-user file and registry virtualization redirects per-computer registry and file write requests to equivalent per-user locations.</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>Read requests are redirected to the virtualized per-user location first and to the per-computer location second.</source>
          <target>Read requests are redirected to the virtualized per-user location first and to the per-computer location second.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>The slider will never turn UAC completely off.</source>
          <target>The slider will never turn UAC completely off.</target>
        </segment>
      </unit>
      <unit id="249">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you set it to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Never notify</pc>, it will:</source>
          <target>If you set it to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Never notify</pc>, it will:</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>Keep the UAC service running.</source>
          <target>Keep the UAC service running.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Cause all elevation request initiated by administrators to be auto-approved without showing a UAC prompt.</source>
          <target>Cause all elevation request initiated by administrators to be auto-approved without showing a UAC prompt.</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>Automatically deny all elevation requests for standard users.</source>
          <target>Automatically deny all elevation requests for standard users.</target>
        </segment>
      </unit>
      <unit id="253">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  In order to fully disable UAC you must disable the policy <pc dataRefEnd="id4" dataRefStart="id3" id="p2">User Account Control: Run all administrators in Admin Approval Mode</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  In order to fully disable UAC you must disable the policy <pc dataRefEnd="id4" dataRefStart="id3" id="p2">User Account Control: Run all administrators in Admin Approval Mode</pc>.</target>
        </segment>
      </unit>
      <unit id="254">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Warning:</pc>  Universal Windows apps will not work when UAC is disabled.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Warning:</pc>  Universal Windows apps will not work when UAC is disabled.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>Virtualization</source>
          <target>Virtualization</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>Because system administrators in enterprise environments attempt to secure systems, many line-of-business (LOB) applications are designed to use only a standard user access token.</source>
          <target>Because system administrators in enterprise environments attempt to secure systems, many line-of-business (LOB) applications are designed to use only a standard user access token.</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>As a result, you do not need to replace the majority of apps when UAC is turned on.</source>
          <target>As a result, you do not need to replace the majority of apps when UAC is turned on.</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>Windows 10 includes file and registry virtualization technology for apps that are not UAC-compliant and that require an administrator's access token to run correctly.</source>
          <target>Windows 10 includes file and registry virtualization technology for apps that are not UAC-compliant and that require an administrator's access token to run correctly.</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>When an administrative apps that is not UAC-compliant attempts to write to a protected folder, such as Program Files, UAC gives the app its own virtualized view of the resource it is attempting to change.</source>
          <target>When an administrative apps that is not UAC-compliant attempts to write to a protected folder, such as Program Files, UAC gives the app its own virtualized view of the resource it is attempting to change.</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>The virtualized copy is maintained in the user's profile.</source>
          <target>The virtualized copy is maintained in the user's profile.</target>
        </segment>
      </unit>
      <unit id="261">
        <segment state="initial">
          <source>This strategy creates a separate copy of the virtualized file for each user that runs the non-compliant app.</source>
          <target>This strategy creates a separate copy of the virtualized file for each user that runs the non-compliant app.</target>
        </segment>
      </unit>
      <unit id="262">
        <segment state="initial">
          <source>Most app tasks operate properly by using virtualization features.</source>
          <target>Most app tasks operate properly by using virtualization features.</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>Although virtualization allows a majority of applications to run, it is a short-term fix and not a long-term solution.</source>
          <target>Although virtualization allows a majority of applications to run, it is a short-term fix and not a long-term solution.</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source>App developers should modify their apps to be compliant as soon as possible, rather than relying on file, folder, and registry virtualization.</source>
          <target>App developers should modify their apps to be compliant as soon as possible, rather than relying on file, folder, and registry virtualization.</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>Virtualization is not an option in the following scenarios:</source>
          <target>Virtualization is not an option in the following scenarios:</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>Virtualization does not apply to apps that are elevated and run with a full administrative access token.</source>
          <target>Virtualization does not apply to apps that are elevated and run with a full administrative access token.</target>
        </segment>
      </unit>
      <unit id="267">
        <segment state="initial">
          <source>Virtualization supports only 32-bit apps.</source>
          <target>Virtualization supports only 32-bit apps.</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source>Non-elevated 64-bit apps simply receive an access denied message when they attempt to acquire a handle (a unique identifier) to a Windows object.</source>
          <target>Non-elevated 64-bit apps simply receive an access denied message when they attempt to acquire a handle (a unique identifier) to a Windows object.</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source>Native Windows 64-bit apps are required to be compatible with UAC and to write data into the correct locations.</source>
          <target>Native Windows 64-bit apps are required to be compatible with UAC and to write data into the correct locations.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>Virtualization is disabled if the app includes an app manifest with a requested execution level attribute.</source>
          <target>Virtualization is disabled if the app includes an app manifest with a requested execution level attribute.</target>
        </segment>
      </unit>
      <unit id="271">
        <segment state="initial">
          <source>Request execution levels</source>
          <target>Request execution levels</target>
        </segment>
      </unit>
      <unit id="272">
        <segment state="initial">
          <source>An app manifest is an XML file that describes and identifies the shared and private side-by-side assemblies that an app should bind to at run time.</source>
          <target>An app manifest is an XML file that describes and identifies the shared and private side-by-side assemblies that an app should bind to at run time.</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>The app manifest includes entries for UAC app compatibility purposes.</source>
          <target>The app manifest includes entries for UAC app compatibility purposes.</target>
        </segment>
      </unit>
      <unit id="274">
        <segment state="initial">
          <source>Administrative apps that include an entry in the app manifest prompt the user for permission to access the user's access token.</source>
          <target>Administrative apps that include an entry in the app manifest prompt the user for permission to access the user's access token.</target>
        </segment>
      </unit>
      <unit id="275">
        <segment state="initial">
          <source>Although they lack an entry in the app manifest, most administrative app can run without modification by using app compatibility fixes.</source>
          <target>Although they lack an entry in the app manifest, most administrative app can run without modification by using app compatibility fixes.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source>App compatibility fixes are database entries that enable applications that are not UAC-compliant to work properly.</source>
          <target>App compatibility fixes are database entries that enable applications that are not UAC-compliant to work properly.</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source>All UAC-compliant apps should have a requested execution level added to the application manifest.</source>
          <target>All UAC-compliant apps should have a requested execution level added to the application manifest.</target>
        </segment>
      </unit>
      <unit id="278">
        <segment state="initial">
          <source>If the application requires administrative access to the system, then marking the app with a requested execution level of "require administrator" ensures that the system identifies this program as an administrative app and performs the necessary elevation steps.</source>
          <target>If the application requires administrative access to the system, then marking the app with a requested execution level of "require administrator" ensures that the system identifies this program as an administrative app and performs the necessary elevation steps.</target>
        </segment>
      </unit>
      <unit id="279">
        <segment state="initial">
          <source>Requested execution levels specify the privileges required for an app.</source>
          <target>Requested execution levels specify the privileges required for an app.</target>
        </segment>
      </unit>
      <unit id="280">
        <segment state="initial">
          <source>Installer detection technology</source>
          <target>Installer detection technology</target>
        </segment>
      </unit>
      <unit id="281">
        <segment state="initial">
          <source>Installation programs are apps designed to deploy software.</source>
          <target>Installation programs are apps designed to deploy software.</target>
        </segment>
      </unit>
      <unit id="282">
        <segment state="initial">
          <source>Most installation programs write to system directories and registry keys.</source>
          <target>Most installation programs write to system directories and registry keys.</target>
        </segment>
      </unit>
      <unit id="283">
        <segment state="initial">
          <source>These protected system locations are typically writeable only by an administrator in Installer detection technology, which means that standard users do not have sufficient access to install programs.</source>
          <target>These protected system locations are typically writeable only by an administrator in Installer detection technology, which means that standard users do not have sufficient access to install programs.</target>
        </segment>
      </unit>
      <unit id="284">
        <segment state="initial">
          <source>Windows 10 heuristically detects installation programs and requests administrator credentials or approval from the administrator user in order to run with access privileges.</source>
          <target>Windows 10 heuristically detects installation programs and requests administrator credentials or approval from the administrator user in order to run with access privileges.</target>
        </segment>
      </unit>
      <unit id="285">
        <segment state="initial">
          <source>Windows 10 also heuristically detects updates and programs that uninstall applications.</source>
          <target>Windows 10 also heuristically detects updates and programs that uninstall applications.</target>
        </segment>
      </unit>
      <unit id="286">
        <segment state="initial">
          <source>One of the design goals of UAC is to prevent installations from being run without the user's knowledge and consent because installation programs write to protected areas of the file system and registry.</source>
          <target>One of the design goals of UAC is to prevent installations from being run without the user's knowledge and consent because installation programs write to protected areas of the file system and registry.</target>
        </segment>
      </unit>
      <unit id="287">
        <segment state="initial">
          <source>Installer detection only applies to:</source>
          <target>Installer detection only applies to:</target>
        </segment>
      </unit>
      <unit id="288">
        <segment state="initial">
          <source>32-bit executable files.</source>
          <target>32-bit executable files.</target>
        </segment>
      </unit>
      <unit id="289">
        <segment state="initial">
          <source>Applications without a requested execution level attribute.</source>
          <target>Applications without a requested execution level attribute.</target>
        </segment>
      </unit>
      <unit id="290">
        <segment state="initial">
          <source>Interactive processes running as a standard user with UAC enabled.</source>
          <target>Interactive processes running as a standard user with UAC enabled.</target>
        </segment>
      </unit>
      <unit id="291">
        <segment state="initial">
          <source>Before a 32-bit process is created, the following attributes are checked to determine whether it is an installer:</source>
          <target>Before a 32-bit process is created, the following attributes are checked to determine whether it is an installer:</target>
        </segment>
      </unit>
      <unit id="292">
        <segment state="initial">
          <source>The file name includes keywords such as "install," "setup," or "update."</source>
          <target>The file name includes keywords such as "install," "setup," or "update."</target>
        </segment>
      </unit>
      <unit id="293">
        <segment state="initial">
          <source>Versioning Resource fields contain the following keywords: Vendor, Company Name, Product Name, File Description, Original Filename, Internal Name, and Export Name.</source>
          <target>Versioning Resource fields contain the following keywords: Vendor, Company Name, Product Name, File Description, Original Filename, Internal Name, and Export Name.</target>
        </segment>
      </unit>
      <unit id="294">
        <segment state="initial">
          <source>Keywords in the side-by-side manifest are embedded in the executable file.</source>
          <target>Keywords in the side-by-side manifest are embedded in the executable file.</target>
        </segment>
      </unit>
      <unit id="295">
        <segment state="initial">
          <source>Keywords in specific StringTable entries are linked in the executable file.</source>
          <target>Keywords in specific StringTable entries are linked in the executable file.</target>
        </segment>
      </unit>
      <unit id="296">
        <segment state="initial">
          <source>Key attributes in the resource script data are linked in the executable file.</source>
          <target>Key attributes in the resource script data are linked in the executable file.</target>
        </segment>
      </unit>
      <unit id="297">
        <segment state="initial">
          <source>There are targeted sequences of bytes within the executable file.</source>
          <target>There are targeted sequences of bytes within the executable file.</target>
        </segment>
      </unit>
      <unit id="298">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  The keywords and sequences of bytes were derived from common characteristics observed from various installer technologies.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  The keywords and sequences of bytes were derived from common characteristics observed from various installer technologies.</target>
        </segment>
      </unit>
      <unit id="299">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  The User Account Control: Detect application installations and prompt for elevation policy setting must be enabled for installer detection to detect installation programs.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  The User Account Control: Detect application installations and prompt for elevation policy setting must be enabled for installer detection to detect installation programs.</target>
        </segment>
      </unit>
      <unit id="300">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](user-account-control-security-policy-settings.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control security policy settings</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control security policy settings</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>