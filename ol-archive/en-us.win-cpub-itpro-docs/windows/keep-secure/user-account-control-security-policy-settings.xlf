<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\user-account-control-security-policy-settings.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">b2bcbc331e3eddadaa751c27114aa536de1c82c1</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>User Account Control security policy settings (Windows 10)</source>
          <target>User Account Control security policy settings (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>You can use security policies to configure how User Account Control works in your organization.</source>
          <target>You can use security policies to configure how User Account Control works in your organization.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>They can be configured locally by using the Local Security Policy snap-in (secpol.msc) or configured for the domain, OU, or specific groups by Group Policy.</source>
          <target>They can be configured locally by using the Local Security Policy snap-in (secpol.msc) or configured for the domain, OU, or specific groups by Group Policy.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>User Account Control security policy settings</source>
          <target>User Account Control security policy settings</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>You can use security policies to configure how User Account Control works in your organization.</source>
          <target>You can use security policies to configure how User Account Control works in your organization.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>They can be configured locally by using the Local Security Policy snap-in (secpol.msc) or configured for the domain, OU, or specific groups by Group Policy.</source>
          <target>They can be configured locally by using the Local Security Policy snap-in (secpol.msc) or configured for the domain, OU, or specific groups by Group Policy.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>User Account Control: Admin Approval Mode for the Built-in Administrator account</source>
          <target>User Account Control: Admin Approval Mode for the Built-in Administrator account</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>This policy setting controls the behavior of Admin Approval Mode for the built-in Administrator account.</source>
          <target>This policy setting controls the behavior of Admin Approval Mode for the built-in Administrator account.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> The built-in Administrator account uses Admin Approval Mode.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> The built-in Administrator account uses Admin Approval Mode.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>By default, any operation that requires elevation of privilege will prompt the user to approve the operation.</source>
          <target>By default, any operation that requires elevation of privilege will prompt the user to approve the operation.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> (Default) The built-in Administrator account runs all applications with full administrative privilege.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> (Default) The built-in Administrator account runs all applications with full administrative privilege.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>User Account Control: Allow UIAccess application to prompt for elevation without using the secure desktop</source>
          <target>User Account Control: Allow UIAccess application to prompt for elevation without using the secure desktop</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>This policy setting controls whether User Interface Accessibility (UIAccess or UIA) programs can automatically disable the secure desktop for elevation prompts used by a standard user.</source>
          <target>This policy setting controls whether User Interface Accessibility (UIAccess or UIA) programs can automatically disable the secure desktop for elevation prompts used by a standard user.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> UIA programs, including Windows Remote Assistance, automatically disable the secure desktop for elevation prompts.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> UIA programs, including Windows Remote Assistance, automatically disable the secure desktop for elevation prompts.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>If you do not disable the "User Account Control: Switch to the secure desktop when prompting for elevation" policy setting, the prompts appear on the interactive user's desktop instead of the secure desktop.</source>
          <target>If you do not disable the "User Account Control: Switch to the secure desktop when prompting for elevation" policy setting, the prompts appear on the interactive user's desktop instead of the secure desktop.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> (Default) The secure desktop can be disabled only by the user of the interactive desktop or by disabling the "User Account Control: Switch to the secure desktop when prompting for elevation" policy setting.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> (Default) The secure desktop can be disabled only by the user of the interactive desktop or by disabling the "User Account Control: Switch to the secure desktop when prompting for elevation" policy setting.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode</source>
          <target>User Account Control: Behavior of the elevation prompt for administrators in Admin Approval Mode</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>This policy setting controls the behavior of the elevation prompt for administrators.</source>
          <target>This policy setting controls the behavior of the elevation prompt for administrators.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Elevate without prompting</pc> Allows privileged accounts to perform an operation that requires elevation without requiring consent or credentials.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Elevate without prompting</pc> Allows privileged accounts to perform an operation that requires elevation without requiring consent or credentials.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Use this option only in the most constrained environments.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Use this option only in the most constrained environments.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials on the secure desktop</pc> When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a privileged user name and password.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials on the secure desktop</pc> When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a privileged user name and password.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>If the user enters valid credentials, the operation continues with the user's highest available privilege.</source>
          <target>If the user enters valid credentials, the operation continues with the user's highest available privilege.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for consent on the secure desktop</pc> When an operation requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for consent on the secure desktop</pc> When an operation requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>If the user selects Permit, the operation continues with the user's highest available privilege.</source>
          <target>If the user selects Permit, the operation continues with the user's highest available privilege.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials</pc> When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials</pc> When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>If the user enters valid credentials, the operation continues with the applicable privilege.</source>
          <target>If the user enters valid credentials, the operation continues with the applicable privilege.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for consent</pc> When an operation requires elevation of privilege, the user is prompted to select either Permit or Deny.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for consent</pc> When an operation requires elevation of privilege, the user is prompted to select either Permit or Deny.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>If the user selects Permit, the operation continues with the user's highest available privilege.</source>
          <target>If the user selects Permit, the operation continues with the user's highest available privilege.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for consent for non-Windows binaries</pc> (Default) When an operation for a non-Microsoft application requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for consent for non-Windows binaries</pc> (Default) When an operation for a non-Microsoft application requires elevation of privilege, the user is prompted on the secure desktop to select either Permit or Deny.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>If the user selects Permit, the operation continues with the user's highest available privilege.</source>
          <target>If the user selects Permit, the operation continues with the user's highest available privilege.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>User Account Control: Behavior of the elevation prompt for standard users</source>
          <target>User Account Control: Behavior of the elevation prompt for standard users</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>This policy setting controls the behavior of the elevation prompt for standard users.</source>
          <target>This policy setting controls the behavior of the elevation prompt for standard users.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials</pc> (Default) When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials</pc> (Default) When an operation requires elevation of privilege, the user is prompted to enter an administrative user name and password.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>If the user enters valid credentials, the operation continues with the applicable privilege.</source>
          <target>If the user enters valid credentials, the operation continues with the applicable privilege.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Automatically deny elevation requests</pc> When an operation requires elevation of privilege, a configurable access denied error message is displayed.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Automatically deny elevation requests</pc> When an operation requires elevation of privilege, a configurable access denied error message is displayed.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>An enterprise that is running desktops as standard user may choose this setting to reduce help desk calls.</source>
          <target>An enterprise that is running desktops as standard user may choose this setting to reduce help desk calls.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials on the secure desktop</pc> When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a different user name and password.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Prompt for credentials on the secure desktop</pc> When an operation requires elevation of privilege, the user is prompted on the secure desktop to enter a different user name and password.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>If the user enters valid credentials, the operation continues with the applicable privilege.</source>
          <target>If the user enters valid credentials, the operation continues with the applicable privilege.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>User Account Control: Detect application installations and prompt for elevation</source>
          <target>User Account Control: Detect application installations and prompt for elevation</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>This policy setting controls the behavior of application installation detection for the computer.</source>
          <target>This policy setting controls the behavior of application installation detection for the computer.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) When an app installation package is detected that requires elevation of privilege, the user is prompted to enter an administrative user name and password.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) When an app installation package is detected that requires elevation of privilege, the user is prompted to enter an administrative user name and password.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>If the user enters valid credentials, the operation continues with the applicable privilege.</source>
          <target>If the user enters valid credentials, the operation continues with the applicable privilege.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> App installation packages are not detected and prompted for elevation.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> App installation packages are not detected and prompted for elevation.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Enterprises that are running standard user desktops and use delegated installation technologies, such as Group Policy or System Center Configuration Manager should disable this policy setting.</source>
          <target>Enterprises that are running standard user desktops and use delegated installation technologies, such as Group Policy or System Center Configuration Manager should disable this policy setting.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>In this case, installer detection is unnecessary.</source>
          <target>In this case, installer detection is unnecessary.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>User Account Control: Only elevate executable files that are signed and validated</source>
          <target>User Account Control: Only elevate executable files that are signed and validated</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>This policy setting enforces public key infrastructure (PKI) signature checks for any interactive applications that request elevation of privilege.</source>
          <target>This policy setting enforces public key infrastructure (PKI) signature checks for any interactive applications that request elevation of privilege.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Enterprise administrators can control which applications are allowed to run by adding certificates to the Trusted Publishers certificate store on local computers.</source>
          <target>Enterprise administrators can control which applications are allowed to run by adding certificates to the Trusted Publishers certificate store on local computers.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> Enforces the certificate certification path validation for a given executable file before it is permitted to run.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> Enforces the certificate certification path validation for a given executable file before it is permitted to run.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> (Default) Does not enforce the certificate certification path validation before a given executable file is permitted to run.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> (Default) Does not enforce the certificate certification path validation before a given executable file is permitted to run.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>User Account Control: Only elevate UIAccess applications that are installed in secure locations</source>
          <target>User Account Control: Only elevate UIAccess applications that are installed in secure locations</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>This policy setting controls whether applications that request to run with a User Interface Accessibility (UIAccess) integrity level must reside in a secure location in the file system.</source>
          <target>This policy setting controls whether applications that request to run with a User Interface Accessibility (UIAccess) integrity level must reside in a secure location in the file system.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>Secure locations are limited to the following: - …<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />, including subfolders - …<ph dataRef="id3" id="ph3" />Windows<ph dataRef="id4" id="ph4" />system32<ph dataRef="id5" id="ph5" /> - …<ph dataRef="id6" id="ph6" />Program Files (x86)<ph dataRef="id7" id="ph7" />, including subfolders for 64-bit versions of Windows</source>
          <target>Secure locations are limited to the following: - …<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />, including subfolders - …<ph dataRef="id3" id="ph3" />Windows<ph dataRef="id4" id="ph4" />system32<ph dataRef="id5" id="ph5" /> - …<ph dataRef="id6" id="ph6" />Program Files (x86)<ph dataRef="id7" id="ph7" />, including subfolders for 64-bit versions of Windows</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Windows enforces a digital signature check on any interactive app that requests to run with a UIAccess integrity level regardless of the state of this security setting.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Windows enforces a digital signature check on any interactive app that requests to run with a UIAccess integrity level regardless of the state of this security setting.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) If an app resides in a secure location in the file system, it runs only with UIAccess integrity.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) If an app resides in a secure location in the file system, it runs only with UIAccess integrity.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> An app runs with UIAccess integrity even if it does not reside in a secure location in the file system.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> An app runs with UIAccess integrity even if it does not reside in a secure location in the file system.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>User Account Control: Turn on Admin Approval Mode</source>
          <target>User Account Control: Turn on Admin Approval Mode</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>This policy setting controls the behavior of all User Account Control (UAC) policy settings for the computer.</source>
          <target>This policy setting controls the behavior of all User Account Control (UAC) policy settings for the computer.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>If you change this policy setting, you must restart your computer.</source>
          <target>If you change this policy setting, you must restart your computer.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) Admin Approval Mode is enabled.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) Admin Approval Mode is enabled.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>This policy must be enabled and related UAC policy settings must also be set appropriately to allow the built-in Administrator account and all other users who are members of the Administrators group to run in Admin Approval Mode.</source>
          <target>This policy must be enabled and related UAC policy settings must also be set appropriately to allow the built-in Administrator account and all other users who are members of the Administrators group to run in Admin Approval Mode.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> Admin Approval Mode and all related UAC policy settings are disabled.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> Admin Approval Mode and all related UAC policy settings are disabled.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Note: If this policy setting is disabled, the Security Center notifies you that the overall security of the operating system has been reduced.</source>
          <target>Note: If this policy setting is disabled, the Security Center notifies you that the overall security of the operating system has been reduced.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>User Account Control: Switch to the secure desktop when prompting for elevation</source>
          <target>User Account Control: Switch to the secure desktop when prompting for elevation</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>This policy setting controls whether the elevation request prompt is displayed on the interactive user's desktop or the secure desktop.</source>
          <target>This policy setting controls whether the elevation request prompt is displayed on the interactive user's desktop or the secure desktop.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) All elevation requests go to the secure desktop regardless of prompt behavior policy settings for administrators and standard users.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) All elevation requests go to the secure desktop regardless of prompt behavior policy settings for administrators and standard users.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> All elevation requests go to the interactive user's desktop.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> All elevation requests go to the interactive user's desktop.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Prompt behavior policy settings for administrators and standard users are used.</source>
          <target>Prompt behavior policy settings for administrators and standard users are used.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>User Account Control: Virtualize file and registry write failures to per-user locations</source>
          <target>User Account Control: Virtualize file and registry write failures to per-user locations</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>This policy setting controls whether application write failures are redirected to defined registry and file system locations.</source>
          <target>This policy setting controls whether application write failures are redirected to defined registry and file system locations.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>This policy setting mitigates applications that run as administrator and write run-time application data to %ProgramFiles%, %Windir%, %Windir%<ph dataRef="id1" id="ph1" />system32, or HKLM<ph dataRef="id2" id="ph2" />Software.</source>
          <target>This policy setting mitigates applications that run as administrator and write run-time application data to %ProgramFiles%, %Windir%, %Windir%<ph dataRef="id1" id="ph1" />system32, or HKLM<ph dataRef="id2" id="ph2" />Software.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) App write failures are redirected at run time to defined user locations for both the file system and registry.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabled</pc> (Default) App write failures are redirected at run time to defined user locations for both the file system and registry.</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> Apps that write data to protected locations fail.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabled</pc> Apps that write data to protected locations fail.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>