<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\protect-high-value-assets-by-controlling-the-health-of-windows-10-based-devices.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">393eee6aa80401ff86a99994e91d068a3c7c7217</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Control the health of Windows 10-based devices (Windows 10)</source>
          <target>Control the health of Windows 10-based devices (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This article details an end-to-end solution that helps you protect high-value assets by enforcing, controlling, and reporting the health of Windows 10-based devices.</source>
          <target>This article details an end-to-end solution that helps you protect high-value assets by enforcing, controlling, and reporting the health of Windows 10-based devices.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Control the health of Windows 10-based devices</source>
          <target>Control the health of Windows 10-based devices</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This article details an end-to-end solution that helps you protect high-value assets by enforcing, controlling, and reporting the health of Windows 10-based devices.</source>
          <target>This article details an end-to-end solution that helps you protect high-value assets by enforcing, controlling, and reporting the health of Windows 10-based devices.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Introduction</source>
          <target>Introduction</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>In Bring Your Own Device (BYOD) scenarios, employees bring commercially available devices to access both work-related resources and their personal data.</source>
          <target>In Bring Your Own Device (BYOD) scenarios, employees bring commercially available devices to access both work-related resources and their personal data.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Users want to use the device of their choice to access the organization’s applications, data, and resources not only from the internal network but also from anywhere.</source>
          <target>Users want to use the device of their choice to access the organization’s applications, data, and resources not only from the internal network but also from anywhere.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>This phenomenon is also known as the consumerization of IT.</source>
          <target>This phenomenon is also known as the consumerization of IT.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Users want to have the best productivity experience when accessing corporate applications and working on organization data from their devices.</source>
          <target>Users want to have the best productivity experience when accessing corporate applications and working on organization data from their devices.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>That means they will not tolerate being prompted to enter their work credentials each time they access an application or a file server.</source>
          <target>That means they will not tolerate being prompted to enter their work credentials each time they access an application or a file server.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>From a security perspective, it also means that users will manipulate corporate credentials and corporate data on unmanaged devices.</source>
          <target>From a security perspective, it also means that users will manipulate corporate credentials and corporate data on unmanaged devices.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>With the increased use of BYOD, there will be more unmanaged and potentially unhealthy systems accessing corporate services, internal resources, and cloud apps.</source>
          <target>With the increased use of BYOD, there will be more unmanaged and potentially unhealthy systems accessing corporate services, internal resources, and cloud apps.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Even managed devices can be compromised and become harmful.</source>
          <target>Even managed devices can be compromised and become harmful.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Organizations need to detect when security has been breached and react as early as possible in order to protect high-value assets.</source>
          <target>Organizations need to detect when security has been breached and react as early as possible in order to protect high-value assets.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>As Microsoft moves forward, security investments are increasingly focused on security preventive defenses and also on detection and response capabilities.</source>
          <target>As Microsoft moves forward, security investments are increasingly focused on security preventive defenses and also on detection and response capabilities.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Windows 10 is an important component of an end-to-end security solution that focuses not only on the implementation of security preventive defenses, but adds device health attestation capabilities to the overall security strategy.</source>
          <target>Windows 10 is an important component of an end-to-end security solution that focuses not only on the implementation of security preventive defenses, but adds device health attestation capabilities to the overall security strategy.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Description of a robust end-to-end security solution</source>
          <target>Description of a robust end-to-end security solution</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Today’s computing threat landscape is increasing at a speed never encountered before.</source>
          <target>Today’s computing threat landscape is increasing at a speed never encountered before.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>The sophistication of criminal attacks is growing, and there is no doubt that malware now targets both consumers and professionals in all industries.</source>
          <target>The sophistication of criminal attacks is growing, and there is no doubt that malware now targets both consumers and professionals in all industries.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>During recent years, one particular category of threat has become prevalent: advanced persistent threats (APTs).</source>
          <target>During recent years, one particular category of threat has become prevalent: advanced persistent threats (APTs).</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>The term APT is commonly used to describe any attack that seems to target individual organizations on an on-going basis.</source>
          <target>The term APT is commonly used to describe any attack that seems to target individual organizations on an on-going basis.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>In fact, this type of attack typically involves determined adversaries who may use any methods or techniques necessary.</source>
          <target>In fact, this type of attack typically involves determined adversaries who may use any methods or techniques necessary.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>With the BYOD phenomena, a poorly maintained device represents a target of choice.</source>
          <target>With the BYOD phenomena, a poorly maintained device represents a target of choice.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>For an attacker, it’s an easy way to breach the security network perimeter, gain access to, and then steal high-value assets.</source>
          <target>For an attacker, it’s an easy way to breach the security network perimeter, gain access to, and then steal high-value assets.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>The attackers target individuals, not specifically because of who they are, but because of who they work for.</source>
          <target>The attackers target individuals, not specifically because of who they are, but because of who they work for.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>An infected device will bring malware into an organization, even if the organization has hardened the perimeter of networks or has invested in its defensive posture.</source>
          <target>An infected device will bring malware into an organization, even if the organization has hardened the perimeter of networks or has invested in its defensive posture.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>A defensive strategy is not sufficient against these threats.</source>
          <target>A defensive strategy is not sufficient against these threats.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>A different approach</source>
          <target>A different approach</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Rather than the traditional focus on the prevention of compromise, an effective security strategy assumes that determined adversaries will successfully breach any defenses.</source>
          <target>Rather than the traditional focus on the prevention of compromise, an effective security strategy assumes that determined adversaries will successfully breach any defenses.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>It means that it’s necessary to shift focus away from preventative security controls to detection of, and response to, security issues.</source>
          <target>It means that it’s necessary to shift focus away from preventative security controls to detection of, and response to, security issues.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>The implementation of the risk management strategy, therefore, balances investment in prevention, detection, and response.</source>
          <target>The implementation of the risk management strategy, therefore, balances investment in prevention, detection, and response.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Because mobile devices are increasingly being used to access corporate information, some way to evaluate device security or health is required.</source>
          <target>Because mobile devices are increasingly being used to access corporate information, some way to evaluate device security or health is required.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>This section describes how to provision device health assessment in such a way that high-value assets can be protected from unhealthy devices.</source>
          <target>This section describes how to provision device health assessment in such a way that high-value assets can be protected from unhealthy devices.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Devices that are used to access corporate resources must be trusted.</source>
          <target>Devices that are used to access corporate resources must be trusted.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>An efficient end-to-end security approach is able to evaluate device health and use the current security state when granting access to a high-value asset.</source>
          <target>An efficient end-to-end security approach is able to evaluate device health and use the current security state when granting access to a high-value asset.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>figure 1</source>
          <target>figure 1</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>A robust design needs to establish the user’s identity, strengthen the authentication method if needed, and learn behavior like the network location the user regularly connects from.</source>
          <target>A robust design needs to establish the user’s identity, strengthen the authentication method if needed, and learn behavior like the network location the user regularly connects from.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Also, a modern approach must be able to release sensitive content only if user devices are determined to be healthy and secure.</source>
          <target>Also, a modern approach must be able to release sensitive content only if user devices are determined to be healthy and secure.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>The following figure shows a solution built to assess device health from the cloud.</source>
          <target>The following figure shows a solution built to assess device health from the cloud.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The device authenticates the user through a connection to an identity provider in the cloud.</source>
          <target>The device authenticates the user through a connection to an identity provider in the cloud.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>If the managed asset contains highly confidential information, the conditional access engine of the identity provider may elect to verify the security compliance of the mobile device before access is granted.</source>
          <target>If the managed asset contains highly confidential information, the conditional access engine of the identity provider may elect to verify the security compliance of the mobile device before access is granted.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>The user’s device is able to prove its health status that can be sent at any time or when mobile device management (MDM) requests it.</source>
          <target>The user’s device is able to prove its health status that can be sent at any time or when mobile device management (MDM) requests it.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>figure 2</source>
          <target>figure 2</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Windows devices can be protected from low-level rootkits and bootkits by using low-level hardware technologies such as Unified Extensible Firmware Interface (UEFI) Secure Boot.</source>
          <target>Windows devices can be protected from low-level rootkits and bootkits by using low-level hardware technologies such as Unified Extensible Firmware Interface (UEFI) Secure Boot.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Secure Boot is a firmware validation process that helps prevent rootkit attacks; it is part of the UEFI specification.</source>
          <target>Secure Boot is a firmware validation process that helps prevent rootkit attacks; it is part of the UEFI specification.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>The intent of UEFI is to define a standard way for the operating system to communicate with modern hardware, which can perform faster and with more efficient input/output (I/O) functions than older, software interrupt-driven BIOS systems.</source>
          <target>The intent of UEFI is to define a standard way for the operating system to communicate with modern hardware, which can perform faster and with more efficient input/output (I/O) functions than older, software interrupt-driven BIOS systems.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>A device health attestation module can communicate measured boot data that is protected by a Trusted Platform Module (TPM) to a remote service.</source>
          <target>A device health attestation module can communicate measured boot data that is protected by a Trusted Platform Module (TPM) to a remote service.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>After the device successfully boots, boot process measurement data is sent to a trusted cloud service (Health Attestation Service) using a more secure and tamper-resistant communication channel.</source>
          <target>After the device successfully boots, boot process measurement data is sent to a trusted cloud service (Health Attestation Service) using a more secure and tamper-resistant communication channel.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Remote health attestation service performs a series of checks on the measurements.</source>
          <target>Remote health attestation service performs a series of checks on the measurements.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>It validates security related data points, including boot state (Secure Boot, Debug Mode, and so on), and the state of components that manage security (BitLocker, Device Guard, and so on).</source>
          <target>It validates security related data points, including boot state (Secure Boot, Debug Mode, and so on), and the state of components that manage security (BitLocker, Device Guard, and so on).</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>It then conveys the health state of the device by sending a health encrypted blob back to the device.</source>
          <target>It then conveys the health state of the device by sending a health encrypted blob back to the device.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>An MDM solution typically applies configuration policies and deploys software to devices.</source>
          <target>An MDM solution typically applies configuration policies and deploys software to devices.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>MDM defines the security baseline and knows the level of compliance of the device with regular checks to see what software is installed and what configuration is enforced, as well as determining the health status of the device.</source>
          <target>MDM defines the security baseline and knows the level of compliance of the device with regular checks to see what software is installed and what configuration is enforced, as well as determining the health status of the device.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>An MDM solution asks the device to send device health information and forward the health encrypted blob to the remote health attestation service.</source>
          <target>An MDM solution asks the device to send device health information and forward the health encrypted blob to the remote health attestation service.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>The remote health attestation service verifies device health data, checks that MDM is communicating to the same device, and then issues a device health report back to the MDM solution.</source>
          <target>The remote health attestation service verifies device health data, checks that MDM is communicating to the same device, and then issues a device health report back to the MDM solution.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>An MDM solution evaluates the health assertions and, depending on the health rules belonging to the organization, can decide if the device is healthy.</source>
          <target>An MDM solution evaluates the health assertions and, depending on the health rules belonging to the organization, can decide if the device is healthy.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>If the device is healthy and compliant, MDM passes that information to the identity provider so the organization’s access control policy can be invoked to grant access.</source>
          <target>If the device is healthy and compliant, MDM passes that information to the identity provider so the organization’s access control policy can be invoked to grant access.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Access to content is then authorized to the appropriate level of trust for whatever the health status and other conditional elements indicate.</source>
          <target>Access to content is then authorized to the appropriate level of trust for whatever the health status and other conditional elements indicate.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Depending on the requirements and the sensitivity of the managed asset, device health status can be combined with user identity information when processing an access request.</source>
          <target>Depending on the requirements and the sensitivity of the managed asset, device health status can be combined with user identity information when processing an access request.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Access to content is then authorized to the appropriate level of trust.</source>
          <target>Access to content is then authorized to the appropriate level of trust.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>The Conditional Access engine may be structured to allow additional verification as needed by the sensitivity of the managed asset.</source>
          <target>The Conditional Access engine may be structured to allow additional verification as needed by the sensitivity of the managed asset.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>For example, if access to high-value data is requested, additional security authentication may need to be established by querying the user to answer a phone call before access is granted.</source>
          <target>For example, if access to high-value data is requested, additional security authentication may need to be established by querying the user to answer a phone call before access is granted.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Microsoft’s security investments in Windows 10</source>
          <target>Microsoft’s security investments in Windows 10</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>In Windows 10, there are three pillars of investments:</source>
          <target>In Windows 10, there are three pillars of investments:</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Secure identities.</source>
          <target>Secure identities.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Microsoft is part of the FIDO Alliance which aims to provide an interoperable method of secure authentication by moving away from the use of passwords for authentication, both on the local system as well as for services like on-premises resources and cloud resources.</source>
          <target>Microsoft is part of the FIDO Alliance which aims to provide an interoperable method of secure authentication by moving away from the use of passwords for authentication, both on the local system as well as for services like on-premises resources and cloud resources.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Information protection.</source>
          <target>Information protection.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Microsoft is making investments to allow organizations to have better control over who has access to important data and what they can do with that data.</source>
          <target>Microsoft is making investments to allow organizations to have better control over who has access to important data and what they can do with that data.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>With Windows 10, organizations can take advantage of policies that specify which applications are considered to be corporate applications and can be trusted to access secure data.</source>
          <target>With Windows 10, organizations can take advantage of policies that specify which applications are considered to be corporate applications and can be trusted to access secure data.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Threat resistance.</source>
          <target>Threat resistance.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Microsoft is helping organizations to better secure enterprise assets against the threats of malware and attacks by using security defenses relying on hardware.</source>
          <target>Microsoft is helping organizations to better secure enterprise assets against the threats of malware and attacks by using security defenses relying on hardware.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Protect, control, and report on the security status of Windows 10-based devices</source>
          <target>Protect, control, and report on the security status of Windows 10-based devices</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>This section is an overview that describes different parts of the end-to-end security solution that helps protect high-value assets and information from attackers and malware.</source>
          <target>This section is an overview that describes different parts of the end-to-end security solution that helps protect high-value assets and information from attackers and malware.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>figure 3</source>
          <target>figure 3</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Number</source>
          <target>Number</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Part of the solution</source>
          <target>Part of the solution</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>1</source>
          <target>1</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Windows 10-based device</source>
          <target>Windows 10-based device</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>The first time a Windows 10-based device is powered on, the out-of-box experience (OOBE) screen is displayed.</source>
          <target>The first time a Windows 10-based device is powered on, the out-of-box experience (OOBE) screen is displayed.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>During setup, the device can be automatically registered into Azure Active Directory (AD) and enrolled in MDM.</source>
          <target>During setup, the device can be automatically registered into Azure Active Directory (AD) and enrolled in MDM.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>A Windows 10-based device with TPM 2.0 can report health status at any time by using the Health Attestation Service available with all editions of Windows 10.</source>
          <target>A Windows 10-based device with TPM 2.0 can report health status at any time by using the Health Attestation Service available with all editions of Windows 10.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>2</source>
          <target>2</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Identity provider</source>
          <target>Identity provider</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Azure AD contains users, registered devices, and registered application of organization’s tenant.</source>
          <target>Azure AD contains users, registered devices, and registered application of organization’s tenant.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>A device always belongs to a user and a user can have multiple devices.</source>
          <target>A device always belongs to a user and a user can have multiple devices.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>A device is represented as an object with different attributes like the compliance status of the device.</source>
          <target>A device is represented as an object with different attributes like the compliance status of the device.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>A trusted MDM can update the compliance status.</source>
          <target>A trusted MDM can update the compliance status.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Azure AD is more than a repository.</source>
          <target>Azure AD is more than a repository.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Azure AD is able to authenticate users and devices and can also authorize access to managed resources.</source>
          <target>Azure AD is able to authenticate users and devices and can also authorize access to managed resources.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Azure AD has a conditional access control engine that leverages the identity of the user, the location of the device and also the compliance status of the device when making a trusted access decision.</source>
          <target>Azure AD has a conditional access control engine that leverages the identity of the user, the location of the device and also the compliance status of the device when making a trusted access decision.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>3</source>
          <target>3</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Mobile device management</source>
          <target>Mobile device management</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Windows 10 has MDM support that enables the device to be managed out-of-box without deploying any agent.</source>
          <target>Windows 10 has MDM support that enables the device to be managed out-of-box without deploying any agent.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>MDM can be Microsoft Intune or any third-party MDM solution that is compatible with Windows 10.</source>
          <target>MDM can be Microsoft Intune or any third-party MDM solution that is compatible with Windows 10.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>4</source>
          <target>4</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Remote health attestation</source>
          <target>Remote health attestation</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>The Health Attestation Service is a trusted cloud service operated by Microsoft that performs a series of health checks and reports to MDM what Windows 10 security features are enabled on the device.</source>
          <target>The Health Attestation Service is a trusted cloud service operated by Microsoft that performs a series of health checks and reports to MDM what Windows 10 security features are enabled on the device.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Security verification includes boot state (WinPE, Safe Mode, Debug/test modes) and components that manage security and integrity of runtime operations (BitLocker, Device Guard).</source>
          <target>Security verification includes boot state (WinPE, Safe Mode, Debug/test modes) and components that manage security and integrity of runtime operations (BitLocker, Device Guard).</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>5</source>
          <target>5</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Enterprise managed asset</source>
          <target>Enterprise managed asset</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>Enterprise managed asset is the resource to protect.</source>
          <target>Enterprise managed asset is the resource to protect.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>For example, the asset can be Office 365, other cloud apps, on-premises web resources published by Azure AD, or even VPN access.</source>
          <target>For example, the asset can be Office 365, other cloud apps, on-premises web resources published by Azure AD, or even VPN access.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>The combination of Windows 10-based devices, identity provider, MDM, and remote health attestation creates a robust end-to-end-solution that provides validation of health and compliance of devices that access high-value assets.</source>
          <target>The combination of Windows 10-based devices, identity provider, MDM, and remote health attestation creates a robust end-to-end-solution that provides validation of health and compliance of devices that access high-value assets.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Protect devices and enterprise credentials against threats</source>
          <target>Protect devices and enterprise credentials against threats</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>This section describes what Windows 10 offers in terms of security defenses and what control can be measured and reported to.</source>
          <target>This section describes what Windows 10 offers in terms of security defenses and what control can be measured and reported to.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>Windows 10 hardware-based security defenses</source>
          <target>Windows 10 hardware-based security defenses</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>The most aggressive forms of malware try to insert themselves into the boot process as early as possible so that they can take control of the operating system early and prevent protection mechanisms and antimalware software from working.</source>
          <target>The most aggressive forms of malware try to insert themselves into the boot process as early as possible so that they can take control of the operating system early and prevent protection mechanisms and antimalware software from working.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>This type of malicious code is often called a rootkit or bootkit.</source>
          <target>This type of malicious code is often called a rootkit or bootkit.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>The best way to avoid having to deal with low-level malware is to secure the boot process so that the device is protected from the very start.</source>
          <target>The best way to avoid having to deal with low-level malware is to secure the boot process so that the device is protected from the very start.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Windows 10 supports multiple layers of boot protection.</source>
          <target>Windows 10 supports multiple layers of boot protection.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>Some of these features are available only if specific types of hardware are installed.</source>
          <target>Some of these features are available only if specific types of hardware are installed.</target>
        </segment>
      </unit>
      <unit id="215">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#hardware-req)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Hardware requirements</pc> section.</source>
          <target>For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Hardware requirements</pc> section.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>figure 4</source>
          <target>figure 4</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>Windows 10 supports features to help prevent sophisticated low-level malware like rootkits and bootkits from loading during the startup process:</source>
          <target>Windows 10 supports features to help prevent sophisticated low-level malware like rootkits and bootkits from loading during the startup process:</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>Trusted Platform Module.</source>
          <target>Trusted Platform Module.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>A Trusted Platform Module (TPM) is a hardware component that provides unique security features.</source>
          <target>A Trusted Platform Module (TPM) is a hardware component that provides unique security features.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Windows 10 leverages security characteristics of a TPM for measuring boot integrity sequence (and based on that, unlocking automatically BitLocker protected drives), for protecting credentials or for health attestation.</source>
          <target>Windows 10 leverages security characteristics of a TPM for measuring boot integrity sequence (and based on that, unlocking automatically BitLocker protected drives), for protecting credentials or for health attestation.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>A TPM implements controls that meet the specification described by the Trusted Computing Group (TCG).</source>
          <target>A TPM implements controls that meet the specification described by the Trusted Computing Group (TCG).</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>At the time of this writing, there are two versions of TPM specification produced by TCG that are not compatible with each other:</source>
          <target>At the time of this writing, there are two versions of TPM specification produced by TCG that are not compatible with each other:</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>The first TPM specification, version 1.2, was published in February 2005 by the TCG and standardized under ISO / IEC 11889 standard.</source>
          <target>The first TPM specification, version 1.2, was published in February 2005 by the TCG and standardized under ISO / IEC 11889 standard.</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>The latest TPM specification, referred to as TPM 2.0, was released in April 2014 and has been approved by the ISO/IEC Joint Technical Committee (JTC) as ISO/IEC 11889:2015.</source>
          <target>The latest TPM specification, referred to as TPM 2.0, was released in April 2014 and has been approved by the ISO/IEC Joint Technical Committee (JTC) as ISO/IEC 11889:2015.</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>Windows 10 uses the TPM for cryptographic calculations as part of health attestation and to protect the keys for BitLocker, Microsoft Passport, virtual smart cards, and other public key certificates.</source>
          <target>Windows 10 uses the TPM for cryptographic calculations as part of health attestation and to protect the keys for BitLocker, Microsoft Passport, virtual smart cards, and other public key certificates.</target>
        </segment>
      </unit>
      <unit id="226">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733948)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TPM requirements in Windows 10</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">TPM requirements in Windows 10</pc>.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>Windows 10 recognizes versions 1.2 and 2.0 TPM specifications produced by the TCG.</source>
          <target>Windows 10 recognizes versions 1.2 and 2.0 TPM specifications produced by the TCG.</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>For the most recent and modern security features, Windows 10 supports only TPM 2.0.</source>
          <target>For the most recent and modern security features, Windows 10 supports only TPM 2.0.</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>TPM 2.0 is required for device health attestation.</source>
          <target>TPM 2.0 is required for device health attestation.</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>TPM 2.0 provides a major revision to the capabilities over TPM 1.2:</source>
          <target>TPM 2.0 provides a major revision to the capabilities over TPM 1.2:</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>Update crypto strength to meet modern security needs</source>
          <target>Update crypto strength to meet modern security needs</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>Support for SHA-256 for PCRs</source>
          <target>Support for SHA-256 for PCRs</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>Support for HMAC command</source>
          <target>Support for HMAC command</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Cryptographic algorithms flexibility to support government needs</source>
          <target>Cryptographic algorithms flexibility to support government needs</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>TPM 1.2 is severely restricted in terms of what algorithms it can support</source>
          <target>TPM 1.2 is severely restricted in terms of what algorithms it can support</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>TPM 2.0 can support arbitrary algorithms with minor updates to the TCG specification documents</source>
          <target>TPM 2.0 can support arbitrary algorithms with minor updates to the TCG specification documents</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>Consistency across implementations</source>
          <target>Consistency across implementations</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>The TPM 1.2 specification allows vendors wide latitude when choosing implementation details</source>
          <target>The TPM 1.2 specification allows vendors wide latitude when choosing implementation details</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>TPM 2.0 standardizes much of this behavior</source>
          <target>TPM 2.0 standardizes much of this behavior</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>Secure Boot.</source>
          <target>Secure Boot.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Devices with UEFI firmware can be configured to load only trusted operating system bootloaders.</source>
          <target>Devices with UEFI firmware can be configured to load only trusted operating system bootloaders.</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>Secure Boot does not require a TPM.</source>
          <target>Secure Boot does not require a TPM.</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>The most basic protection is the Secure Boot feature, which is a standard part of the UEFI 2.2+ architecture.</source>
          <target>The most basic protection is the Secure Boot feature, which is a standard part of the UEFI 2.2+ architecture.</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>On a PC with conventional BIOS, anyone who can take control of the boot process can boot by using an alternative OS loader, and potentially gain access to system resources.</source>
          <target>On a PC with conventional BIOS, anyone who can take control of the boot process can boot by using an alternative OS loader, and potentially gain access to system resources.</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>When Secure Boot is enabled, you can boot using only an OS loader that’s signed using a certificate stored in the UEFI Secure Boot DB.</source>
          <target>When Secure Boot is enabled, you can boot using only an OS loader that’s signed using a certificate stored in the UEFI Secure Boot DB.</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>Naturally, the Microsoft certificate used to digitally sign the Windows 10 OS loaders are in that store, which allows UEFI to validate the certificate as part of its security policy.</source>
          <target>Naturally, the Microsoft certificate used to digitally sign the Windows 10 OS loaders are in that store, which allows UEFI to validate the certificate as part of its security policy.</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>Secure Boot must be enabled by default on all computers that are certified for Windows 10 under the Windows Hardware Compatibility Program.</source>
          <target>Secure Boot must be enabled by default on all computers that are certified for Windows 10 under the Windows Hardware Compatibility Program.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>Secure Boot is a UEFI firmware-based feature, which allows for the signing and verification of critical boot files and drivers at boot time.</source>
          <target>Secure Boot is a UEFI firmware-based feature, which allows for the signing and verification of critical boot files and drivers at boot time.</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>Secure Boot checks signature values of the Windows Boot Manager, BCD store, Windows OS loader file, and other boot critical DLLs at boot time before the system is allowed to fully boot into a usable operating system by using policies that are defined by the OEM at build time.</source>
          <target>Secure Boot checks signature values of the Windows Boot Manager, BCD store, Windows OS loader file, and other boot critical DLLs at boot time before the system is allowed to fully boot into a usable operating system by using policies that are defined by the OEM at build time.</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>Secure Boot prevents many types of boot-based rootkit, malware, and other security-related attacks against the Windows platform.</source>
          <target>Secure Boot prevents many types of boot-based rootkit, malware, and other security-related attacks against the Windows platform.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Secure Boot protects the operating system boot process whether booting from local hard disk, USB, PXE, or DVD, or into full Windows or Windows Recovery Environment (RE).</source>
          <target>Secure Boot protects the operating system boot process whether booting from local hard disk, USB, PXE, or DVD, or into full Windows or Windows Recovery Environment (RE).</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>Secure Boot protects the boot environment of a Windows 10 installation by verifying the signatures of the critical boot components to confirm malicious activity did not compromise them.</source>
          <target>Secure Boot protects the boot environment of a Windows 10 installation by verifying the signatures of the critical boot components to confirm malicious activity did not compromise them.</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>Secure Boot protection ends after the Windows kernel file (ntoskrnl.exe) has been loaded.</source>
          <target>Secure Boot protection ends after the Windows kernel file (ntoskrnl.exe) has been loaded.</target>
        </segment>
      </unit>
      <unit id="254">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Secure Boot protects the platform until the Windows kernel is loaded.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Secure Boot protects the platform until the Windows kernel is loaded.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>Then protections like ELAM take over.</source>
          <target>Then protections like ELAM take over.</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>Secure Boot configuration policy.</source>
          <target>Secure Boot configuration policy.</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>Extends Secure Boot functionality to critical Windows 10 configuration.</source>
          <target>Extends Secure Boot functionality to critical Windows 10 configuration.</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>Examples of protected configuration information include protecting Disable Execute bit (NX option) or ensuring that the test signing policy (code integrity) cannot be enabled.</source>
          <target>Examples of protected configuration information include protecting Disable Execute bit (NX option) or ensuring that the test signing policy (code integrity) cannot be enabled.</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>This ensures that the binaries and configuration of the computer can be trusted after the boot process has completed.</source>
          <target>This ensures that the binaries and configuration of the computer can be trusted after the boot process has completed.</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>Secure Boot configuration policy does this with UEFI policy.</source>
          <target>Secure Boot configuration policy does this with UEFI policy.</target>
        </segment>
      </unit>
      <unit id="261">
        <segment state="initial">
          <source>These signatures for these policies are signed in the same way that operating system binaries are signed for use with Secure Boot.</source>
          <target>These signatures for these policies are signed in the same way that operating system binaries are signed for use with Secure Boot.</target>
        </segment>
      </unit>
      <unit id="262">
        <segment state="initial">
          <source>The Secure Boot configuration policy must be signed by a private key that corresponds to one of the public keys stored in the Key Exchange Key (KEK) list.</source>
          <target>The Secure Boot configuration policy must be signed by a private key that corresponds to one of the public keys stored in the Key Exchange Key (KEK) list.</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>The Microsoft Certificate Authority (CA) will be present in the KEK list of all Windows certified Secure Boot systems.</source>
          <target>The Microsoft Certificate Authority (CA) will be present in the KEK list of all Windows certified Secure Boot systems.</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source>By default, a policy signed by the Microsoft KEK shall be work on all Secure Boot systems.</source>
          <target>By default, a policy signed by the Microsoft KEK shall be work on all Secure Boot systems.</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>BootMgr must verify the signature against the KEK list before applying a signed policy.</source>
          <target>BootMgr must verify the signature against the KEK list before applying a signed policy.</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>With Windows 10, the default Secure Boot configuration policy is embedded in bootmgr.</source>
          <target>With Windows 10, the default Secure Boot configuration policy is embedded in bootmgr.</target>
        </segment>
      </unit>
      <unit id="267">
        <segment state="initial">
          <source>The bootloader verifies the digital signature of the Windows 10 kernel before loading it.</source>
          <target>The bootloader verifies the digital signature of the Windows 10 kernel before loading it.</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source>The Windows 10 kernel, in turn, verifies every other component of the Windows startup process, including the boot drivers, startup files, and the ELAM component.</source>
          <target>The Windows 10 kernel, in turn, verifies every other component of the Windows startup process, including the boot drivers, startup files, and the ELAM component.</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source>This step is important and protects the rest of the boot process by verifying that all Windows boot components have integrity and can be trusted.</source>
          <target>This step is important and protects the rest of the boot process by verifying that all Windows boot components have integrity and can be trusted.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>Early Launch Antimalware (ELAM).</source>
          <target>Early Launch Antimalware (ELAM).</target>
        </segment>
      </unit>
      <unit id="271">
        <segment state="initial">
          <source>ELAM tests all drivers before they load and prevents unapproved drivers from loading.</source>
          <target>ELAM tests all drivers before they load and prevents unapproved drivers from loading.</target>
        </segment>
      </unit>
      <unit id="272">
        <segment state="initial">
          <source>Traditional antimalware apps don’t start until after the boot drivers have been loaded, which gives a rootkit that is disguised as a driver the opportunity to work.</source>
          <target>Traditional antimalware apps don’t start until after the boot drivers have been loaded, which gives a rootkit that is disguised as a driver the opportunity to work.</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>ELAM is a Windows mechanism introduced in a previous version of Windows that allows antimalware software to run very early in the boot sequence.</source>
          <target>ELAM is a Windows mechanism introduced in a previous version of Windows that allows antimalware software to run very early in the boot sequence.</target>
        </segment>
      </unit>
      <unit id="274">
        <segment state="initial">
          <source>Thus, the antimalware component is the first third-party component to run and control the initialization of other boot drivers until the Windows operating system is operational.</source>
          <target>Thus, the antimalware component is the first third-party component to run and control the initialization of other boot drivers until the Windows operating system is operational.</target>
        </segment>
      </unit>
      <unit id="275">
        <segment state="initial">
          <source>When the system is started with a complete runtime environment (network access, storage, and so on), then a full-featured antimalware is loaded.</source>
          <target>When the system is started with a complete runtime environment (network access, storage, and so on), then a full-featured antimalware is loaded.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source>ELAM can load a Microsoft or non-Microsoft antimalware driver before all non-Microsoft boot drivers and applications, thus continuing the chain of trust established by Secure Boot and Trusted Boot.</source>
          <target>ELAM can load a Microsoft or non-Microsoft antimalware driver before all non-Microsoft boot drivers and applications, thus continuing the chain of trust established by Secure Boot and Trusted Boot.</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source>Because the operating system hasn’t started yet, and because Windows needs to boot as quickly as possible, ELAM has a simple task: Examine every boot driver and determine whether it is on the list of trusted drivers.</source>
          <target>Because the operating system hasn’t started yet, and because Windows needs to boot as quickly as possible, ELAM has a simple task: Examine every boot driver and determine whether it is on the list of trusted drivers.</target>
        </segment>
      </unit>
      <unit id="278">
        <segment state="initial">
          <source>If it’s not trusted, Windows won’t load it.</source>
          <target>If it’s not trusted, Windows won’t load it.</target>
        </segment>
      </unit>
      <unit id="279">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Windows Defender, Microsoft's antimalware included by default in Windows 10, supports ELAM; it can be replaced with a third-party antimalware compatible solution.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Windows Defender, Microsoft's antimalware included by default in Windows 10, supports ELAM; it can be replaced with a third-party antimalware compatible solution.</target>
        </segment>
      </unit>
      <unit id="280">
        <segment state="initial">
          <source>The name of the Windows Defender ELAM driver is WdBoot.sys.</source>
          <target>The name of the Windows Defender ELAM driver is WdBoot.sys.</target>
        </segment>
      </unit>
      <unit id="281">
        <segment state="initial">
          <source>Windows Defender in Windows 10 uses its ELAM driver to roll back any malicious changes made to the Windows Defender driver at the next reboot.</source>
          <target>Windows Defender in Windows 10 uses its ELAM driver to roll back any malicious changes made to the Windows Defender driver at the next reboot.</target>
        </segment>
      </unit>
      <unit id="282">
        <segment state="initial">
          <source>This prevents kernel mode malware making lasting changes to Windows Defender’s mini-filter driver before shutdown or reboot.</source>
          <target>This prevents kernel mode malware making lasting changes to Windows Defender’s mini-filter driver before shutdown or reboot.</target>
        </segment>
      </unit>
      <unit id="283">
        <segment state="initial">
          <source>The ELAM signed driver is loaded before any other third-party drivers or applications, which allows the antimalware software to detect and block any attempts to tamper with the boot process by trying to load unsigned or untrusted code.</source>
          <target>The ELAM signed driver is loaded before any other third-party drivers or applications, which allows the antimalware software to detect and block any attempts to tamper with the boot process by trying to load unsigned or untrusted code.</target>
        </segment>
      </unit>
      <unit id="284">
        <segment state="initial">
          <source>The ELAM driver is a small driver with a small policy database that has a very narrow scope, focused on drivers that are loaded early at system launch.</source>
          <target>The ELAM driver is a small driver with a small policy database that has a very narrow scope, focused on drivers that are loaded early at system launch.</target>
        </segment>
      </unit>
      <unit id="285">
        <segment state="initial">
          <source>The policy database is stored in a registry hive that is also measured to the TPM, to record the operational parameters of the ELAM driver.</source>
          <target>The policy database is stored in a registry hive that is also measured to the TPM, to record the operational parameters of the ELAM driver.</target>
        </segment>
      </unit>
      <unit id="286">
        <segment state="initial">
          <source>An ELAM driver must be signed by Microsoft and the associated certificate must contain the complementary EKU (1.3.6.1.4.1.311.61.4.1).</source>
          <target>An ELAM driver must be signed by Microsoft and the associated certificate must contain the complementary EKU (1.3.6.1.4.1.311.61.4.1).</target>
        </segment>
      </unit>
      <unit id="287">
        <segment state="initial">
          <source>Virtualization-based security (Hyper-V + Secure Kernel).</source>
          <target>Virtualization-based security (Hyper-V + Secure Kernel).</target>
        </segment>
      </unit>
      <unit id="288">
        <segment state="initial">
          <source>Virtualization-based security is a completely new enforced security boundary that allows you to protect critical parts of Windows 10.</source>
          <target>Virtualization-based security is a completely new enforced security boundary that allows you to protect critical parts of Windows 10.</target>
        </segment>
      </unit>
      <unit id="289">
        <segment state="initial">
          <source>Virtualization-based security isolates sensitive code like Kernel Mode Code Integrity or sensitive corporate domain credentials from the rest of the Windows operating system.</source>
          <target>Virtualization-based security isolates sensitive code like Kernel Mode Code Integrity or sensitive corporate domain credentials from the rest of the Windows operating system.</target>
        </segment>
      </unit>
      <unit id="290">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#virtual)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Virtualization-based security</pc> section.</source>
          <target>For more information, refer to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Virtualization-based security</pc> section.</target>
        </segment>
      </unit>
      <unit id="291">
        <segment state="initial">
          <source>Hyper-V Code Integrity (HVCI).</source>
          <target>Hyper-V Code Integrity (HVCI).</target>
        </segment>
      </unit>
      <unit id="292">
        <segment state="initial">
          <source>Hyper-V Code Integrity is a feature of Device Guard that ensures only drivers, executables, and DLLs that comply with the Device Guard Code Integrity policy are allowed to run.</source>
          <target>Hyper-V Code Integrity is a feature of Device Guard that ensures only drivers, executables, and DLLs that comply with the Device Guard Code Integrity policy are allowed to run.</target>
        </segment>
      </unit>
      <unit id="293">
        <segment state="initial">
          <source>When enabled and configured, Windows 10 can start the Hyper-V virtualization-based security services, including Hyper-V Code Integrity (HVCI).</source>
          <target>When enabled and configured, Windows 10 can start the Hyper-V virtualization-based security services, including Hyper-V Code Integrity (HVCI).</target>
        </segment>
      </unit>
      <unit id="294">
        <segment state="initial">
          <source>HVCI helps protect the system core (kernel), privileged drivers, and system defenses, like antimalware solutions, by preventing malware from running early in the boot process, or after startup.</source>
          <target>HVCI helps protect the system core (kernel), privileged drivers, and system defenses, like antimalware solutions, by preventing malware from running early in the boot process, or after startup.</target>
        </segment>
      </unit>
      <unit id="295">
        <segment state="initial">
          <source>HVCI uses virtualization-based security to isolate Code Integrity, the only way kernel memory can become executable is through a Code Integrity verification.</source>
          <target>HVCI uses virtualization-based security to isolate Code Integrity, the only way kernel memory can become executable is through a Code Integrity verification.</target>
        </segment>
      </unit>
      <unit id="296">
        <segment state="initial">
          <source>This means that kernel memory pages can never be Writable and Executable (W+X) and executable code cannot be directly modified.</source>
          <target>This means that kernel memory pages can never be Writable and Executable (W+X) and executable code cannot be directly modified.</target>
        </segment>
      </unit>
      <unit id="297">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Device Guard devices that run Kernel Mode Code Integrity with virtualization-based security must have compatible drivers.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Device Guard devices that run Kernel Mode Code Integrity with virtualization-based security must have compatible drivers.</target>
        </segment>
      </unit>
      <unit id="298">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=691612)</data>
        </originalData>
        <segment state="initial">
          <source>For additional information, please read the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver compatibility with Device Guard in Windows 10</pc> blog post.</source>
          <target>For additional information, please read the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver compatibility with Device Guard in Windows 10</pc> blog post.</target>
        </segment>
      </unit>
      <unit id="299">
        <segment state="initial">
          <source>The Device Guard Code Integrity feature lets organizations control what code is trusted to run into the Windows kernel and what applications are approved to run in user mode.</source>
          <target>The Device Guard Code Integrity feature lets organizations control what code is trusted to run into the Windows kernel and what applications are approved to run in user mode.</target>
        </segment>
      </unit>
      <unit id="300">
        <segment state="initial">
          <source>It’s configurable by using a policy.</source>
          <target>It’s configurable by using a policy.</target>
        </segment>
      </unit>
      <unit id="301">
        <segment state="initial">
          <source>Device Guard Code Integrity policy is a binary file that Microsoft recommends you sign.</source>
          <target>Device Guard Code Integrity policy is a binary file that Microsoft recommends you sign.</target>
        </segment>
      </unit>
      <unit id="302">
        <segment state="initial">
          <source>The signing of the Code Integrity policy aids in the protection against a malicious user with Administrator privileges trying to modify or remove the current Code Integrity policy.</source>
          <target>The signing of the Code Integrity policy aids in the protection against a malicious user with Administrator privileges trying to modify or remove the current Code Integrity policy.</target>
        </segment>
      </unit>
      <unit id="303">
        <segment state="initial">
          <source>Credential Guard.</source>
          <target>Credential Guard.</target>
        </segment>
      </unit>
      <unit id="304">
        <segment state="initial">
          <source>Credential Guard protects corporate credentials with hardware-based credential isolation.</source>
          <target>Credential Guard protects corporate credentials with hardware-based credential isolation.</target>
        </segment>
      </unit>
      <unit id="305">
        <segment state="initial">
          <source>In Windows 10, Credential Guard aims to protect domain corporate credentials from theft and reuse by malware.</source>
          <target>In Windows 10, Credential Guard aims to protect domain corporate credentials from theft and reuse by malware.</target>
        </segment>
      </unit>
      <unit id="306">
        <segment state="initial">
          <source>With Credential Guard, Windows 10 implemented an architectural change that fundamentally prevents the current forms of the pass-the-hash (PtH) attack.</source>
          <target>With Credential Guard, Windows 10 implemented an architectural change that fundamentally prevents the current forms of the pass-the-hash (PtH) attack.</target>
        </segment>
      </unit>
      <unit id="307">
        <segment state="initial">
          <source>This is accomplished by leveraging Hyper-V and the new virtualization-based security feature to create a protected container where trusted code and secrets are isolated from the Windows kernel.</source>
          <target>This is accomplished by leveraging Hyper-V and the new virtualization-based security feature to create a protected container where trusted code and secrets are isolated from the Windows kernel.</target>
        </segment>
      </unit>
      <unit id="308">
        <segment state="initial">
          <source>That means that even if the Windows kernel is compromised an attacker has no way to read and extract the data required to initiate a PtH attack.</source>
          <target>That means that even if the Windows kernel is compromised an attacker has no way to read and extract the data required to initiate a PtH attack.</target>
        </segment>
      </unit>
      <unit id="309">
        <segment state="initial">
          <source>Credential Guard prevents this because the memory where secrets are stored is no longer accessible from the regular OS, even in kernel mode - the hypervisor controls who can access the memory.</source>
          <target>Credential Guard prevents this because the memory where secrets are stored is no longer accessible from the regular OS, even in kernel mode - the hypervisor controls who can access the memory.</target>
        </segment>
      </unit>
      <unit id="310">
        <segment state="initial">
          <source>Health attestation.</source>
          <target>Health attestation.</target>
        </segment>
      </unit>
      <unit id="311">
        <segment state="initial">
          <source>The device’s firmware logs the boot process, and Windows 10 can send it to a trusted server that can check and assess the device’s health.</source>
          <target>The device’s firmware logs the boot process, and Windows 10 can send it to a trusted server that can check and assess the device’s health.</target>
        </segment>
      </unit>
      <unit id="312">
        <segment state="initial">
          <source>Windows 10 takes measurements of the UEFI firmware and each of the Windows and antimalware components are made as they load during the boot process.</source>
          <target>Windows 10 takes measurements of the UEFI firmware and each of the Windows and antimalware components are made as they load during the boot process.</target>
        </segment>
      </unit>
      <unit id="313">
        <segment state="initial">
          <source>Additionally, they are taken and measured sequentially, not all at once.</source>
          <target>Additionally, they are taken and measured sequentially, not all at once.</target>
        </segment>
      </unit>
      <unit id="314">
        <segment state="initial">
          <source>When these measurements are complete, their values are digitally signed and stored securely in the TPM and cannot be changed unless the system is reset.</source>
          <target>When these measurements are complete, their values are digitally signed and stored securely in the TPM and cannot be changed unless the system is reset.</target>
        </segment>
      </unit>
      <unit id="315">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733950)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Secured Boot and Measured Boot: Hardening Early Boot Components Against Malware</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Secured Boot and Measured Boot: Hardening Early Boot Components Against Malware</pc>.</target>
        </segment>
      </unit>
      <unit id="316">
        <segment state="initial">
          <source>During each subsequent boot, the same components are measured, which allows comparison of the measurements against an expected baseline.</source>
          <target>During each subsequent boot, the same components are measured, which allows comparison of the measurements against an expected baseline.</target>
        </segment>
      </unit>
      <unit id="317">
        <segment state="initial">
          <source>For additional security, the values measured by the TPM can be signed and transmitted to a remote server, which can then perform the comparison.</source>
          <target>For additional security, the values measured by the TPM can be signed and transmitted to a remote server, which can then perform the comparison.</target>
        </segment>
      </unit>
      <unit id="318">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>This process, called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">remote device health attestation</pc>, allows the server to verify health status of the Windows device.</source>
          <target>This process, called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">remote device health attestation</pc>, allows the server to verify health status of the Windows device.</target>
        </segment>
      </unit>
      <unit id="319">
        <segment state="initial">
          <source>Health attestation requires the presence of TPM 2.0.</source>
          <target>Health attestation requires the presence of TPM 2.0.</target>
        </segment>
      </unit>
      <unit id="320">
        <segment state="initial">
          <source>On Windows 10, TPM 2.0 also requires UEFI firmware.</source>
          <target>On Windows 10, TPM 2.0 also requires UEFI firmware.</target>
        </segment>
      </unit>
      <unit id="321">
        <segment state="initial">
          <source>Although Secure Boot is a proactive form of protection, health attestation is a reactive form of boot protection.</source>
          <target>Although Secure Boot is a proactive form of protection, health attestation is a reactive form of boot protection.</target>
        </segment>
      </unit>
      <unit id="322">
        <segment state="initial">
          <source>Health attestation ships disabled in Windows and is enabled by an antimalware or an MDM vendor.</source>
          <target>Health attestation ships disabled in Windows and is enabled by an antimalware or an MDM vendor.</target>
        </segment>
      </unit>
      <unit id="323">
        <segment state="initial">
          <source>Unlike Secure Boot, health attestation will not stop the boot process and enter remediation when a measurement does not work.</source>
          <target>Unlike Secure Boot, health attestation will not stop the boot process and enter remediation when a measurement does not work.</target>
        </segment>
      </unit>
      <unit id="324">
        <segment state="initial">
          <source>But with conditional access control, health attestation will help to prevent access to high-value assets.</source>
          <target>But with conditional access control, health attestation will help to prevent access to high-value assets.</target>
        </segment>
      </unit>
      <unit id="325">
        <segment state="initial">
          <source>Virtualization-based security</source>
          <target>Virtualization-based security</target>
        </segment>
      </unit>
      <unit id="326">
        <segment state="initial">
          <source>Virtualization-based security provides a new trust boundary for Windows 10.</source>
          <target>Virtualization-based security provides a new trust boundary for Windows 10.</target>
        </segment>
      </unit>
      <unit id="327">
        <segment state="initial">
          <source>leverages Hyper-V hypervisor technology to enhance platform security.</source>
          <target>leverages Hyper-V hypervisor technology to enhance platform security.</target>
        </segment>
      </unit>
      <unit id="328">
        <segment state="initial">
          <source>Virtualization-based security provides a secure execution environment to run specific Windows trusted code (trustlet) and to protect sensitive data.</source>
          <target>Virtualization-based security provides a secure execution environment to run specific Windows trusted code (trustlet) and to protect sensitive data.</target>
        </segment>
      </unit>
      <unit id="329">
        <segment state="initial">
          <source>Virtualization-based security helps to protect against a compromised kernel or a malicious user with Administrator privileges.</source>
          <target>Virtualization-based security helps to protect against a compromised kernel or a malicious user with Administrator privileges.</target>
        </segment>
      </unit>
      <unit id="330">
        <segment state="initial">
          <source>Note that virtualization-based security is not trying to protect against a physical attacker.</source>
          <target>Note that virtualization-based security is not trying to protect against a physical attacker.</target>
        </segment>
      </unit>
      <unit id="331">
        <segment state="initial">
          <source>The following Windows 10 services are protected with virtualization-based security:</source>
          <target>The following Windows 10 services are protected with virtualization-based security:</target>
        </segment>
      </unit>
      <unit id="332">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential Guard</pc> (LSA Credential Isolation): prevents pass-the-hash attacks and enterprise credential theft that happens by reading and dumping the content of lsass memory</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Credential Guard</pc> (LSA Credential Isolation): prevents pass-the-hash attacks and enterprise credential theft that happens by reading and dumping the content of lsass memory</target>
        </segment>
      </unit>
      <unit id="333">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard</pc> (Hyper-V Code Integrity): Device Guard uses the new virtualization-based security in Windows 10 to isolate the Code Integrity service from the Windows kernel itself, which lets the service use signatures defined by your enterprise-controlled policy to help determine what is trustworthy.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard</pc> (Hyper-V Code Integrity): Device Guard uses the new virtualization-based security in Windows 10 to isolate the Code Integrity service from the Windows kernel itself, which lets the service use signatures defined by your enterprise-controlled policy to help determine what is trustworthy.</target>
        </segment>
      </unit>
      <unit id="334">
        <segment state="initial">
          <source>In effect, the Code Integrity service runs alongside the kernel in a Windows hypervisor-protected container.</source>
          <target>In effect, the Code Integrity service runs alongside the kernel in a Windows hypervisor-protected container.</target>
        </segment>
      </unit>
      <unit id="335">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Other isolated services</pc>: for example, on Windows Server Technical Preview 2016, there is the vTPM feature that allows you to have encrypted virtual machines (VMs) on servers.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Other isolated services</pc>: for example, on Windows Server Technical Preview 2016, there is the vTPM feature that allows you to have encrypted virtual machines (VMs) on servers.</target>
        </segment>
      </unit>
      <unit id="336">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Virtualization-based security is only available with Windows 10 Enterprise.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Virtualization-based security is only available with Windows 10 Enterprise.</target>
        </segment>
      </unit>
      <unit id="337">
        <segment state="initial">
          <source>Virtualization-based security requires devices with UEFI (2.3.1 or higher) with Secure Boot enabled, x64 processor with Virtualization Extensions and SLAT enabled.</source>
          <target>Virtualization-based security requires devices with UEFI (2.3.1 or higher) with Secure Boot enabled, x64 processor with Virtualization Extensions and SLAT enabled.</target>
        </segment>
      </unit>
      <unit id="338">
        <segment state="initial">
          <source>IOMMU, TPM 2.0.</source>
          <target>IOMMU, TPM 2.0.</target>
        </segment>
      </unit>
      <unit id="339">
        <segment state="initial">
          <source>and support for Secure Memory overwritten are optional, but recommended.</source>
          <target>and support for Secure Memory overwritten are optional, but recommended.</target>
        </segment>
      </unit>
      <unit id="340">
        <segment state="initial">
          <source>The schema below is a high-level view of Windows 10 with virtualization-based security.</source>
          <target>The schema below is a high-level view of Windows 10 with virtualization-based security.</target>
        </segment>
      </unit>
      <unit id="341">
        <segment state="initial">
          <source>figure 5</source>
          <target>figure 5</target>
        </segment>
      </unit>
      <unit id="342">
        <segment state="initial">
          <source>Credential Guard</source>
          <target>Credential Guard</target>
        </segment>
      </unit>
      <unit id="343">
        <segment state="initial">
          <source>In Windows 10, when Credential Guard is enabled, Local Security Authority Subsystem Service (lsass.exe) runs sensitive code in an Isolated user mode to help protect data from malware that may be running in the normal user mode.</source>
          <target>In Windows 10, when Credential Guard is enabled, Local Security Authority Subsystem Service (lsass.exe) runs sensitive code in an Isolated user mode to help protect data from malware that may be running in the normal user mode.</target>
        </segment>
      </unit>
      <unit id="344">
        <segment state="initial">
          <source>This helps ensure that protected data is not stolen and reused on remote machines, which mitigates many PtH-style attacks.</source>
          <target>This helps ensure that protected data is not stolen and reused on remote machines, which mitigates many PtH-style attacks.</target>
        </segment>
      </unit>
      <unit id="345">
        <segment state="initial">
          <source>Credential Guard helps protect credentials by encrypting them with either a per-boot or persistent key:</source>
          <target>Credential Guard helps protect credentials by encrypting them with either a per-boot or persistent key:</target>
        </segment>
      </unit>
      <unit id="346">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">The per-boot key</pc> is used for any in-memory credentials that do not require persistence.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">The per-boot key</pc> is used for any in-memory credentials that do not require persistence.</target>
        </segment>
      </unit>
      <unit id="347">
        <segment state="initial">
          <source>An example of such a credential would be a ticket-granting ticket (TGT) session key.</source>
          <target>An example of such a credential would be a ticket-granting ticket (TGT) session key.</target>
        </segment>
      </unit>
      <unit id="348">
        <segment state="initial">
          <source>This key is negotiated with a Key Distribution Center (KDC) every time authentication occurs and is protected with a per-boot key.</source>
          <target>This key is negotiated with a Key Distribution Center (KDC) every time authentication occurs and is protected with a per-boot key.</target>
        </segment>
      </unit>
      <unit id="349">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">The persistent key</pc>, or some derivative, is used to help protect items that are stored and reloaded after a reboot.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">The persistent key</pc>, or some derivative, is used to help protect items that are stored and reloaded after a reboot.</target>
        </segment>
      </unit>
      <unit id="350">
        <segment state="initial">
          <source>Such protection is intended for long-term storage, and must be protected with a consistent key.</source>
          <target>Such protection is intended for long-term storage, and must be protected with a consistent key.</target>
        </segment>
      </unit>
      <unit id="351">
        <segment state="initial">
          <source>Credential Guard is activated by a registry key and then enabled by using an UEFI variable.</source>
          <target>Credential Guard is activated by a registry key and then enabled by using an UEFI variable.</target>
        </segment>
      </unit>
      <unit id="352">
        <segment state="initial">
          <source>This is done to protect against remote modifications of the configuration.</source>
          <target>This is done to protect against remote modifications of the configuration.</target>
        </segment>
      </unit>
      <unit id="353">
        <segment state="initial">
          <source>The use of a UEFI variable implies that physical access is required to change the configuration.</source>
          <target>The use of a UEFI variable implies that physical access is required to change the configuration.</target>
        </segment>
      </unit>
      <unit id="354">
        <segment state="initial">
          <source>When lsass.exe detects that credential isolation is enabled, it then spawns LsaIso.exe as an isolated process, which ensures that it runs within isolated user mode.</source>
          <target>When lsass.exe detects that credential isolation is enabled, it then spawns LsaIso.exe as an isolated process, which ensures that it runs within isolated user mode.</target>
        </segment>
      </unit>
      <unit id="355">
        <segment state="initial">
          <source>The startup of LsaIso.exe is performed before initialization of a security support provider, which ensures that the secure mode support routines are ready before any authentication begins.</source>
          <target>The startup of LsaIso.exe is performed before initialization of a security support provider, which ensures that the secure mode support routines are ready before any authentication begins.</target>
        </segment>
      </unit>
      <unit id="356">
        <segment state="initial">
          <source>Device Guard</source>
          <target>Device Guard</target>
        </segment>
      </unit>
      <unit id="357">
        <segment state="initial">
          <source>Device Guard is a new feature of Windows 10 Enterprise that allows organizations to lock down a device to help protect it from running untrusted software.</source>
          <target>Device Guard is a new feature of Windows 10 Enterprise that allows organizations to lock down a device to help protect it from running untrusted software.</target>
        </segment>
      </unit>
      <unit id="358">
        <segment state="initial">
          <source>In this configuration, the only applications allowed to run are those that are trusted by the organization.</source>
          <target>In this configuration, the only applications allowed to run are those that are trusted by the organization.</target>
        </segment>
      </unit>
      <unit id="359">
        <segment state="initial">
          <source>The trust decision to execute code is performed by using Hyper-V Code Integrity, which runs in virtualization-based security, a Hyper-V protected container that runs alongside regular Windows.</source>
          <target>The trust decision to execute code is performed by using Hyper-V Code Integrity, which runs in virtualization-based security, a Hyper-V protected container that runs alongside regular Windows.</target>
        </segment>
      </unit>
      <unit id="360">
        <segment state="initial">
          <source>Hyper-V Code Integrity is a feature that validates the integrity of a driver or system file each time it is loaded into memory.</source>
          <target>Hyper-V Code Integrity is a feature that validates the integrity of a driver or system file each time it is loaded into memory.</target>
        </segment>
      </unit>
      <unit id="361">
        <segment state="initial">
          <source>Code integrity detects whether an unsigned driver or system file is being loaded into the kernel, or whether a system file has been modified by malicious software that is being run by a user account with Administrator privileges.</source>
          <target>Code integrity detects whether an unsigned driver or system file is being loaded into the kernel, or whether a system file has been modified by malicious software that is being run by a user account with Administrator privileges.</target>
        </segment>
      </unit>
      <unit id="362">
        <segment state="initial">
          <source>On x64-based versions of Windows 10 kernel-mode drivers must be digitally signed.</source>
          <target>On x64-based versions of Windows 10 kernel-mode drivers must be digitally signed.</target>
        </segment>
      </unit>
      <unit id="363">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?LinkId=691613)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Independently of activation of Device Guard Policy, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows 10 by default raises the bar for what runs in the kernel</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Independently of activation of Device Guard Policy, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Windows 10 by default raises the bar for what runs in the kernel</pc>.</target>
        </segment>
      </unit>
      <unit id="364">
        <segment state="initial">
          <source>Windows 10 drivers must be signed by Microsoft, and more specifically, by the WHQL (Windows Hardware Quality Labs) portal.</source>
          <target>Windows 10 drivers must be signed by Microsoft, and more specifically, by the WHQL (Windows Hardware Quality Labs) portal.</target>
        </segment>
      </unit>
      <unit id="365">
        <segment state="initial">
          <source>Additionally, starting in October 2015, the WHQL portal will only accept driver submissions, including both kernel and user mode driver submissions, that have a valid Extended Validation (“EV”) Code Signing Certificate.</source>
          <target>Additionally, starting in October 2015, the WHQL portal will only accept driver submissions, including both kernel and user mode driver submissions, that have a valid Extended Validation (“EV”) Code Signing Certificate.</target>
        </segment>
      </unit>
      <unit id="366">
        <segment state="initial">
          <source>With Device Guard in Windows 10, organizations are now able to define their own Code Integrity policy for use on x64 systems running Windows 10 Enterprise.</source>
          <target>With Device Guard in Windows 10, organizations are now able to define their own Code Integrity policy for use on x64 systems running Windows 10 Enterprise.</target>
        </segment>
      </unit>
      <unit id="367">
        <segment state="initial">
          <source>Organizations have the ability to configure the policy that determines what is trusted to run.</source>
          <target>Organizations have the ability to configure the policy that determines what is trusted to run.</target>
        </segment>
      </unit>
      <unit id="368">
        <segment state="initial">
          <source>These include drivers and system files, as well as traditional desktop applications and scripts.</source>
          <target>These include drivers and system files, as well as traditional desktop applications and scripts.</target>
        </segment>
      </unit>
      <unit id="369">
        <segment state="initial">
          <source>The system is then locked down to only run applications that the organization trusts.</source>
          <target>The system is then locked down to only run applications that the organization trusts.</target>
        </segment>
      </unit>
      <unit id="370">
        <segment state="initial">
          <source>Device Guard is a built-in feature of Windows 10 Enterprise that prevents the execution of unwanted code and applications.</source>
          <target>Device Guard is a built-in feature of Windows 10 Enterprise that prevents the execution of unwanted code and applications.</target>
        </segment>
      </unit>
      <unit id="371">
        <segment state="initial">
          <source>Device Guard can be configured using two rule actions - allow and deny:</source>
          <target>Device Guard can be configured using two rule actions - allow and deny:</target>
        </segment>
      </unit>
      <unit id="372">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Allow</pc> limits execution of applications to an allowed list of code or trusted publisher and blocks everything else.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Allow</pc> limits execution of applications to an allowed list of code or trusted publisher and blocks everything else.</target>
        </segment>
      </unit>
      <unit id="373">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deny</pc> completes the allow trusted publisher approach by blocking the execution of a specific application.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deny</pc> completes the allow trusted publisher approach by blocking the execution of a specific application.</target>
        </segment>
      </unit>
      <unit id="374">
        <segment state="initial">
          <source>At the time of this writing, and according to Microsoft’s latest research, more than 90 percent of malware is unsigned completely.</source>
          <target>At the time of this writing, and according to Microsoft’s latest research, more than 90 percent of malware is unsigned completely.</target>
        </segment>
      </unit>
      <unit id="375">
        <segment state="initial">
          <source>So implementing a basic Device Guard policy can simply and effectively help block the vast majority of malware.</source>
          <target>So implementing a basic Device Guard policy can simply and effectively help block the vast majority of malware.</target>
        </segment>
      </unit>
      <unit id="376">
        <segment state="initial">
          <source>In fact, Device Guard has the potential to go further, and can also help block signed malware.</source>
          <target>In fact, Device Guard has the potential to go further, and can also help block signed malware.</target>
        </segment>
      </unit>
      <unit id="377">
        <segment state="initial">
          <source>Device Guard needs to be planned and configured to be truly effective.</source>
          <target>Device Guard needs to be planned and configured to be truly effective.</target>
        </segment>
      </unit>
      <unit id="378">
        <segment state="initial">
          <source>It is not just a protection that is enabled or disabled.</source>
          <target>It is not just a protection that is enabled or disabled.</target>
        </segment>
      </unit>
      <unit id="379">
        <segment state="initial">
          <source>Device Guard is a combination of hardware security features and software security features that, when configured together, can lock down a computer to help ensure the most secure and resistant system possible.</source>
          <target>Device Guard is a combination of hardware security features and software security features that, when configured together, can lock down a computer to help ensure the most secure and resistant system possible.</target>
        </segment>
      </unit>
      <unit id="380">
        <segment state="initial">
          <source>There are three different parts that make up the Device Guard solution in Windows 10:</source>
          <target>There are three different parts that make up the Device Guard solution in Windows 10:</target>
        </segment>
      </unit>
      <unit id="381">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The first part is a base <pc dataRefEnd="id2" dataRefStart="id1" id="p1">set of hardware security features</pc> introduced with the previous version of Windows.</source>
          <target>The first part is a base <pc dataRefEnd="id2" dataRefStart="id1" id="p1">set of hardware security features</pc> introduced with the previous version of Windows.</target>
        </segment>
      </unit>
      <unit id="382">
        <segment state="initial">
          <source>TPM for hardware cryptographic operations and UEFI with modern firmware, along with Secure Boot, allows you to control what the device is running when the systems start.</source>
          <target>TPM for hardware cryptographic operations and UEFI with modern firmware, along with Secure Boot, allows you to control what the device is running when the systems start.</target>
        </segment>
      </unit>
      <unit id="383">
        <segment state="initial">
          <source>After the hardware security feature, there is the code integrity engine.</source>
          <target>After the hardware security feature, there is the code integrity engine.</target>
        </segment>
      </unit>
      <unit id="384">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In Windows 10, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Code Integrity is now fully configurable</pc> and now resides in Isolated user mode, a part of the memory that is protected by virtualization-based security.</source>
          <target>In Windows 10, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Code Integrity is now fully configurable</pc> and now resides in Isolated user mode, a part of the memory that is protected by virtualization-based security.</target>
        </segment>
      </unit>
      <unit id="385">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The last part of Device Guard is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">manageability</pc>.</source>
          <target>The last part of Device Guard is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">manageability</pc>.</target>
        </segment>
      </unit>
      <unit id="386">
        <segment state="initial">
          <source>Code Integrity configuration is exposed through specific Group Policy Objects, PowerShell cmdlets, and MDM configuration service providers (CSPs).</source>
          <target>Code Integrity configuration is exposed through specific Group Policy Objects, PowerShell cmdlets, and MDM configuration service providers (CSPs).</target>
        </segment>
      </unit>
      <unit id="387">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](device-guard-deployment-guide.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information on how to deploy Device Guard in an enterprise, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</source>
          <target>For more information on how to deploy Device Guard in an enterprise, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</target>
        </segment>
      </unit>
      <unit id="388">
        <segment state="initial">
          <source>Device Guard scenarios</source>
          <target>Device Guard scenarios</target>
        </segment>
      </unit>
      <unit id="389">
        <segment state="initial">
          <source>As previously described, Device Guard is a powerful way to lock down systems.</source>
          <target>As previously described, Device Guard is a powerful way to lock down systems.</target>
        </segment>
      </unit>
      <unit id="390">
        <segment state="initial">
          <source>Device Guard is not intended to be used broadly and it may not always be applicable, but there are some high-interest scenarios.</source>
          <target>Device Guard is not intended to be used broadly and it may not always be applicable, but there are some high-interest scenarios.</target>
        </segment>
      </unit>
      <unit id="391">
        <segment state="initial">
          <source>Device Guard is useful and applicable on fixed workloads systems like cash registers, kiosk machines, Secure Admin Workstations (SAWs), or well managed desktops.</source>
          <target>Device Guard is useful and applicable on fixed workloads systems like cash registers, kiosk machines, Secure Admin Workstations (SAWs), or well managed desktops.</target>
        </segment>
      </unit>
      <unit id="392">
        <segment state="initial">
          <source>Device Guard is highly relevant on systems that have very well-defined software that are expected to run and don’t change too frequently.</source>
          <target>Device Guard is highly relevant on systems that have very well-defined software that are expected to run and don’t change too frequently.</target>
        </segment>
      </unit>
      <unit id="393">
        <segment state="initial">
          <source>It could also help protect Information Workers (IWs) beyond just SAWs, as long as what they need to run is known and the set of applications is not going to change on a daily basis.</source>
          <target>It could also help protect Information Workers (IWs) beyond just SAWs, as long as what they need to run is known and the set of applications is not going to change on a daily basis.</target>
        </segment>
      </unit>
      <unit id="394">
        <segment state="initial">
          <source>SAWs are computers that are built to help significantly reduce the risk of compromise from malware, phishing attacks, bogus websites, and PtH attacks, among other security risks.</source>
          <target>SAWs are computers that are built to help significantly reduce the risk of compromise from malware, phishing attacks, bogus websites, and PtH attacks, among other security risks.</target>
        </segment>
      </unit>
      <unit id="395">
        <segment state="initial">
          <source>Although SAWs can’t be considered a “silver bullet” security solution to these attacks, these types of clients are helpful as part of a layered, defense-in-depth approach to security.</source>
          <target>Although SAWs can’t be considered a “silver bullet” security solution to these attacks, these types of clients are helpful as part of a layered, defense-in-depth approach to security.</target>
        </segment>
      </unit>
      <unit id="396">
        <segment state="initial">
          <source>To protect high-value assets, SAWs are used to make secure connections to those assets.</source>
          <target>To protect high-value assets, SAWs are used to make secure connections to those assets.</target>
        </segment>
      </unit>
      <unit id="397">
        <segment state="initial">
          <source>Similarly, on corporate fully-managed workstations, where applications are installed by using a distribution tool like System Center Configuration Manager, Intune, or any third-party device management, then Device Guard is very applicable.</source>
          <target>Similarly, on corporate fully-managed workstations, where applications are installed by using a distribution tool like System Center Configuration Manager, Intune, or any third-party device management, then Device Guard is very applicable.</target>
        </segment>
      </unit>
      <unit id="398">
        <segment state="initial">
          <source>In that type of scenario, the organization has a good idea of the software that an average user is running.</source>
          <target>In that type of scenario, the organization has a good idea of the software that an average user is running.</target>
        </segment>
      </unit>
      <unit id="399">
        <segment state="initial">
          <source>It could be challenging to use Device Guard on corporate, lightly-managed workstations where the user is typically allowed to install software on their own.</source>
          <target>It could be challenging to use Device Guard on corporate, lightly-managed workstations where the user is typically allowed to install software on their own.</target>
        </segment>
      </unit>
      <unit id="400">
        <segment state="initial">
          <source>When an organization offers great flexibility, it’s quite difficult to run Device Guard in enforcement mode.</source>
          <target>When an organization offers great flexibility, it’s quite difficult to run Device Guard in enforcement mode.</target>
        </segment>
      </unit>
      <unit id="401">
        <segment state="initial">
          <source>Nevertheless, Device Guard can be run in Audit mode, and in that case, the event log will contain a record of any binaries that violated the Device Guard policy.</source>
          <target>Nevertheless, Device Guard can be run in Audit mode, and in that case, the event log will contain a record of any binaries that violated the Device Guard policy.</target>
        </segment>
      </unit>
      <unit id="402">
        <segment state="initial">
          <source>When Device Guard is used in Audit mode, organizations can get rich data about drivers and applications that users install and run.</source>
          <target>When Device Guard is used in Audit mode, organizations can get rich data about drivers and applications that users install and run.</target>
        </segment>
      </unit>
      <unit id="403">
        <segment state="initial">
          <source>Before you can benefit from the protection included in Device Guard, Code Integrity policy must be created by using tools provided by Microsoft, but the policy can be deployed with common management tools, like Group Policy.</source>
          <target>Before you can benefit from the protection included in Device Guard, Code Integrity policy must be created by using tools provided by Microsoft, but the policy can be deployed with common management tools, like Group Policy.</target>
        </segment>
      </unit>
      <unit id="404">
        <segment state="initial">
          <source>The Code Integrity policy is a binary-encoded XML document that includes configuration settings for both the User and Kernel-modes of Windows 10, along with restrictions on Windows 10 script hosts.</source>
          <target>The Code Integrity policy is a binary-encoded XML document that includes configuration settings for both the User and Kernel-modes of Windows 10, along with restrictions on Windows 10 script hosts.</target>
        </segment>
      </unit>
      <unit id="405">
        <segment state="initial">
          <source>Device Guard Code Integrity policy restricts what code can run on a device.</source>
          <target>Device Guard Code Integrity policy restricts what code can run on a device.</target>
        </segment>
      </unit>
      <unit id="406">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Device Guard policy can be signed in Windows 10, which adds additional protection against administrative users changing or removing this policy.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Device Guard policy can be signed in Windows 10, which adds additional protection against administrative users changing or removing this policy.</target>
        </segment>
      </unit>
      <unit id="407">
        <segment state="initial">
          <source>Signed Device Guard policy offers stronger protection against a malicious local administrator trying to defeat Device Guard.</source>
          <target>Signed Device Guard policy offers stronger protection against a malicious local administrator trying to defeat Device Guard.</target>
        </segment>
      </unit>
      <unit id="408">
        <segment state="initial">
          <source>When the policy is signed, the GUID of the policy is stored in a UEFI pre-OS secure variable which offers tampering protection.</source>
          <target>When the policy is signed, the GUID of the policy is stored in a UEFI pre-OS secure variable which offers tampering protection.</target>
        </segment>
      </unit>
      <unit id="409">
        <segment state="initial">
          <source>The only way to update the Device Guard policy subsequently is to provide a new version of the policy signed by the same signer or from a signer specified as part of the Device Guard policy into the UpdateSigner section.</source>
          <target>The only way to update the Device Guard policy subsequently is to provide a new version of the policy signed by the same signer or from a signer specified as part of the Device Guard policy into the UpdateSigner section.</target>
        </segment>
      </unit>
      <unit id="410">
        <segment state="initial">
          <source>The importance of signing applications</source>
          <target>The importance of signing applications</target>
        </segment>
      </unit>
      <unit id="411">
        <segment state="initial">
          <source>On computers with Device Guard, Microsoft proposes to move from a world where unsigned apps can be run without restriction to a world where only signed and trusted code is allowed to run on Windows 10.</source>
          <target>On computers with Device Guard, Microsoft proposes to move from a world where unsigned apps can be run without restriction to a world where only signed and trusted code is allowed to run on Windows 10.</target>
        </segment>
      </unit>
      <unit id="412">
        <segment state="initial">
          <source>With Windows 10, organizations will make line-of-business (LOB) apps available to members of the organization through the Windows Store infrastructure.</source>
          <target>With Windows 10, organizations will make line-of-business (LOB) apps available to members of the organization through the Windows Store infrastructure.</target>
        </segment>
      </unit>
      <unit id="413">
        <segment state="initial">
          <source>More specifically, LOB apps will be available in a private store within the public Windows Store.</source>
          <target>More specifically, LOB apps will be available in a private store within the public Windows Store.</target>
        </segment>
      </unit>
      <unit id="414">
        <segment state="initial">
          <source>Windows Store signs and distributes Universal Windows apps and Classic Windows apps.</source>
          <target>Windows Store signs and distributes Universal Windows apps and Classic Windows apps.</target>
        </segment>
      </unit>
      <unit id="415">
        <segment state="initial">
          <source>All apps downloaded from the Windows Store are signed.</source>
          <target>All apps downloaded from the Windows Store are signed.</target>
        </segment>
      </unit>
      <unit id="416">
        <segment state="initial">
          <source>In organizations today, the vast majority of LOB applications are unsigned.</source>
          <target>In organizations today, the vast majority of LOB applications are unsigned.</target>
        </segment>
      </unit>
      <unit id="417">
        <segment state="initial">
          <source>Code signing is frequently viewed as a tough problem to solve for a variety of reasons, like the lack of code signing expertise.</source>
          <target>Code signing is frequently viewed as a tough problem to solve for a variety of reasons, like the lack of code signing expertise.</target>
        </segment>
      </unit>
      <unit id="418">
        <segment state="initial">
          <source>Even if code signing is a best practice, a lot of internal applications are not signed.</source>
          <target>Even if code signing is a best practice, a lot of internal applications are not signed.</target>
        </segment>
      </unit>
      <unit id="419">
        <segment state="initial">
          <source>Windows 10 includes tools that allow IT pros to take applications that have been already packaged and run them through a process to create additional signatures that can be distributed along with existing applications.</source>
          <target>Windows 10 includes tools that allow IT pros to take applications that have been already packaged and run them through a process to create additional signatures that can be distributed along with existing applications.</target>
        </segment>
      </unit>
      <unit id="420">
        <segment state="initial">
          <source>Why are antimalware and device management solutions still necessary?</source>
          <target>Why are antimalware and device management solutions still necessary?</target>
        </segment>
      </unit>
      <unit id="421">
        <segment state="initial">
          <source>Although allow-list mechanisms are extremely efficient at ensuring that only trusted applications can be run, they cannot prevent the compromise of a trusted (but vulnerable) application by malicious content designed to exploit a known vulnerability.</source>
          <target>Although allow-list mechanisms are extremely efficient at ensuring that only trusted applications can be run, they cannot prevent the compromise of a trusted (but vulnerable) application by malicious content designed to exploit a known vulnerability.</target>
        </segment>
      </unit>
      <unit id="422">
        <segment state="initial">
          <source>Device Guard doesn’t protect against user mode malicious code run by exploiting vulnerabilities.</source>
          <target>Device Guard doesn’t protect against user mode malicious code run by exploiting vulnerabilities.</target>
        </segment>
      </unit>
      <unit id="423">
        <segment state="initial">
          <source>Vulnerabilities are weaknesses in software that could allow an attacker to compromise the integrity, availability, or confidentiality of the device.</source>
          <target>Vulnerabilities are weaknesses in software that could allow an attacker to compromise the integrity, availability, or confidentiality of the device.</target>
        </segment>
      </unit>
      <unit id="424">
        <segment state="initial">
          <source>Some of the worst vulnerabilities allow attackers to exploit the compromised device by causing it to run malicious code without the user’s knowledge.</source>
          <target>Some of the worst vulnerabilities allow attackers to exploit the compromised device by causing it to run malicious code without the user’s knowledge.</target>
        </segment>
      </unit>
      <unit id="425">
        <segment state="initial">
          <source>It’s common to see attackers distributing specially crafted content in an attempt to exploit known vulnerabilities in user mode software like web browsers (and their plug-ins), Java virtual machines, PDF readers, or document editors.</source>
          <target>It’s common to see attackers distributing specially crafted content in an attempt to exploit known vulnerabilities in user mode software like web browsers (and their plug-ins), Java virtual machines, PDF readers, or document editors.</target>
        </segment>
      </unit>
      <unit id="426">
        <segment state="initial">
          <source>As of today, 90 percent of discovered vulnerabilities affect user mode applications compared to the operating system and kernel mode drivers that host them.</source>
          <target>As of today, 90 percent of discovered vulnerabilities affect user mode applications compared to the operating system and kernel mode drivers that host them.</target>
        </segment>
      </unit>
      <unit id="427">
        <segment state="initial">
          <source>To combat these threats, patching is the single most effective control, with antimalware software forming complementary layers of defense.</source>
          <target>To combat these threats, patching is the single most effective control, with antimalware software forming complementary layers of defense.</target>
        </segment>
      </unit>
      <unit id="428">
        <segment state="initial">
          <source>Most application software has no facility for updating itself, so even if the software vendor publishes an update that fixes the vulnerability, the user may not know that the update is available or how to obtain it, and therefore remains vulnerable to attack.</source>
          <target>Most application software has no facility for updating itself, so even if the software vendor publishes an update that fixes the vulnerability, the user may not know that the update is available or how to obtain it, and therefore remains vulnerable to attack.</target>
        </segment>
      </unit>
      <unit id="429">
        <segment state="initial">
          <source>Organizations still need to manage devices and to patch vulnerabilities.</source>
          <target>Organizations still need to manage devices and to patch vulnerabilities.</target>
        </segment>
      </unit>
      <unit id="430">
        <segment state="initial">
          <source>MDM solutions are becoming prevalent as a light-weight device management technology.</source>
          <target>MDM solutions are becoming prevalent as a light-weight device management technology.</target>
        </segment>
      </unit>
      <unit id="431">
        <segment state="initial">
          <source>Windows 10 extends the management capabilities that have become available for MDMs.</source>
          <target>Windows 10 extends the management capabilities that have become available for MDMs.</target>
        </segment>
      </unit>
      <unit id="432">
        <segment state="initial">
          <source>One key feature Microsoft has added to Windows 10 is the ability for MDMs to acquire a strong statement of device health from managed and registered devices.</source>
          <target>One key feature Microsoft has added to Windows 10 is the ability for MDMs to acquire a strong statement of device health from managed and registered devices.</target>
        </segment>
      </unit>
      <unit id="433">
        <segment state="initial">
          <source>Device health attestation</source>
          <target>Device health attestation</target>
        </segment>
      </unit>
      <unit id="434">
        <segment state="initial">
          <source>Device health attestation leverages the TPM 2.0 to provide cryptographically strong and verifiable measurements of the chain of software used to boot the device.</source>
          <target>Device health attestation leverages the TPM 2.0 to provide cryptographically strong and verifiable measurements of the chain of software used to boot the device.</target>
        </segment>
      </unit>
      <unit id="435">
        <segment state="initial">
          <source>For Windows 10-based devices, Microsoft introduces a new public API that will allow MDM software to access a remote attestation service called Windows Health Attestation Service.</source>
          <target>For Windows 10-based devices, Microsoft introduces a new public API that will allow MDM software to access a remote attestation service called Windows Health Attestation Service.</target>
        </segment>
      </unit>
      <unit id="436">
        <segment state="initial">
          <source>A health attestation result, in addition with other elements, can be used to allow or deny access to networks, apps, or services, based on whether devices prove to be healthy.</source>
          <target>A health attestation result, in addition with other elements, can be used to allow or deny access to networks, apps, or services, based on whether devices prove to be healthy.</target>
        </segment>
      </unit>
      <unit id="437">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#detect-unhealthy)</data>
        </originalData>
        <segment state="initial">
          <source>For more information on device health attestation, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Detect an unhealthy Windows 10-based device</pc> section.</source>
          <target>For more information on device health attestation, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Detect an unhealthy Windows 10-based device</pc> section.</target>
        </segment>
      </unit>
      <unit id="438">
        <segment state="initial">
          <source>Hardware requirements</source>
          <target>Hardware requirements</target>
        </segment>
      </unit>
      <unit id="439">
        <segment state="initial">
          <source>The following table details the hardware requirements for both virtualization-based security services and the health attestation feature.</source>
          <target>The following table details the hardware requirements for both virtualization-based security services and the health attestation feature.</target>
        </segment>
      </unit>
      <unit id="440">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733951)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum hardware requirements</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum hardware requirements</pc>.</target>
        </segment>
      </unit>
      <unit id="441">
        <segment state="initial">
          <source>Hardware</source>
          <target>Hardware</target>
        </segment>
      </unit>
      <unit id="442">
        <segment state="initial">
          <source>Motivation</source>
          <target>Motivation</target>
        </segment>
      </unit>
      <unit id="443">
        <segment state="initial">
          <source>UEFI 2.3.1 or later firmware with Secure Boot enabled</source>
          <target>UEFI 2.3.1 or later firmware with Secure Boot enabled</target>
        </segment>
      </unit>
      <unit id="444">
        <segment state="initial">
          <source>Required to support UEFI Secure Boot.</source>
          <target>Required to support UEFI Secure Boot.</target>
        </segment>
      </unit>
      <unit id="445">
        <segment state="initial">
          <source>UEFI Secure Boot ensures that the device boots only authorized code.</source>
          <target>UEFI Secure Boot ensures that the device boots only authorized code.</target>
        </segment>
      </unit>
      <unit id="446">
        <segment state="initial">
          <source>Additionally, Boot Integrity (Platform Secure Boot) must be supported following the requirements in Hardware Compatibility Specification for Systems for Windows 10 under the subsection: “System.Fundamentals.Firmware.CS.UEFISecureBoot.ConnectedStandby”</source>
          <target>Additionally, Boot Integrity (Platform Secure Boot) must be supported following the requirements in Hardware Compatibility Specification for Systems for Windows 10 under the subsection: “System.Fundamentals.Firmware.CS.UEFISecureBoot.ConnectedStandby”</target>
        </segment>
      </unit>
      <unit id="447">
        <segment state="initial">
          <source>Virtualization extensions, such as Intel VT-x, AMD-V, and SLAT must be enabled</source>
          <target>Virtualization extensions, such as Intel VT-x, AMD-V, and SLAT must be enabled</target>
        </segment>
      </unit>
      <unit id="448">
        <segment state="initial">
          <source>Required to support virtualization-based security.</source>
          <target>Required to support virtualization-based security.</target>
        </segment>
      </unit>
      <unit id="449">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="450">
        <segment state="initial">
          <source>Device Guard can be enabled without using virtualization-based security.</source>
          <target>Device Guard can be enabled without using virtualization-based security.</target>
        </segment>
      </unit>
      <unit id="451">
        <segment state="initial">
          <source>X64 processor</source>
          <target>X64 processor</target>
        </segment>
      </unit>
      <unit id="452">
        <segment state="initial">
          <source>Required to support virtualization-based security that uses Windows Hypervisor.</source>
          <target>Required to support virtualization-based security that uses Windows Hypervisor.</target>
        </segment>
      </unit>
      <unit id="453">
        <segment state="initial">
          <source>Hyper-V is supported only on x64 processor (and not on x86).</source>
          <target>Hyper-V is supported only on x64 processor (and not on x86).</target>
        </segment>
      </unit>
      <unit id="454">
        <segment state="initial">
          <source>Direct Memory Access (DMA) protection can be enabled to provide additional memory protection but requires processors to include DMA protection technologies.</source>
          <target>Direct Memory Access (DMA) protection can be enabled to provide additional memory protection but requires processors to include DMA protection technologies.</target>
        </segment>
      </unit>
      <unit id="455">
        <segment state="initial">
          <source>IOMMU, such as Intel VT-d, AMD-Vi</source>
          <target>IOMMU, such as Intel VT-d, AMD-Vi</target>
        </segment>
      </unit>
      <unit id="456">
        <segment state="initial">
          <source>Support for the IOMMU in Windows 10 enhances system resiliency against DMA attacks.</source>
          <target>Support for the IOMMU in Windows 10 enhances system resiliency against DMA attacks.</target>
        </segment>
      </unit>
      <unit id="457">
        <segment state="initial">
          <source>Trusted Platform Module (TPM) 2.0</source>
          <target>Trusted Platform Module (TPM) 2.0</target>
        </segment>
      </unit>
      <unit id="458">
        <segment state="initial">
          <source>Required to support health attestation and necessary for additional key protections for virtualization-based security.</source>
          <target>Required to support health attestation and necessary for additional key protections for virtualization-based security.</target>
        </segment>
      </unit>
      <unit id="459">
        <segment state="initial">
          <source>This section presented information about several closely related controls in Windows 10.</source>
          <target>This section presented information about several closely related controls in Windows 10.</target>
        </segment>
      </unit>
      <unit id="460">
        <segment state="initial">
          <source>The multi-layer defenses and in-depth approach helps to eradicate low-level malware during boot sequence.</source>
          <target>The multi-layer defenses and in-depth approach helps to eradicate low-level malware during boot sequence.</target>
        </segment>
      </unit>
      <unit id="461">
        <segment state="initial">
          <source>Virtualization-based security is a fundamental operating system architecture change that adds a new security boundary.</source>
          <target>Virtualization-based security is a fundamental operating system architecture change that adds a new security boundary.</target>
        </segment>
      </unit>
      <unit id="462">
        <segment state="initial">
          <source>Device Guard and Credential Guard respectively help to block untrusted code and protect corporate domain credentials from theft and reuse.</source>
          <target>Device Guard and Credential Guard respectively help to block untrusted code and protect corporate domain credentials from theft and reuse.</target>
        </segment>
      </unit>
      <unit id="463">
        <segment state="initial">
          <source>This section also briefly discussed the importance of managing devices and patching vulnerabilities.</source>
          <target>This section also briefly discussed the importance of managing devices and patching vulnerabilities.</target>
        </segment>
      </unit>
      <unit id="464">
        <segment state="initial">
          <source>All these technologies can be used to harden and lock down devices while limiting the risk of attackers compromising them.</source>
          <target>All these technologies can be used to harden and lock down devices while limiting the risk of attackers compromising them.</target>
        </segment>
      </unit>
      <unit id="465">
        <segment state="initial">
          <source>Detect an unhealthy Windows 10-based device</source>
          <target>Detect an unhealthy Windows 10-based device</target>
        </segment>
      </unit>
      <unit id="466">
        <segment state="initial">
          <source>As of today, many organizations only consider devices to be compliant with company policy after they’ve passed a variety of checks that show, for example, that the operating system is in the correct state, properly configured, and has security protection enabled.</source>
          <target>As of today, many organizations only consider devices to be compliant with company policy after they’ve passed a variety of checks that show, for example, that the operating system is in the correct state, properly configured, and has security protection enabled.</target>
        </segment>
      </unit>
      <unit id="467">
        <segment state="initial">
          <source>Unfortunately, with today’s systems, this form of reporting is not entirely reliable because malware can spoof a software statement about system health.</source>
          <target>Unfortunately, with today’s systems, this form of reporting is not entirely reliable because malware can spoof a software statement about system health.</target>
        </segment>
      </unit>
      <unit id="468">
        <segment state="initial">
          <source>A rootkit, or a similar low-level exploit, can report a false healthy state to traditional compliance tools.</source>
          <target>A rootkit, or a similar low-level exploit, can report a false healthy state to traditional compliance tools.</target>
        </segment>
      </unit>
      <unit id="469">
        <segment state="initial">
          <source>The biggest challenge with rootkits is that they can be undetectable to the client.</source>
          <target>The biggest challenge with rootkits is that they can be undetectable to the client.</target>
        </segment>
      </unit>
      <unit id="470">
        <segment state="initial">
          <source>Because they start before antimalware, and they have system-level privileges, they can completely disguise themselves while continuing to access system resources.</source>
          <target>Because they start before antimalware, and they have system-level privileges, they can completely disguise themselves while continuing to access system resources.</target>
        </segment>
      </unit>
      <unit id="471">
        <segment state="initial">
          <source>As a result, traditional computers infected with rootkits appear to be healthy, even with antimalware running.</source>
          <target>As a result, traditional computers infected with rootkits appear to be healthy, even with antimalware running.</target>
        </segment>
      </unit>
      <unit id="472">
        <segment state="initial">
          <source>As previously discussed, the health attestation feature of Windows 10 uses the TPM 2.0 hardware component to securely record a measurement of every boot-related component, including firmware, Windows 10 kernel, and even early boot drivers.</source>
          <target>As previously discussed, the health attestation feature of Windows 10 uses the TPM 2.0 hardware component to securely record a measurement of every boot-related component, including firmware, Windows 10 kernel, and even early boot drivers.</target>
        </segment>
      </unit>
      <unit id="473">
        <segment state="initial">
          <source>Because, health attestation leverages the hardware-based security capabilities of TPM, the log of all boot measured components remains out of the reach of any malware.</source>
          <target>Because, health attestation leverages the hardware-based security capabilities of TPM, the log of all boot measured components remains out of the reach of any malware.</target>
        </segment>
      </unit>
      <unit id="474">
        <segment state="initial">
          <source>By attesting a trusted boot state, devices can prove that they are not running low-level malware that could spoof later compliance checks.</source>
          <target>By attesting a trusted boot state, devices can prove that they are not running low-level malware that could spoof later compliance checks.</target>
        </segment>
      </unit>
      <unit id="475">
        <segment state="initial">
          <source>TPM-based health attestation provides a reliable anchor of trust for assets that contain high-value data.</source>
          <target>TPM-based health attestation provides a reliable anchor of trust for assets that contain high-value data.</target>
        </segment>
      </unit>
      <unit id="476">
        <segment state="initial">
          <source>What is the concept of device health?</source>
          <target>What is the concept of device health?</target>
        </segment>
      </unit>
      <unit id="477">
        <segment state="initial">
          <source>To understand the concept of device health, it’s important to know traditional measures that IT pros have taken to prevent the breach of malware.</source>
          <target>To understand the concept of device health, it’s important to know traditional measures that IT pros have taken to prevent the breach of malware.</target>
        </segment>
      </unit>
      <unit id="478">
        <segment state="initial">
          <source>Malware control technologies are highly focused on the prevention of installation and distribution.</source>
          <target>Malware control technologies are highly focused on the prevention of installation and distribution.</target>
        </segment>
      </unit>
      <unit id="479">
        <segment state="initial">
          <source>However, the use of traditional malware prevention technologies like antimalware or patching solutions brings a new set of issues for IT pros: the ability to monitor and control the compliance of devices accessing organization’s resources.</source>
          <target>However, the use of traditional malware prevention technologies like antimalware or patching solutions brings a new set of issues for IT pros: the ability to monitor and control the compliance of devices accessing organization’s resources.</target>
        </segment>
      </unit>
      <unit id="480">
        <segment state="initial">
          <source>The definition of device compliance will vary based on an organization’s installed antimalware, device configuration settings, patch management baseline, and other security requirements.</source>
          <target>The definition of device compliance will vary based on an organization’s installed antimalware, device configuration settings, patch management baseline, and other security requirements.</target>
        </segment>
      </unit>
      <unit id="481">
        <segment state="initial">
          <source>But health of the device is part of the overall device compliance policy.</source>
          <target>But health of the device is part of the overall device compliance policy.</target>
        </segment>
      </unit>
      <unit id="482">
        <segment state="initial">
          <source>The health of the device is not binary and depends on the organization’s security implementation.</source>
          <target>The health of the device is not binary and depends on the organization’s security implementation.</target>
        </segment>
      </unit>
      <unit id="483">
        <segment state="initial">
          <source>The Health Attestation Service provides information back to the MDM on which security features are enabled during the boot of the device by leveraging trustworthy hardware TPM.</source>
          <target>The Health Attestation Service provides information back to the MDM on which security features are enabled during the boot of the device by leveraging trustworthy hardware TPM.</target>
        </segment>
      </unit>
      <unit id="484">
        <segment state="initial">
          <source>But health attestation only provides information, which is why an MDM solution is needed to take and enforce a decision.</source>
          <target>But health attestation only provides information, which is why an MDM solution is needed to take and enforce a decision.</target>
        </segment>
      </unit>
      <unit id="485">
        <segment state="initial">
          <source>Remote device health attestation</source>
          <target>Remote device health attestation</target>
        </segment>
      </unit>
      <unit id="486">
        <segment state="initial">
          <source>In Windows 10, health attestation refers to a feature where Measured Boot data generated during the boot process is sent to a remote device health attestation service operated by Microsoft.</source>
          <target>In Windows 10, health attestation refers to a feature where Measured Boot data generated during the boot process is sent to a remote device health attestation service operated by Microsoft.</target>
        </segment>
      </unit>
      <unit id="487">
        <segment state="initial">
          <source>This is the most secure approach available for Windows 10-based devices to detect when security defenses are down.</source>
          <target>This is the most secure approach available for Windows 10-based devices to detect when security defenses are down.</target>
        </segment>
      </unit>
      <unit id="488">
        <segment state="initial">
          <source>During the boot process, the TCG log and PCRs values are sent to a remote Microsoft cloud service.</source>
          <target>During the boot process, the TCG log and PCRs values are sent to a remote Microsoft cloud service.</target>
        </segment>
      </unit>
      <unit id="489">
        <segment state="initial">
          <source>Logs are then checked by the Health Attestation Service to determine what changes have occurred on the device.</source>
          <target>Logs are then checked by the Health Attestation Service to determine what changes have occurred on the device.</target>
        </segment>
      </unit>
      <unit id="490">
        <segment state="initial">
          <source>A relying party like an MDM can inspect the report generated by the remote health attestation service.</source>
          <target>A relying party like an MDM can inspect the report generated by the remote health attestation service.</target>
        </segment>
      </unit>
      <unit id="491">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  To use the health attestation feature of Windows 10, the device must be equipped with a discrete or firmware TPM 2.0.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  To use the health attestation feature of Windows 10, the device must be equipped with a discrete or firmware TPM 2.0.</target>
        </segment>
      </unit>
      <unit id="492">
        <segment state="initial">
          <source>There is no restriction on any particular edition of Windows 10.</source>
          <target>There is no restriction on any particular edition of Windows 10.</target>
        </segment>
      </unit>
      <unit id="493">
        <segment state="initial">
          <source>Windows 10 supports health attestation scenarios by allowing applications access to the underlying health attestation configuration service provider (CSP) so that applications can request a health attestation token.</source>
          <target>Windows 10 supports health attestation scenarios by allowing applications access to the underlying health attestation configuration service provider (CSP) so that applications can request a health attestation token.</target>
        </segment>
      </unit>
      <unit id="494">
        <segment state="initial">
          <source>The measurement of the boot sequence can be checked at any time locally by an antimalware or an MDM agent.</source>
          <target>The measurement of the boot sequence can be checked at any time locally by an antimalware or an MDM agent.</target>
        </segment>
      </unit>
      <unit id="495">
        <segment state="initial">
          <source>Remote device health attestation combined with an MDM provides a hardware-rooted method for reporting the current security status and detecting any changes, without having to trust the software running on the system.</source>
          <target>Remote device health attestation combined with an MDM provides a hardware-rooted method for reporting the current security status and detecting any changes, without having to trust the software running on the system.</target>
        </segment>
      </unit>
      <unit id="496">
        <segment state="initial">
          <source>In the case where malicious code is running on the device, the use of a remote server is required.</source>
          <target>In the case where malicious code is running on the device, the use of a remote server is required.</target>
        </segment>
      </unit>
      <unit id="497">
        <segment state="initial">
          <source>If a rootkit is present on the device, the antimalware is no longer reliable, and its behavior can be hijacked by a malicious code running early in the startup sequence.</source>
          <target>If a rootkit is present on the device, the antimalware is no longer reliable, and its behavior can be hijacked by a malicious code running early in the startup sequence.</target>
        </segment>
      </unit>
      <unit id="498">
        <segment state="initial">
          <source>That's why it's important to use Secure Boot and Device Guard, to control which code is loaded during the boot sequence.</source>
          <target>That's why it's important to use Secure Boot and Device Guard, to control which code is loaded during the boot sequence.</target>
        </segment>
      </unit>
      <unit id="499">
        <segment state="initial">
          <source>The antimalware software can search to determine whether the boot sequence contains any signs of malware, such as a rootkit.</source>
          <target>The antimalware software can search to determine whether the boot sequence contains any signs of malware, such as a rootkit.</target>
        </segment>
      </unit>
      <unit id="500">
        <segment state="initial">
          <source>It can also send the TCG log and the PCRs to a remote health attestation server to provide a separation between the measurement component and the verification component.</source>
          <target>It can also send the TCG log and the PCRs to a remote health attestation server to provide a separation between the measurement component and the verification component.</target>
        </segment>
      </unit>
      <unit id="501">
        <segment state="initial">
          <source>Health attestation logs the measurements in various TPM Platform Configuration Registers (PCRs) and TCG logs during the boot process.</source>
          <target>Health attestation logs the measurements in various TPM Platform Configuration Registers (PCRs) and TCG logs during the boot process.</target>
        </segment>
      </unit>
      <unit id="502">
        <segment state="initial">
          <source>figure 6</source>
          <target>figure 6</target>
        </segment>
      </unit>
      <unit id="503">
        <segment state="initial">
          <source>When starting a device equipped with a TPM, a measurement of different components is performed.</source>
          <target>When starting a device equipped with a TPM, a measurement of different components is performed.</target>
        </segment>
      </unit>
      <unit id="504">
        <segment state="initial">
          <source>This includes firmware, UEFI drivers, CPU microcode, and also all the Windows 10 drivers whose type is Boot Start.</source>
          <target>This includes firmware, UEFI drivers, CPU microcode, and also all the Windows 10 drivers whose type is Boot Start.</target>
        </segment>
      </unit>
      <unit id="505">
        <segment state="initial">
          <source>The raw measurements are stored in the TPM PCR registers while the details of all events (executable path, authority certification, and so on) are available in the TCG log.</source>
          <target>The raw measurements are stored in the TPM PCR registers while the details of all events (executable path, authority certification, and so on) are available in the TCG log.</target>
        </segment>
      </unit>
      <unit id="506">
        <segment state="initial">
          <source>figure 7</source>
          <target>figure 7</target>
        </segment>
      </unit>
      <unit id="507">
        <segment state="initial">
          <source>The health attestation process works as follows:</source>
          <target>The health attestation process works as follows:</target>
        </segment>
      </unit>
      <unit id="508">
        <segment state="initial">
          <source>Hardware boot components are measured.</source>
          <target>Hardware boot components are measured.</target>
        </segment>
      </unit>
      <unit id="509">
        <segment state="initial">
          <source>Operating system boot components are measured.</source>
          <target>Operating system boot components are measured.</target>
        </segment>
      </unit>
      <unit id="510">
        <segment state="initial">
          <source>If Device Guard is enabled, current Device Guard policy is measured.</source>
          <target>If Device Guard is enabled, current Device Guard policy is measured.</target>
        </segment>
      </unit>
      <unit id="511">
        <segment state="initial">
          <source>Windows kernel is measured.</source>
          <target>Windows kernel is measured.</target>
        </segment>
      </unit>
      <unit id="512">
        <segment state="initial">
          <source>Antivirus software is started as the first kernel mode driver.</source>
          <target>Antivirus software is started as the first kernel mode driver.</target>
        </segment>
      </unit>
      <unit id="513">
        <segment state="initial">
          <source>Boot start drivers are measured.</source>
          <target>Boot start drivers are measured.</target>
        </segment>
      </unit>
      <unit id="514">
        <segment state="initial">
          <source>MDM server through the MDM agent issues a health check command by leveraging the Health Attestation CSP.</source>
          <target>MDM server through the MDM agent issues a health check command by leveraging the Health Attestation CSP.</target>
        </segment>
      </unit>
      <unit id="515">
        <segment state="initial">
          <source>Boot measurements are validated by the Health Attestation Service</source>
          <target>Boot measurements are validated by the Health Attestation Service</target>
        </segment>
      </unit>
      <unit id="516">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  By default, the last 100 system boot logs and all associated resume logs are archived in the %SystemRoot%<ph dataRef="id3" id="ph1" />logs<ph dataRef="id4" id="ph2" />measuredboot folder.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  By default, the last 100 system boot logs and all associated resume logs are archived in the %SystemRoot%<ph dataRef="id3" id="ph1" />logs<ph dataRef="id4" id="ph2" />measuredboot folder.</target>
        </segment>
      </unit>
      <unit id="517">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\_</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
          <data id="id10">\\</data>
          <data id="id11">\\</data>
        </originalData>
        <segment state="initial">
          <source>The number of retained logs may be set with the registry <pc dataRefEnd="id2" dataRefStart="id1" id="p1">REG<ph dataRef="id3" id="ph1" />DWORD</pc> value <pc dataRefEnd="id5" dataRefStart="id4" id="p2">PlatformLogRetention</pc> under the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">HKLM<ph dataRef="id8" id="ph2" />SYSTEM<ph dataRef="id9" id="ph3" />CurrentControlSet<ph dataRef="id10" id="ph4" />Services<ph dataRef="id11" id="ph5" />TPM</pc> key.</source>
          <target>The number of retained logs may be set with the registry <pc dataRefEnd="id2" dataRefStart="id1" id="p1">REG<ph dataRef="id3" id="ph1" />DWORD</pc> value <pc dataRefEnd="id5" dataRefStart="id4" id="p2">PlatformLogRetention</pc> under the <pc dataRefEnd="id7" dataRefStart="id6" id="p3">HKLM<ph dataRef="id8" id="ph2" />SYSTEM<ph dataRef="id9" id="ph3" />CurrentControlSet<ph dataRef="id10" id="ph4" />Services<ph dataRef="id11" id="ph5" />TPM</pc> key.</target>
        </segment>
      </unit>
      <unit id="518">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>A value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">0</pc> will turn off log archival and a value of <pc dataRefEnd="id4" dataRefStart="id3" id="p2">0xffffffff</pc> will keep all logs.</source>
          <target>A value of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">0</pc> will turn off log archival and a value of <pc dataRefEnd="id4" dataRefStart="id3" id="p2">0xffffffff</pc> will keep all logs.</target>
        </segment>
      </unit>
      <unit id="519">
        <segment state="initial">
          <source>The following process describes how health boot measurements are sent to the health attestation service:</source>
          <target>The following process describes how health boot measurements are sent to the health attestation service:</target>
        </segment>
      </unit>
      <unit id="520">
        <segment state="initial">
          <source>The client (a Windows 10-based device with a TPM 2.0) initiates the request with the remote device health attestation service.</source>
          <target>The client (a Windows 10-based device with a TPM 2.0) initiates the request with the remote device health attestation service.</target>
        </segment>
      </unit>
      <unit id="521">
        <segment state="initial">
          <source>Because the health attestation server is expected to be a Microsoft cloud service, the URI is already pre-provisioned in the client.</source>
          <target>Because the health attestation server is expected to be a Microsoft cloud service, the URI is already pre-provisioned in the client.</target>
        </segment>
      </unit>
      <unit id="522">
        <segment state="initial">
          <source>The client then sends the TCG log, the AIK signed data (PCR values, boot counter) and the AIK certificate information.</source>
          <target>The client then sends the TCG log, the AIK signed data (PCR values, boot counter) and the AIK certificate information.</target>
        </segment>
      </unit>
      <unit id="523">
        <segment state="initial">
          <source>The remote device heath attestation service then:</source>
          <target>The remote device heath attestation service then:</target>
        </segment>
      </unit>
      <unit id="524">
        <segment state="initial">
          <source>Verifies that the AIK certificate is issued by a known and trusted CA and the certificate is valid and not revoked.</source>
          <target>Verifies that the AIK certificate is issued by a known and trusted CA and the certificate is valid and not revoked.</target>
        </segment>
      </unit>
      <unit id="525">
        <segment state="initial">
          <source>Verifies that the signature on the PCR quotes is correct and consistent with the TCG log value.</source>
          <target>Verifies that the signature on the PCR quotes is correct and consistent with the TCG log value.</target>
        </segment>
      </unit>
      <unit id="526">
        <segment state="initial">
          <source>Parses the properties in the TCG log.</source>
          <target>Parses the properties in the TCG log.</target>
        </segment>
      </unit>
      <unit id="527">
        <segment state="initial">
          <source>Issues the device health token that contains the health information, the AIK information, and the boot counter information.</source>
          <target>Issues the device health token that contains the health information, the AIK information, and the boot counter information.</target>
        </segment>
      </unit>
      <unit id="528">
        <segment state="initial">
          <source>The health token also contains valid issuance time.</source>
          <target>The health token also contains valid issuance time.</target>
        </segment>
      </unit>
      <unit id="529">
        <segment state="initial">
          <source>The device health token is encrypted and signed, that means that the information is protected and only accessible to issuing health attestation service.</source>
          <target>The device health token is encrypted and signed, that means that the information is protected and only accessible to issuing health attestation service.</target>
        </segment>
      </unit>
      <unit id="530">
        <segment state="initial">
          <source>The client stores the health encrypted blob in its local store.</source>
          <target>The client stores the health encrypted blob in its local store.</target>
        </segment>
      </unit>
      <unit id="531">
        <segment state="initial">
          <source>The device health token contains device health status, a device ID (the Windows AIK), and the boot counter.</source>
          <target>The device health token contains device health status, a device ID (the Windows AIK), and the boot counter.</target>
        </segment>
      </unit>
      <unit id="532">
        <segment state="initial">
          <source>figure 8</source>
          <target>figure 8</target>
        </segment>
      </unit>
      <unit id="533">
        <segment state="initial">
          <source>Device health attestation components</source>
          <target>Device health attestation components</target>
        </segment>
      </unit>
      <unit id="534">
        <segment state="initial">
          <source>The device health attestation solution involves different components that are TPM, Health Attestation CSP, and the Windows Health Attestation Service.</source>
          <target>The device health attestation solution involves different components that are TPM, Health Attestation CSP, and the Windows Health Attestation Service.</target>
        </segment>
      </unit>
      <unit id="535">
        <segment state="initial">
          <source>Those components are described in this section.</source>
          <target>Those components are described in this section.</target>
        </segment>
      </unit>
      <unit id="536">
        <segment state="initial">
          <source>Trusted Platform Module</source>
          <target>Trusted Platform Module</target>
        </segment>
      </unit>
      <unit id="537">
        <segment state="initial">
          <source>It’s all about TPM 2.0 and endorsement certificates.</source>
          <target>It’s all about TPM 2.0 and endorsement certificates.</target>
        </segment>
      </unit>
      <unit id="538">
        <segment state="initial">
          <source>This section describes how PCRs (that contain system configuration data), endorsement key (EK) (that act as an identity card for TPM), SRK (that protect keys) and AIKs (that can report platform state) are used for health attestation reporting.</source>
          <target>This section describes how PCRs (that contain system configuration data), endorsement key (EK) (that act as an identity card for TPM), SRK (that protect keys) and AIKs (that can report platform state) are used for health attestation reporting.</target>
        </segment>
      </unit>
      <unit id="539">
        <segment state="initial">
          <source>In a simplified manner, the TPM is a passive component with limited resources.</source>
          <target>In a simplified manner, the TPM is a passive component with limited resources.</target>
        </segment>
      </unit>
      <unit id="540">
        <segment state="initial">
          <source>It can calculate random numbers, RSA keys, decrypt short data, store hashes taken when booting the device.</source>
          <target>It can calculate random numbers, RSA keys, decrypt short data, store hashes taken when booting the device.</target>
        </segment>
      </unit>
      <unit id="541">
        <segment state="initial">
          <source>A TPM incorporates in a single component:</source>
          <target>A TPM incorporates in a single component:</target>
        </segment>
      </unit>
      <unit id="542">
        <segment state="initial">
          <source>A RSA 2048-bit key generator</source>
          <target>A RSA 2048-bit key generator</target>
        </segment>
      </unit>
      <unit id="543">
        <segment state="initial">
          <source>A random number generator</source>
          <target>A random number generator</target>
        </segment>
      </unit>
      <unit id="544">
        <segment state="initial">
          <source>Nonvolatile memory for storing EK, SRK, and AIK keys</source>
          <target>Nonvolatile memory for storing EK, SRK, and AIK keys</target>
        </segment>
      </unit>
      <unit id="545">
        <segment state="initial">
          <source>A cryptographic engine to encrypt, decrypt, and sign</source>
          <target>A cryptographic engine to encrypt, decrypt, and sign</target>
        </segment>
      </unit>
      <unit id="546">
        <segment state="initial">
          <source>Volatile memory for storing the PCRs and RSA keys</source>
          <target>Volatile memory for storing the PCRs and RSA keys</target>
        </segment>
      </unit>
      <unit id="547">
        <segment state="initial">
          <source>Endorsement key</source>
          <target>Endorsement key</target>
        </segment>
      </unit>
      <unit id="548">
        <segment state="initial">
          <source>The TPM has an embedded unique cryptographic key called the endorsement key.</source>
          <target>The TPM has an embedded unique cryptographic key called the endorsement key.</target>
        </segment>
      </unit>
      <unit id="549">
        <segment state="initial">
          <source>The TPM endorsement key is a pair of asymmetric keys (RSA size 2048 bits).</source>
          <target>The TPM endorsement key is a pair of asymmetric keys (RSA size 2048 bits).</target>
        </segment>
      </unit>
      <unit id="550">
        <segment state="initial">
          <source>The endorsement key public key is generally used for sending securely sensitive parameters, such as when taking possession of the TPM that contains the defining hash of the owner password.</source>
          <target>The endorsement key public key is generally used for sending securely sensitive parameters, such as when taking possession of the TPM that contains the defining hash of the owner password.</target>
        </segment>
      </unit>
      <unit id="551">
        <segment state="initial">
          <source>The EK private key is used when creating secondary keys like AIKs.</source>
          <target>The EK private key is used when creating secondary keys like AIKs.</target>
        </segment>
      </unit>
      <unit id="552">
        <segment state="initial">
          <source>The endorsement key acts as an identity card for the TPM.</source>
          <target>The endorsement key acts as an identity card for the TPM.</target>
        </segment>
      </unit>
      <unit id="553">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733952)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understand the TPM endorsement key</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understand the TPM endorsement key</pc>.</target>
        </segment>
      </unit>
      <unit id="554">
        <segment state="initial">
          <source>The endorsement key is often accompanied by one or two digital certificates:</source>
          <target>The endorsement key is often accompanied by one or two digital certificates:</target>
        </segment>
      </unit>
      <unit id="555">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>One certificate is produced by the TPM manufacturer and is called the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">endorsement certificate</pc>.</source>
          <target>One certificate is produced by the TPM manufacturer and is called the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">endorsement certificate</pc>.</target>
        </segment>
      </unit>
      <unit id="556">
        <segment state="initial">
          <source>The endorsement certificate is used to prove the authenticity of the TPM (for example, that it’s a real TPM manufactured by a specific chip maker) to local processes, applications, or cloud services.</source>
          <target>The endorsement certificate is used to prove the authenticity of the TPM (for example, that it’s a real TPM manufactured by a specific chip maker) to local processes, applications, or cloud services.</target>
        </segment>
      </unit>
      <unit id="557">
        <segment state="initial">
          <source>The endorsement certificate is created during manufacturing or the first time the TPM is initialized by communicating with an online service.</source>
          <target>The endorsement certificate is created during manufacturing or the first time the TPM is initialized by communicating with an online service.</target>
        </segment>
      </unit>
      <unit id="558">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The other certificate is produced by the platform builder and is called the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">platform certificate</pc> to indicate that a specific TPM is integrated with a certain device.</source>
          <target>The other certificate is produced by the platform builder and is called the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">platform certificate</pc> to indicate that a specific TPM is integrated with a certain device.</target>
        </segment>
      </unit>
      <unit id="559">
        <segment state="initial">
          <source>For certain devices that use firmware-based TPM produced by Intel or Qualcomm, the endorsement certificate is created when the TPM is initialized during the OOBE of Windows 10.</source>
          <target>For certain devices that use firmware-based TPM produced by Intel or Qualcomm, the endorsement certificate is created when the TPM is initialized during the OOBE of Windows 10.</target>
        </segment>
      </unit>
      <unit id="560">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Secure Boot protects the platform until the Windows kernel is loaded.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Secure Boot protects the platform until the Windows kernel is loaded.</target>
        </segment>
      </unit>
      <unit id="561">
        <segment state="initial">
          <source>Then protections like Trusted Boot, Hyper-V Code Integrity and ELAM take over.</source>
          <target>Then protections like Trusted Boot, Hyper-V Code Integrity and ELAM take over.</target>
        </segment>
      </unit>
      <unit id="562">
        <segment state="initial">
          <source>A device that uses Intel TPM or Qualcomm TPM gets a signed certificate online from the manufacturer that has created the chip and then stores the signed certificate in TPM storage.</source>
          <target>A device that uses Intel TPM or Qualcomm TPM gets a signed certificate online from the manufacturer that has created the chip and then stores the signed certificate in TPM storage.</target>
        </segment>
      </unit>
      <unit id="563">
        <segment state="initial">
          <source>For the operation to succeed, if you are filtering Internet access from your client devices, you must authorize the following URLs:</source>
          <target>For the operation to succeed, if you are filtering Internet access from your client devices, you must authorize the following URLs:</target>
        </segment>
      </unit>
      <unit id="564">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For Intel firmware TPM: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://ekop.intel.com/ekcertservice</pc></source>
          <target>For Intel firmware TPM: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://ekop.intel.com/ekcertservice</pc></target>
        </segment>
      </unit>
      <unit id="565">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For Qualcomm firmware TPM: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://ekcert.spserv.microsoft.com/</pc></source>
          <target>For Qualcomm firmware TPM: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://ekcert.spserv.microsoft.com/</pc></target>
        </segment>
      </unit>
      <unit id="566">
        <segment state="initial">
          <source>Attestation Identity Keys</source>
          <target>Attestation Identity Keys</target>
        </segment>
      </unit>
      <unit id="567">
        <segment state="initial">
          <source>Because the endorsement certificate is unique for each device and does not change, the usage of it may present privacy concerns because it's theoretically possible to track a specific device.</source>
          <target>Because the endorsement certificate is unique for each device and does not change, the usage of it may present privacy concerns because it's theoretically possible to track a specific device.</target>
        </segment>
      </unit>
      <unit id="568">
        <segment state="initial">
          <source>To avoid this privacy problem, Windows 10 issues a derived attestation anchor based on the endorsement certificate.</source>
          <target>To avoid this privacy problem, Windows 10 issues a derived attestation anchor based on the endorsement certificate.</target>
        </segment>
      </unit>
      <unit id="569">
        <segment state="initial">
          <source>This intermediate key, which can be attested to an endorsement key, is the Attestation Identity Key (AIK) and the corresponding certificate is called the AIK certificate.</source>
          <target>This intermediate key, which can be attested to an endorsement key, is the Attestation Identity Key (AIK) and the corresponding certificate is called the AIK certificate.</target>
        </segment>
      </unit>
      <unit id="570">
        <segment state="initial">
          <source>This AIK certificate is issued by a Microsoft cloud service.</source>
          <target>This AIK certificate is issued by a Microsoft cloud service.</target>
        </segment>
      </unit>
      <unit id="571">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Before the device can report its health using the TPM 2.0 attestation functions, an AIK certificate must be provisioned in conjunction with a third-party service like the Microsoft Cloud CA service.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Before the device can report its health using the TPM 2.0 attestation functions, an AIK certificate must be provisioned in conjunction with a third-party service like the Microsoft Cloud CA service.</target>
        </segment>
      </unit>
      <unit id="572">
        <segment state="initial">
          <source>After it is provisioned, the AIK private key can be used to report platform configuration.</source>
          <target>After it is provisioned, the AIK private key can be used to report platform configuration.</target>
        </segment>
      </unit>
      <unit id="573">
        <segment state="initial">
          <source>Windows 10 creates a signature over the platform log state (and a monotonic counter value) at each boot by using the AIK.</source>
          <target>Windows 10 creates a signature over the platform log state (and a monotonic counter value) at each boot by using the AIK.</target>
        </segment>
      </unit>
      <unit id="574">
        <segment state="initial">
          <source>The AIK is an asymmetric (public/private) key pair that is used as a substitute for the EK as an identity for the TPM for privacy purposes.</source>
          <target>The AIK is an asymmetric (public/private) key pair that is used as a substitute for the EK as an identity for the TPM for privacy purposes.</target>
        </segment>
      </unit>
      <unit id="575">
        <segment state="initial">
          <source>The private portion of an AIK is never revealed or used outside the TPM and can only be used inside the TPM for a limited set of operations.</source>
          <target>The private portion of an AIK is never revealed or used outside the TPM and can only be used inside the TPM for a limited set of operations.</target>
        </segment>
      </unit>
      <unit id="576">
        <segment state="initial">
          <source>Furthermore, it can only be used for signing, and only for limited, TPM-defined operations.</source>
          <target>Furthermore, it can only be used for signing, and only for limited, TPM-defined operations.</target>
        </segment>
      </unit>
      <unit id="577">
        <segment state="initial">
          <source>Windows 10 creates AIKs protected by the TPM, if available, that are 2048-bit RSA signing keys.</source>
          <target>Windows 10 creates AIKs protected by the TPM, if available, that are 2048-bit RSA signing keys.</target>
        </segment>
      </unit>
      <unit id="578">
        <segment state="initial">
          <source>Microsoft is hosting a cloud service called Microsoft Cloud CA to establish cryptographically that it is communicating with a real TPM and that the TPM possesses the presented AIK.</source>
          <target>Microsoft is hosting a cloud service called Microsoft Cloud CA to establish cryptographically that it is communicating with a real TPM and that the TPM possesses the presented AIK.</target>
        </segment>
      </unit>
      <unit id="579">
        <segment state="initial">
          <source>After the Microsoft Cloud CA service has established these facts, it will issue an AIK certificate to the Windows 10-based device.</source>
          <target>After the Microsoft Cloud CA service has established these facts, it will issue an AIK certificate to the Windows 10-based device.</target>
        </segment>
      </unit>
      <unit id="580">
        <segment state="initial">
          <source>Many existing devices that will upgrade to Windows 10 will not have a TPM, or the TPM will not contain an endorsement certificate.</source>
          <target>Many existing devices that will upgrade to Windows 10 will not have a TPM, or the TPM will not contain an endorsement certificate.</target>
        </segment>
      </unit>
      <unit id="581">
        <segment state="initial">
          <source>To accommodate those devices, Windows 10 allows the issuance of AIK certificates without the presence of an endorsement certificate.</source>
          <target>To accommodate those devices, Windows 10 allows the issuance of AIK certificates without the presence of an endorsement certificate.</target>
        </segment>
      </unit>
      <unit id="582">
        <segment state="initial">
          <source>Such AIK certificates are not issued by Microsoft Cloud CA.</source>
          <target>Such AIK certificates are not issued by Microsoft Cloud CA.</target>
        </segment>
      </unit>
      <unit id="583">
        <segment state="initial">
          <source>Note that this is not as trustworthy as an endorsement certificate that is burned into the device during manufacturing, but it will provide compatibility for advanced scenarios like Microsoft Passport without TPM.</source>
          <target>Note that this is not as trustworthy as an endorsement certificate that is burned into the device during manufacturing, but it will provide compatibility for advanced scenarios like Microsoft Passport without TPM.</target>
        </segment>
      </unit>
      <unit id="584">
        <segment state="initial">
          <source>In the issued AIK certificate, a special OID is added to attest that endorsement certificate was used during the attestation process.</source>
          <target>In the issued AIK certificate, a special OID is added to attest that endorsement certificate was used during the attestation process.</target>
        </segment>
      </unit>
      <unit id="585">
        <segment state="initial">
          <source>This information can be leveraged by a relying party to decide whether to reject devices that are attested using AIK certificates without an endorsement certificate or accept them.</source>
          <target>This information can be leveraged by a relying party to decide whether to reject devices that are attested using AIK certificates without an endorsement certificate or accept them.</target>
        </segment>
      </unit>
      <unit id="586">
        <segment state="initial">
          <source>Another scenario can be to not allow access to high-value assets from devices that are attested by an AIK certificate that is not backed by an endorsement certificate.</source>
          <target>Another scenario can be to not allow access to high-value assets from devices that are attested by an AIK certificate that is not backed by an endorsement certificate.</target>
        </segment>
      </unit>
      <unit id="587">
        <segment state="initial">
          <source>Storage root key</source>
          <target>Storage root key</target>
        </segment>
      </unit>
      <unit id="588">
        <segment state="initial">
          <source>The storage root key (SRK) is also an asymmetric key pair (RSA with a minimum of 2048 bits length).</source>
          <target>The storage root key (SRK) is also an asymmetric key pair (RSA with a minimum of 2048 bits length).</target>
        </segment>
      </unit>
      <unit id="589">
        <segment state="initial">
          <source>The SRK has a major role and is used to protect TPM keys, so that these keys cannot be used without the TPM.</source>
          <target>The SRK has a major role and is used to protect TPM keys, so that these keys cannot be used without the TPM.</target>
        </segment>
      </unit>
      <unit id="590">
        <segment state="initial">
          <source>The SRK key is created when the ownership of the TPM is taken.</source>
          <target>The SRK key is created when the ownership of the TPM is taken.</target>
        </segment>
      </unit>
      <unit id="591">
        <segment state="initial">
          <source>Platform Configuration Registers</source>
          <target>Platform Configuration Registers</target>
        </segment>
      </unit>
      <unit id="592">
        <segment state="initial">
          <source>The TPM contains a set of registers that are designed to provide a cryptographic representation of the software and state of the system that booted.</source>
          <target>The TPM contains a set of registers that are designed to provide a cryptographic representation of the software and state of the system that booted.</target>
        </segment>
      </unit>
      <unit id="593">
        <segment state="initial">
          <source>These registers are called Platform Configuration Registers (PCRs).</source>
          <target>These registers are called Platform Configuration Registers (PCRs).</target>
        </segment>
      </unit>
      <unit id="594">
        <segment state="initial">
          <source>The measurement of the boot sequence is based on the PCR and TCG log.</source>
          <target>The measurement of the boot sequence is based on the PCR and TCG log.</target>
        </segment>
      </unit>
      <unit id="595">
        <segment state="initial">
          <source>To establish a static root of trust, when the device is starting, the device must be able to measure the firmware code before execution.</source>
          <target>To establish a static root of trust, when the device is starting, the device must be able to measure the firmware code before execution.</target>
        </segment>
      </unit>
      <unit id="596">
        <originalData>
          <data id="id1">\[</data>
          <data id="id2">\]</data>
        </originalData>
        <segment state="initial">
          <source>In this case, the Core Root of Trust for Measurement (CRTM) is executed from the boot, calculates the hash of the firmware, then stores it by expanding the register PCR<ph dataRef="id1" id="ph1" />0<ph dataRef="id2" id="ph2" /> and transfers execution to the firmware.</source>
          <target>In this case, the Core Root of Trust for Measurement (CRTM) is executed from the boot, calculates the hash of the firmware, then stores it by expanding the register PCR<ph dataRef="id1" id="ph1" />0<ph dataRef="id2" id="ph2" /> and transfers execution to the firmware.</target>
        </segment>
      </unit>
      <unit id="597">
        <segment state="initial">
          <source>PCRs are set to zero when the platform is booted, and it is the job of the firmware that boots the platform to measure components in the boot chain and to record the measurements in the PCRs.</source>
          <target>PCRs are set to zero when the platform is booted, and it is the job of the firmware that boots the platform to measure components in the boot chain and to record the measurements in the PCRs.</target>
        </segment>
      </unit>
      <unit id="598">
        <segment state="initial">
          <source>Typically, boot components take the hash of the next component that is to be run and record the measurements in the PCRs.</source>
          <target>Typically, boot components take the hash of the next component that is to be run and record the measurements in the PCRs.</target>
        </segment>
      </unit>
      <unit id="599">
        <segment state="initial">
          <source>The initial component that starts the measurement chain is implicitly trusted.</source>
          <target>The initial component that starts the measurement chain is implicitly trusted.</target>
        </segment>
      </unit>
      <unit id="600">
        <segment state="initial">
          <source>This is the CRTM.</source>
          <target>This is the CRTM.</target>
        </segment>
      </unit>
      <unit id="601">
        <segment state="initial">
          <source>Platform manufacturers are required to have a secure update process for the CRTM or not permit updates to it.</source>
          <target>Platform manufacturers are required to have a secure update process for the CRTM or not permit updates to it.</target>
        </segment>
      </unit>
      <unit id="602">
        <segment state="initial">
          <source>The PCRs record a cumulative hash of the components that have been measured.</source>
          <target>The PCRs record a cumulative hash of the components that have been measured.</target>
        </segment>
      </unit>
      <unit id="603">
        <segment state="initial">
          <source>The value of a PCR on its own is hard to interpret (it is just a hash value), but platforms typically keep a log with details of what has been measured, and the PCRs merely ensure that the log has not been tampered with.</source>
          <target>The value of a PCR on its own is hard to interpret (it is just a hash value), but platforms typically keep a log with details of what has been measured, and the PCRs merely ensure that the log has not been tampered with.</target>
        </segment>
      </unit>
      <unit id="604">
        <segment state="initial">
          <source>The logs are referred as a TCG log.</source>
          <target>The logs are referred as a TCG log.</target>
        </segment>
      </unit>
      <unit id="605">
        <segment state="initial">
          <source>Each time a register PCR is extended, an entry is added to the TCG log.</source>
          <target>Each time a register PCR is extended, an entry is added to the TCG log.</target>
        </segment>
      </unit>
      <unit id="606">
        <segment state="initial">
          <source>Thus, throughout the boot process, a trace of the executable code and configuration data is created in the TCG log.</source>
          <target>Thus, throughout the boot process, a trace of the executable code and configuration data is created in the TCG log.</target>
        </segment>
      </unit>
      <unit id="607">
        <segment state="initial">
          <source>TPM provisioning</source>
          <target>TPM provisioning</target>
        </segment>
      </unit>
      <unit id="608">
        <segment state="initial">
          <source>For the TPM of a Windows 10-based device to be usable, it must first be provisioned.</source>
          <target>For the TPM of a Windows 10-based device to be usable, it must first be provisioned.</target>
        </segment>
      </unit>
      <unit id="609">
        <segment state="initial">
          <source>The process of provisioning differs somewhat based on TPM versions, but, when successful, it results in the TPM being usable and the owner authorization data (ownerAuth) for the TPM being stored locally on the registry.</source>
          <target>The process of provisioning differs somewhat based on TPM versions, but, when successful, it results in the TPM being usable and the owner authorization data (ownerAuth) for the TPM being stored locally on the registry.</target>
        </segment>
      </unit>
      <unit id="610">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
          <data id="id10">\\</data>
        </originalData>
        <segment state="initial">
          <source>When the TPM is provisioned, Windows 10 will first attempt to determine the EK and locally stored <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ownerAuth</pc> values by looking in the registry at the following location: <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HKLM<ph dataRef="id5" id="ph1" />SYSTEM<ph dataRef="id6" id="ph2" />CurrentControlSet<ph dataRef="id7" id="ph3" />Services<ph dataRef="id8" id="ph4" />TPM<ph dataRef="id9" id="ph5" />WMI<ph dataRef="id10" id="ph6" />Endorsement</pc></source>
          <target>When the TPM is provisioned, Windows 10 will first attempt to determine the EK and locally stored <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ownerAuth</pc> values by looking in the registry at the following location: <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HKLM<ph dataRef="id5" id="ph1" />SYSTEM<ph dataRef="id6" id="ph2" />CurrentControlSet<ph dataRef="id7" id="ph3" />Services<ph dataRef="id8" id="ph4" />TPM<ph dataRef="id9" id="ph5" />WMI<ph dataRef="id10" id="ph6" />Endorsement</pc></target>
        </segment>
      </unit>
      <unit id="611">
        <segment state="initial">
          <source>During the provisioning process, the device may need to be restarted.</source>
          <target>During the provisioning process, the device may need to be restarted.</target>
        </segment>
      </unit>
      <unit id="612">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-TpmEndorsementKeyInfo PowerShell</pc> cmdlet can be used with administrative privilege to get information about the endorsement key and certificates of the TPM.</source>
          <target>Note that the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-TpmEndorsementKeyInfo PowerShell</pc> cmdlet can be used with administrative privilege to get information about the endorsement key and certificates of the TPM.</target>
        </segment>
      </unit>
      <unit id="613">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
          <data id="id10">\\</data>
          <data id="id11">\\</data>
        </originalData>
        <segment state="initial">
          <source>If the TPM ownership is not known but the EK exists, the client library will provision the TPM and will store the resulting <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ownerAuth</pc> value into the registry if the policy allows it will store the SRK public portion at the following location: <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HKLM<ph dataRef="id5" id="ph1" />SYSTEM<ph dataRef="id6" id="ph2" />CurrentControlSet<ph dataRef="id7" id="ph3" />Services<ph dataRef="id8" id="ph4" />TPM<ph dataRef="id9" id="ph5" />WMI<ph dataRef="id10" id="ph6" />Admin<ph dataRef="id11" id="ph7" />SRKPub</pc></source>
          <target>If the TPM ownership is not known but the EK exists, the client library will provision the TPM and will store the resulting <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ownerAuth</pc> value into the registry if the policy allows it will store the SRK public portion at the following location: <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HKLM<ph dataRef="id5" id="ph1" />SYSTEM<ph dataRef="id6" id="ph2" />CurrentControlSet<ph dataRef="id7" id="ph3" />Services<ph dataRef="id8" id="ph4" />TPM<ph dataRef="id9" id="ph5" />WMI<ph dataRef="id10" id="ph6" />Admin<ph dataRef="id11" id="ph7" />SRKPub</pc></target>
        </segment>
      </unit>
      <unit id="614">
        <segment state="initial">
          <source>As part of the provisioning process, Windows 10 will create an AIK with the TPM.</source>
          <target>As part of the provisioning process, Windows 10 will create an AIK with the TPM.</target>
        </segment>
      </unit>
      <unit id="615">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
        </originalData>
        <segment state="initial">
          <source>When this operation is performed, the resulting AIK public portion is stored in the registry at the following location: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HKLM<ph dataRef="id3" id="ph1" />SYSTEM<ph dataRef="id4" id="ph2" />CurrentControlSet<ph dataRef="id5" id="ph3" />Services<ph dataRef="id6" id="ph4" />TPM<ph dataRef="id7" id="ph5" />WMI<ph dataRef="id8" id="ph6" />WindowsAIKPub</pc></source>
          <target>When this operation is performed, the resulting AIK public portion is stored in the registry at the following location: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HKLM<ph dataRef="id3" id="ph1" />SYSTEM<ph dataRef="id4" id="ph2" />CurrentControlSet<ph dataRef="id5" id="ph3" />Services<ph dataRef="id6" id="ph4" />TPM<ph dataRef="id7" id="ph5" />WMI<ph dataRef="id8" id="ph6" />WindowsAIKPub</pc></target>
        </segment>
      </unit>
      <unit id="616">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For provisioning AIK certificates and filtering Internet access, you must authorize the following wildcard URL: <pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://<ph dataRef="id5" id="ph1" />.microsoftaik.azure.net</pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For provisioning AIK certificates and filtering Internet access, you must authorize the following wildcard URL: <pc dataRefEnd="id4" dataRefStart="id3" id="p2">https://<ph dataRef="id5" id="ph1" />.microsoftaik.azure.net</pc></target>
        </segment>
      </unit>
      <unit id="617">
        <segment state="initial">
          <source>Windows 10 Health Attestation CSP</source>
          <target>Windows 10 Health Attestation CSP</target>
        </segment>
      </unit>
      <unit id="618">
        <segment state="initial">
          <source>Windows 10 contains a configuration service provider (CSP) specialized for interacting with the health attestation feature.</source>
          <target>Windows 10 contains a configuration service provider (CSP) specialized for interacting with the health attestation feature.</target>
        </segment>
      </unit>
      <unit id="619">
        <segment state="initial">
          <source>A CSP is a component that plugs into the Windows MDM client and provides a published protocol for how MDM servers can configure settings and manage Windows-based devices.</source>
          <target>A CSP is a component that plugs into the Windows MDM client and provides a published protocol for how MDM servers can configure settings and manage Windows-based devices.</target>
        </segment>
      </unit>
      <unit id="620">
        <segment state="initial">
          <source>The management protocol is represented as a tree structure that can be specified as URIs with functions to perform on the URIs such as “get”, “set”, “delete”, and so on.</source>
          <target>The management protocol is represented as a tree structure that can be specified as URIs with functions to perform on the URIs such as “get”, “set”, “delete”, and so on.</target>
        </segment>
      </unit>
      <unit id="621">
        <segment state="initial">
          <source>The following is a list of functions performed by the Windows 10 Health Attestation CSP:</source>
          <target>The following is a list of functions performed by the Windows 10 Health Attestation CSP:</target>
        </segment>
      </unit>
      <unit id="622">
        <segment state="initial">
          <source>Collects data that is used to verify a device’s health status</source>
          <target>Collects data that is used to verify a device’s health status</target>
        </segment>
      </unit>
      <unit id="623">
        <segment state="initial">
          <source>Forwards the data to the Health Attestation Service</source>
          <target>Forwards the data to the Health Attestation Service</target>
        </segment>
      </unit>
      <unit id="624">
        <segment state="initial">
          <source>Provisions the Health Attestation Certificate that it receives from the Health Attestation Service</source>
          <target>Provisions the Health Attestation Certificate that it receives from the Health Attestation Service</target>
        </segment>
      </unit>
      <unit id="625">
        <segment state="initial">
          <source>Upon request, forwards the Health Attestation Certificate (received from the Health Attestation Service) and related runtime information to the MDM server for verification</source>
          <target>Upon request, forwards the Health Attestation Certificate (received from the Health Attestation Service) and related runtime information to the MDM server for verification</target>
        </segment>
      </unit>
      <unit id="626">
        <segment state="initial">
          <source>During a health attestation session, the Health Attestation CSP forwards the TCG logs and PCRs values that are measured during the boot, by using a secure communication channel to the Health Attestation Service.</source>
          <target>During a health attestation session, the Health Attestation CSP forwards the TCG logs and PCRs values that are measured during the boot, by using a secure communication channel to the Health Attestation Service.</target>
        </segment>
      </unit>
      <unit id="627">
        <segment state="initial">
          <source>When an MDM server validates that a device has attested to the Health Attestation Service, it will be given a set of statements and claims about how that device booted, with the assurance that the device did not reboot between the time that it attested its health and the time that the MDM server validated it.</source>
          <target>When an MDM server validates that a device has attested to the Health Attestation Service, it will be given a set of statements and claims about how that device booted, with the assurance that the device did not reboot between the time that it attested its health and the time that the MDM server validated it.</target>
        </segment>
      </unit>
      <unit id="628">
        <segment state="initial">
          <source>Windows Health Attestation Service</source>
          <target>Windows Health Attestation Service</target>
        </segment>
      </unit>
      <unit id="629">
        <segment state="initial">
          <source>The role of Windows Health Attestation Service is essentially to evaluate a set of health data (TCG log and PCR values), make a series of detections (based on available health data) and generate encrypted health blob or produce report to MDM servers.</source>
          <target>The role of Windows Health Attestation Service is essentially to evaluate a set of health data (TCG log and PCR values), make a series of detections (based on available health data) and generate encrypted health blob or produce report to MDM servers.</target>
        </segment>
      </unit>
      <unit id="630">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Both device and MDM servers must have access to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">has.spserv.microsoft.com</pc> using the TCP protocol on port 443 (HTTPS).</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Both device and MDM servers must have access to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">has.spserv.microsoft.com</pc> using the TCP protocol on port 443 (HTTPS).</target>
        </segment>
      </unit>
      <unit id="631">
        <segment state="initial">
          <source>Checking that a TPM attestation and the associated log are valid takes several steps:</source>
          <target>Checking that a TPM attestation and the associated log are valid takes several steps:</target>
        </segment>
      </unit>
      <unit id="632">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>First, the server must check that the reports are signed by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">trustworthy AIKs</pc>.</source>
          <target>First, the server must check that the reports are signed by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">trustworthy AIKs</pc>.</target>
        </segment>
      </unit>
      <unit id="633">
        <segment state="initial">
          <source>This might be done by checking that the public part of the AIK is listed in a database of assets, or perhaps that a certificate has been checked.</source>
          <target>This might be done by checking that the public part of the AIK is listed in a database of assets, or perhaps that a certificate has been checked.</target>
        </segment>
      </unit>
      <unit id="634">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>After the key has been checked, the signed attestation (a quote structure) should be checked to see whether it is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">valid signature over PCR values</pc>.</source>
          <target>After the key has been checked, the signed attestation (a quote structure) should be checked to see whether it is a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">valid signature over PCR values</pc>.</target>
        </segment>
      </unit>
      <unit id="635">
        <segment state="initial">
          <source>Next the logs should be checked to ensure that they match the PCR values reported.</source>
          <target>Next the logs should be checked to ensure that they match the PCR values reported.</target>
        </segment>
      </unit>
      <unit id="636">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Finally, the logs themselves should be examined by an MDM solution to see whether they represent <pc dataRefEnd="id2" dataRefStart="id1" id="p1">known or valid security configurations</pc>.</source>
          <target>Finally, the logs themselves should be examined by an MDM solution to see whether they represent <pc dataRefEnd="id2" dataRefStart="id1" id="p1">known or valid security configurations</pc>.</target>
        </segment>
      </unit>
      <unit id="637">
        <segment state="initial">
          <source>For example, a simple check might be to see whether the measured early OS components are known to be good, that the ELAM driver is as expected, and that the ELAM driver policy file is up to date.</source>
          <target>For example, a simple check might be to see whether the measured early OS components are known to be good, that the ELAM driver is as expected, and that the ELAM driver policy file is up to date.</target>
        </segment>
      </unit>
      <unit id="638">
        <segment state="initial">
          <source>If all of these checks succeed, an attestation statement can be issued that later can be used to determine whether or not the client should be granted access to a resource.</source>
          <target>If all of these checks succeed, an attestation statement can be issued that later can be used to determine whether or not the client should be granted access to a resource.</target>
        </segment>
      </unit>
      <unit id="639">
        <segment state="initial">
          <source>The Health Attestation Service provides the following information to an MDM solution about the health of the device:</source>
          <target>The Health Attestation Service provides the following information to an MDM solution about the health of the device:</target>
        </segment>
      </unit>
      <unit id="640">
        <segment state="initial">
          <source>Secure Boot enablement</source>
          <target>Secure Boot enablement</target>
        </segment>
      </unit>
      <unit id="641">
        <segment state="initial">
          <source>Boot and kernel debug enablement</source>
          <target>Boot and kernel debug enablement</target>
        </segment>
      </unit>
      <unit id="642">
        <segment state="initial">
          <source>BitLocker enablement</source>
          <target>BitLocker enablement</target>
        </segment>
      </unit>
      <unit id="643">
        <segment state="initial">
          <source>VSM enabled</source>
          <target>VSM enabled</target>
        </segment>
      </unit>
      <unit id="644">
        <segment state="initial">
          <source>Signed or unsigned Device Guard Code Integrity policy measurement</source>
          <target>Signed or unsigned Device Guard Code Integrity policy measurement</target>
        </segment>
      </unit>
      <unit id="645">
        <segment state="initial">
          <source>ELAM loaded</source>
          <target>ELAM loaded</target>
        </segment>
      </unit>
      <unit id="646">
        <segment state="initial">
          <source>Safe Mode boot, DEP enablement, test signing enablement</source>
          <target>Safe Mode boot, DEP enablement, test signing enablement</target>
        </segment>
      </unit>
      <unit id="647">
        <segment state="initial">
          <source>Device TPM has been provisioned with a trusted endorsement certificate</source>
          <target>Device TPM has been provisioned with a trusted endorsement certificate</target>
        </segment>
      </unit>
      <unit id="648">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733949)</data>
        </originalData>
        <segment state="initial">
          <source>For completeness of the measurements, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Health Attestation CSP</pc>.</source>
          <target>For completeness of the measurements, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Health Attestation CSP</pc>.</target>
        </segment>
      </unit>
      <unit id="649">
        <segment state="initial">
          <source>The following table presents some key items that can be reported back to MDM depending on the type of Windows 10-based device.</source>
          <target>The following table presents some key items that can be reported back to MDM depending on the type of Windows 10-based device.</target>
        </segment>
      </unit>
      <unit id="650">
        <segment state="initial">
          <source>OS type</source>
          <target>OS type</target>
        </segment>
      </unit>
      <unit id="651">
        <segment state="initial">
          <source>Key items that can be reported</source>
          <target>Key items that can be reported</target>
        </segment>
      </unit>
      <unit id="652">
        <segment state="initial">
          <source>Windows 10 Mobile</source>
          <target>Windows 10 Mobile</target>
        </segment>
      </unit>
      <unit id="653">
        <segment state="initial">
          <source>PCR0 measurement</source>
          <target>PCR0 measurement</target>
        </segment>
      </unit>
      <unit id="654">
        <segment state="initial">
          <source>Secure Boot enabled</source>
          <target>Secure Boot enabled</target>
        </segment>
      </unit>
      <unit id="655">
        <segment state="initial">
          <source>Secure Boot db is default</source>
          <target>Secure Boot db is default</target>
        </segment>
      </unit>
      <unit id="656">
        <segment state="initial">
          <source>Secure Boot dbx is up to date</source>
          <target>Secure Boot dbx is up to date</target>
        </segment>
      </unit>
      <unit id="657">
        <segment state="initial">
          <source>Secure Boot policy GUID is default</source>
          <target>Secure Boot policy GUID is default</target>
        </segment>
      </unit>
      <unit id="658">
        <segment state="initial">
          <source>Device Encryption enabled</source>
          <target>Device Encryption enabled</target>
        </segment>
      </unit>
      <unit id="659">
        <segment state="initial">
          <source>Code Integrity revocation list timestamp/version is up to date</source>
          <target>Code Integrity revocation list timestamp/version is up to date</target>
        </segment>
      </unit>
      <unit id="660">
        <segment state="initial">
          <source>Windows 10 for desktop editions</source>
          <target>Windows 10 for desktop editions</target>
        </segment>
      </unit>
      <unit id="661">
        <segment state="initial">
          <source>PCR0 measurement</source>
          <target>PCR0 measurement</target>
        </segment>
      </unit>
      <unit id="662">
        <segment state="initial">
          <source>Secure Boot Enabled</source>
          <target>Secure Boot Enabled</target>
        </segment>
      </unit>
      <unit id="663">
        <segment state="initial">
          <source>Secure Boot db matches Expected</source>
          <target>Secure Boot db matches Expected</target>
        </segment>
      </unit>
      <unit id="664">
        <segment state="initial">
          <source>Secure Boot dbx is up to date</source>
          <target>Secure Boot dbx is up to date</target>
        </segment>
      </unit>
      <unit id="665">
        <segment state="initial">
          <source>Secure Boot policy GUID matches Expected</source>
          <target>Secure Boot policy GUID matches Expected</target>
        </segment>
      </unit>
      <unit id="666">
        <segment state="initial">
          <source>BitLocker enabled</source>
          <target>BitLocker enabled</target>
        </segment>
      </unit>
      <unit id="667">
        <segment state="initial">
          <source>Virtualization-based security enabled</source>
          <target>Virtualization-based security enabled</target>
        </segment>
      </unit>
      <unit id="668">
        <segment state="initial">
          <source>ELAM was loaded</source>
          <target>ELAM was loaded</target>
        </segment>
      </unit>
      <unit id="669">
        <segment state="initial">
          <source>Code Integrity version is up to date</source>
          <target>Code Integrity version is up to date</target>
        </segment>
      </unit>
      <unit id="670">
        <segment state="initial">
          <source>Code Integrity policy hash matches Expected</source>
          <target>Code Integrity policy hash matches Expected</target>
        </segment>
      </unit>
      <unit id="671">
        <segment state="initial">
          <source>Leverage MDM and the Health Attestation Service</source>
          <target>Leverage MDM and the Health Attestation Service</target>
        </segment>
      </unit>
      <unit id="672">
        <segment state="initial">
          <source>To make device health relevant, the MDM solution evaluates the device health report and is configured to the organization’s device health requirements.</source>
          <target>To make device health relevant, the MDM solution evaluates the device health report and is configured to the organization’s device health requirements.</target>
        </segment>
      </unit>
      <unit id="673">
        <segment state="initial">
          <source>A solution that leverages MDM and the Health Attestation Service consists of three main parts:</source>
          <target>A solution that leverages MDM and the Health Attestation Service consists of three main parts:</target>
        </segment>
      </unit>
      <unit id="674">
        <segment state="initial">
          <source>A device with health attestation enabled.</source>
          <target>A device with health attestation enabled.</target>
        </segment>
      </unit>
      <unit id="675">
        <segment state="initial">
          <source>This will usually be done as a part of enrollment with an MDM provider (health attestation will be disabled by default).</source>
          <target>This will usually be done as a part of enrollment with an MDM provider (health attestation will be disabled by default).</target>
        </segment>
      </unit>
      <unit id="676">
        <segment state="initial">
          <source>After this is enabled, and every boot thereafter, the device will send health measurements to the Health Attestation Service hosted by Microsoft, and it will receive a health attestation blob in return.</source>
          <target>After this is enabled, and every boot thereafter, the device will send health measurements to the Health Attestation Service hosted by Microsoft, and it will receive a health attestation blob in return.</target>
        </segment>
      </unit>
      <unit id="677">
        <segment state="initial">
          <source>At any point after this, an MDM server can request the health attestation blob from the device and ask Health Attestation Service to decrypt the content and validate that it’s been attested.</source>
          <target>At any point after this, an MDM server can request the health attestation blob from the device and ask Health Attestation Service to decrypt the content and validate that it’s been attested.</target>
        </segment>
      </unit>
      <unit id="678">
        <segment state="initial">
          <source>figure 9</source>
          <target>figure 9</target>
        </segment>
      </unit>
      <unit id="679">
        <segment state="initial">
          <source>Interaction between a Windows 10-based device, the Health Attestation Service, and MDM can be performed as follows:</source>
          <target>Interaction between a Windows 10-based device, the Health Attestation Service, and MDM can be performed as follows:</target>
        </segment>
      </unit>
      <unit id="680">
        <segment state="initial">
          <source>The client initiates a session with the MDM server.</source>
          <target>The client initiates a session with the MDM server.</target>
        </segment>
      </unit>
      <unit id="681">
        <segment state="initial">
          <source>The URI for the MDM server would be part of the client app that initiates the request.</source>
          <target>The URI for the MDM server would be part of the client app that initiates the request.</target>
        </segment>
      </unit>
      <unit id="682">
        <segment state="initial">
          <source>The MDM server at this time could request the health attestation data by using the appropriate CSP URI.</source>
          <target>The MDM server at this time could request the health attestation data by using the appropriate CSP URI.</target>
        </segment>
      </unit>
      <unit id="683">
        <segment state="initial">
          <source>The MDM server specifies a nonce along with the request.</source>
          <target>The MDM server specifies a nonce along with the request.</target>
        </segment>
      </unit>
      <unit id="684">
        <segment state="initial">
          <source>The client then sends the AIK quoted nonce + the boot counter and the health blob information.</source>
          <target>The client then sends the AIK quoted nonce + the boot counter and the health blob information.</target>
        </segment>
      </unit>
      <unit id="685">
        <segment state="initial">
          <source>This health blob is encrypted with a Health Attestation Service public key that only the Health Attestation Service can decrypt.</source>
          <target>This health blob is encrypted with a Health Attestation Service public key that only the Health Attestation Service can decrypt.</target>
        </segment>
      </unit>
      <unit id="686">
        <segment state="initial">
          <source>The MDM server:</source>
          <target>The MDM server:</target>
        </segment>
      </unit>
      <unit id="687">
        <segment state="initial">
          <source>Verifies that the nonce is as expected.</source>
          <target>Verifies that the nonce is as expected.</target>
        </segment>
      </unit>
      <unit id="688">
        <segment state="initial">
          <source>Passes the quoted data, the nonce and the encrypted health blob to the Health Attestation Service server.</source>
          <target>Passes the quoted data, the nonce and the encrypted health blob to the Health Attestation Service server.</target>
        </segment>
      </unit>
      <unit id="689">
        <segment state="initial">
          <source>The Health Attestation Service:</source>
          <target>The Health Attestation Service:</target>
        </segment>
      </unit>
      <unit id="690">
        <segment state="initial">
          <source>Decrypts the health blob.</source>
          <target>Decrypts the health blob.</target>
        </segment>
      </unit>
      <unit id="691">
        <segment state="initial">
          <source>Verifies that the boot counter in the quote is correct using the AIK in the health blob and matches the value in the health blob.</source>
          <target>Verifies that the boot counter in the quote is correct using the AIK in the health blob and matches the value in the health blob.</target>
        </segment>
      </unit>
      <unit id="692">
        <segment state="initial">
          <source>Verifies that the nonce matches in the quote and the one that is passed from MDM.</source>
          <target>Verifies that the nonce matches in the quote and the one that is passed from MDM.</target>
        </segment>
      </unit>
      <unit id="693">
        <segment state="initial">
          <source>Because the boot counter and the nonce are quoted with the AIK from the health blob, it also proves that the device is the same one as the one for which the health blob has been generated.</source>
          <target>Because the boot counter and the nonce are quoted with the AIK from the health blob, it also proves that the device is the same one as the one for which the health blob has been generated.</target>
        </segment>
      </unit>
      <unit id="694">
        <segment state="initial">
          <source>Sends data back to the MDM server including health parameters, freshness, and so on.</source>
          <target>Sends data back to the MDM server including health parameters, freshness, and so on.</target>
        </segment>
      </unit>
      <unit id="695">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  The MDM server (relying party) never performs the quote or boot counter validation itself.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  The MDM server (relying party) never performs the quote or boot counter validation itself.</target>
        </segment>
      </unit>
      <unit id="696">
        <segment state="initial">
          <source>It gets the quoted data and the health blob (which is encrypted) and sends the data to the Health Attestation Service for validation.</source>
          <target>It gets the quoted data and the health blob (which is encrypted) and sends the data to the Health Attestation Service for validation.</target>
        </segment>
      </unit>
      <unit id="697">
        <segment state="initial">
          <source>This way, the AIK is never visible to the MDM, which thereby addresses privacy concerns.</source>
          <target>This way, the AIK is never visible to the MDM, which thereby addresses privacy concerns.</target>
        </segment>
      </unit>
      <unit id="698">
        <segment state="initial">
          <source>Setting the requirements for device compliance is the first step to ensure that registered devices that do not meet health and compliance requirements are detected, tracked, and have actions enforced by the MDM solution.</source>
          <target>Setting the requirements for device compliance is the first step to ensure that registered devices that do not meet health and compliance requirements are detected, tracked, and have actions enforced by the MDM solution.</target>
        </segment>
      </unit>
      <unit id="699">
        <segment state="initial">
          <source>Devices that attempt to connect to resources must have their health evaluated so that unhealthy and noncompliant devices can be detected and reported.</source>
          <target>Devices that attempt to connect to resources must have their health evaluated so that unhealthy and noncompliant devices can be detected and reported.</target>
        </segment>
      </unit>
      <unit id="700">
        <segment state="initial">
          <source>To be fully efficient, an end-to-end security solution must impose a consequence for unhealthy devices like refusing access to high-value assets.</source>
          <target>To be fully efficient, an end-to-end security solution must impose a consequence for unhealthy devices like refusing access to high-value assets.</target>
        </segment>
      </unit>
      <unit id="701">
        <segment state="initial">
          <source>That is the purpose of conditional access control, which is detailed in the next section.</source>
          <target>That is the purpose of conditional access control, which is detailed in the next section.</target>
        </segment>
      </unit>
      <unit id="702">
        <segment state="initial">
          <source>Control the security of a Windows 10-based device before access is granted</source>
          <target>Control the security of a Windows 10-based device before access is granted</target>
        </segment>
      </unit>
      <unit id="703">
        <segment state="initial">
          <source>Today’s access control technology, in most cases, focuses on ensuring that the right people get access to the right resources.</source>
          <target>Today’s access control technology, in most cases, focuses on ensuring that the right people get access to the right resources.</target>
        </segment>
      </unit>
      <unit id="704">
        <segment state="initial">
          <source>If users can authenticate, they get access to resources using a device that the organization’s IT staff and systems know very little about.</source>
          <target>If users can authenticate, they get access to resources using a device that the organization’s IT staff and systems know very little about.</target>
        </segment>
      </unit>
      <unit id="705">
        <segment state="initial">
          <source>Perhaps there is some check such as ensuring that a device is encrypted before giving access to email, but what if the device is infected with malware?</source>
          <target>Perhaps there is some check such as ensuring that a device is encrypted before giving access to email, but what if the device is infected with malware?</target>
        </segment>
      </unit>
      <unit id="706">
        <segment state="initial">
          <source>The remote device health attestation process uses measured boot data to verify the health status of the device.</source>
          <target>The remote device health attestation process uses measured boot data to verify the health status of the device.</target>
        </segment>
      </unit>
      <unit id="707">
        <segment state="initial">
          <source>The health of the device is then available for an MDM solution like Intune.</source>
          <target>The health of the device is then available for an MDM solution like Intune.</target>
        </segment>
      </unit>
      <unit id="708">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://go.microsoft.com/fwlink/p/?LinkId=691614)</data>
          <data id="id5">[</data>
          <data id="id6">](http://go.microsoft.com/fwlink/p/?LinkId=733956)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For the latest information on Intune and Windows 10 features support, see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft Intune blog</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">What's new in Microsoft Intune</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For the latest information on Intune and Windows 10 features support, see the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Microsoft Intune blog</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">What's new in Microsoft Intune</pc>.</target>
        </segment>
      </unit>
      <unit id="709">
        <segment state="initial">
          <source>The figure below shows how the Health Attestation Service is expected to work with Microsoft’s cloud-based Intune MDM service.</source>
          <target>The figure below shows how the Health Attestation Service is expected to work with Microsoft’s cloud-based Intune MDM service.</target>
        </segment>
      </unit>
      <unit id="710">
        <segment state="initial">
          <source>figure 10</source>
          <target>figure 10</target>
        </segment>
      </unit>
      <unit id="711">
        <segment state="initial">
          <source>An MDM solution can then leverage health state statements and take them to the next level by coupling with client policies that will enable conditional access to be granted based on the device’s ability to prove that it’s malware free, its antimalware system is functional and up to date, the firewall is running, and the devices patch state is compliant.</source>
          <target>An MDM solution can then leverage health state statements and take them to the next level by coupling with client policies that will enable conditional access to be granted based on the device’s ability to prove that it’s malware free, its antimalware system is functional and up to date, the firewall is running, and the devices patch state is compliant.</target>
        </segment>
      </unit>
      <unit id="712">
        <segment state="initial">
          <source>Finally, resources can be protected by denying access to endpoints that are unable to prove they’re healthy.</source>
          <target>Finally, resources can be protected by denying access to endpoints that are unable to prove they’re healthy.</target>
        </segment>
      </unit>
      <unit id="713">
        <segment state="initial">
          <source>This feature is much needed for BYOD devices that need to access organizational resources.</source>
          <target>This feature is much needed for BYOD devices that need to access organizational resources.</target>
        </segment>
      </unit>
      <unit id="714">
        <segment state="initial">
          <source>Built-in support of MDM in Windows 10</source>
          <target>Built-in support of MDM in Windows 10</target>
        </segment>
      </unit>
      <unit id="715">
        <segment state="initial">
          <source>Windows 10 has an MDM client that ships as part of the operating system.</source>
          <target>Windows 10 has an MDM client that ships as part of the operating system.</target>
        </segment>
      </unit>
      <unit id="716">
        <segment state="initial">
          <source>This enables MDM servers to manage Windows 10-based devices without requiring a separate agent.</source>
          <target>This enables MDM servers to manage Windows 10-based devices without requiring a separate agent.</target>
        </segment>
      </unit>
      <unit id="717">
        <segment state="initial">
          <source>Third-party MDM server support</source>
          <target>Third-party MDM server support</target>
        </segment>
      </unit>
      <unit id="718">
        <segment state="initial">
          <source>Third-party MDM servers can manage Windows 10 by using the MDM protocol.</source>
          <target>Third-party MDM servers can manage Windows 10 by using the MDM protocol.</target>
        </segment>
      </unit>
      <unit id="719">
        <segment state="initial">
          <source>The built-in management client is able to communicate with a compatible server that supports the OMA-DM protocol to perform enterprise management tasks.</source>
          <target>The built-in management client is able to communicate with a compatible server that supports the OMA-DM protocol to perform enterprise management tasks.</target>
        </segment>
      </unit>
      <unit id="720">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733954)</data>
        </originalData>
        <segment state="initial">
          <source>For additional information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Active Directory integration with MDM</pc>.</source>
          <target>For additional information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Active Directory integration with MDM</pc>.</target>
        </segment>
      </unit>
      <unit id="721">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  MDM servers do not need to create or download a client to manage Windows 10.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  MDM servers do not need to create or download a client to manage Windows 10.</target>
        </segment>
      </unit>
      <unit id="722">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733955)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Mobile device management</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Mobile device management</pc>.</target>
        </segment>
      </unit>
      <unit id="723">
        <segment state="initial">
          <source>The third-party MDM server will have the same consistent first-party user experience for enrollment, which also provides simplicity for Windows 10 users.</source>
          <target>The third-party MDM server will have the same consistent first-party user experience for enrollment, which also provides simplicity for Windows 10 users.</target>
        </segment>
      </unit>
      <unit id="724">
        <segment state="initial">
          <source>Management of Windows Defender by third-party MDM</source>
          <target>Management of Windows Defender by third-party MDM</target>
        </segment>
      </unit>
      <unit id="725">
        <segment state="initial">
          <source>This management infrastructure makes it possible for IT pros to use MDM-capable products like Intune, to manage health attestation, Device Guard, or Windows Defender on Windows 10-based devices, including BYODs that aren’t domain joined.</source>
          <target>This management infrastructure makes it possible for IT pros to use MDM-capable products like Intune, to manage health attestation, Device Guard, or Windows Defender on Windows 10-based devices, including BYODs that aren’t domain joined.</target>
        </segment>
      </unit>
      <unit id="726">
        <segment state="initial">
          <source>IT pros will be able to manage and configure all of the actions and settings they are familiar with customizing by using Intune with Intune Endpoint Protection on down-level operating systems.</source>
          <target>IT pros will be able to manage and configure all of the actions and settings they are familiar with customizing by using Intune with Intune Endpoint Protection on down-level operating systems.</target>
        </segment>
      </unit>
      <unit id="727">
        <segment state="initial">
          <source>Admins that currently only manage domain joined devices through Group Policy will find it easy to transition to managing Windows 10-based devices by using MDM because many of the settings and actions are shared across both mechanisms.</source>
          <target>Admins that currently only manage domain joined devices through Group Policy will find it easy to transition to managing Windows 10-based devices by using MDM because many of the settings and actions are shared across both mechanisms.</target>
        </segment>
      </unit>
      <unit id="728">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=733953)</data>
        </originalData>
        <segment state="initial">
          <source>For more information on how to manage Windows 10 security and system settings with an MDM solution, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom URI settings for Windows 10 devices</pc>.</source>
          <target>For more information on how to manage Windows 10 security and system settings with an MDM solution, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Custom URI settings for Windows 10 devices</pc>.</target>
        </segment>
      </unit>
      <unit id="729">
        <segment state="initial">
          <source>Conditional access control</source>
          <target>Conditional access control</target>
        </segment>
      </unit>
      <unit id="730">
        <segment state="initial">
          <source>On most platforms, the Azure Active Directory (Azure AD) device registration happens automatically during enrollment.</source>
          <target>On most platforms, the Azure Active Directory (Azure AD) device registration happens automatically during enrollment.</target>
        </segment>
      </unit>
      <unit id="731">
        <segment state="initial">
          <source>The device states are written by the MDM solution into Azure AD, and then read by Office 365 (or by any authorized Windows app that interacts with Azure AD) the next time the client tries to access an Office 365 compatible workload.</source>
          <target>The device states are written by the MDM solution into Azure AD, and then read by Office 365 (or by any authorized Windows app that interacts with Azure AD) the next time the client tries to access an Office 365 compatible workload.</target>
        </segment>
      </unit>
      <unit id="732">
        <segment state="initial">
          <source>If the device is not registered, the user will get a message with instructions on how to register (also known as enrolling).</source>
          <target>If the device is not registered, the user will get a message with instructions on how to register (also known as enrolling).</target>
        </segment>
      </unit>
      <unit id="733">
        <segment state="initial">
          <source>If the device is not compliant, the user will get a different message that redirects them to the MDM web portal where they can get more information on the compliance problem and how to resolve it.</source>
          <target>If the device is not compliant, the user will get a different message that redirects them to the MDM web portal where they can get more information on the compliance problem and how to resolve it.</target>
        </segment>
      </unit>
      <unit id="734">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD</pc> authenticates the user and the device, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MDM</pc> manages the compliance and conditional access policies, and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Health Attestation Service</pc> reports about the health of the device in an attested way.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD</pc> authenticates the user and the device, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MDM</pc> manages the compliance and conditional access policies, and the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Health Attestation Service</pc> reports about the health of the device in an attested way.</target>
        </segment>
      </unit>
      <unit id="735">
        <segment state="initial">
          <source>figure 11</source>
          <target>figure 11</target>
        </segment>
      </unit>
      <unit id="736">
        <segment state="initial">
          <source>Office 365 conditional access control</source>
          <target>Office 365 conditional access control</target>
        </segment>
      </unit>
      <unit id="737">
        <segment state="initial">
          <source>Azure AD enforces conditional access policies to secure access to Office 365 services.</source>
          <target>Azure AD enforces conditional access policies to secure access to Office 365 services.</target>
        </segment>
      </unit>
      <unit id="738">
        <segment state="initial">
          <source>A tenant admin can create a conditional access policy that blocks a user on a non-compliant device from accessing an Office 365 service.</source>
          <target>A tenant admin can create a conditional access policy that blocks a user on a non-compliant device from accessing an Office 365 service.</target>
        </segment>
      </unit>
      <unit id="739">
        <segment state="initial">
          <source>The user must conform to the company’s device policies before access can be granted to the service.</source>
          <target>The user must conform to the company’s device policies before access can be granted to the service.</target>
        </segment>
      </unit>
      <unit id="740">
        <segment state="initial">
          <source>Alternately, the admin can also create a policy that requires users to just enroll their devices to gain access to an Office 365 service.</source>
          <target>Alternately, the admin can also create a policy that requires users to just enroll their devices to gain access to an Office 365 service.</target>
        </segment>
      </unit>
      <unit id="741">
        <segment state="initial">
          <source>Policies may be applied to all users of an organization, or limited to a few target groups and enhanced over time to include additional target groups.</source>
          <target>Policies may be applied to all users of an organization, or limited to a few target groups and enhanced over time to include additional target groups.</target>
        </segment>
      </unit>
      <unit id="742">
        <segment state="initial">
          <source>When a user requests access to an Office 365 service from a supported device platform, Azure AD authenticates the user and device from which the user launches the request; and grants access to the service only when the user conforms to the policy set for the service.</source>
          <target>When a user requests access to an Office 365 service from a supported device platform, Azure AD authenticates the user and device from which the user launches the request; and grants access to the service only when the user conforms to the policy set for the service.</target>
        </segment>
      </unit>
      <unit id="743">
        <segment state="initial">
          <source>Users that do not have their device enrolled are given remediation instructions on how to enroll and become compliant to access corporate Office 365 services.</source>
          <target>Users that do not have their device enrolled are given remediation instructions on how to enroll and become compliant to access corporate Office 365 services.</target>
        </segment>
      </unit>
      <unit id="744">
        <segment state="initial">
          <source>When a user enrolls, the device is registered with Azure AD, and enrolled with a compatible MDM solution like Intune.</source>
          <target>When a user enrolls, the device is registered with Azure AD, and enrolled with a compatible MDM solution like Intune.</target>
        </segment>
      </unit>
      <unit id="745">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Microsoft is working with third-party MDM ISVs to support automated MDM enrollment and policy based access checks.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>  Microsoft is working with third-party MDM ISVs to support automated MDM enrollment and policy based access checks.</target>
        </segment>
      </unit>
      <unit id="746">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=691615)</data>
        </originalData>
        <segment state="initial">
          <source>Steps to turn on auto-MDM enrollment with Azure AD and Intune are explained in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 10, Azure AD And Microsoft Intune: Automatic MDM Enrollment Powered By The Cloud!</pc></source>
          <target>Steps to turn on auto-MDM enrollment with Azure AD and Intune are explained in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 10, Azure AD And Microsoft Intune: Automatic MDM Enrollment Powered By The Cloud!</pc></target>
        </segment>
      </unit>
      <unit id="747">
        <segment state="initial">
          <source>blog post.</source>
          <target>blog post.</target>
        </segment>
      </unit>
      <unit id="748">
        <segment state="initial">
          <source>When a user enrolls a device successfully, the device becomes trusted.</source>
          <target>When a user enrolls a device successfully, the device becomes trusted.</target>
        </segment>
      </unit>
      <unit id="749">
        <segment state="initial">
          <source>Azure AD provides single-sign-on to access company applications and enforces conditional access policy to grant access to a service not only the first time the user requests access, but every time the user requests to renew access.</source>
          <target>Azure AD provides single-sign-on to access company applications and enforces conditional access policy to grant access to a service not only the first time the user requests access, but every time the user requests to renew access.</target>
        </segment>
      </unit>
      <unit id="750">
        <segment state="initial">
          <source>The user will be denied access to services when sign-in credentials are changed, a device is lost/stolen, or the compliance policy is not met at the time of request for renewal.</source>
          <target>The user will be denied access to services when sign-in credentials are changed, a device is lost/stolen, or the compliance policy is not met at the time of request for renewal.</target>
        </segment>
      </unit>
      <unit id="751">
        <segment state="initial">
          <source>Depending on the type of email application that employees use to access Exchange online, the path to establish secured access to email can be slightly different.</source>
          <target>Depending on the type of email application that employees use to access Exchange online, the path to establish secured access to email can be slightly different.</target>
        </segment>
      </unit>
      <unit id="752">
        <segment state="initial">
          <source>However, the key components: Azure AD, Office 365/Exchange Online, and Intune, are the same.</source>
          <target>However, the key components: Azure AD, Office 365/Exchange Online, and Intune, are the same.</target>
        </segment>
      </unit>
      <unit id="753">
        <segment state="initial">
          <source>The IT experience and end-user experience also are similar.</source>
          <target>The IT experience and end-user experience also are similar.</target>
        </segment>
      </unit>
      <unit id="754">
        <segment state="initial">
          <source>figure 12</source>
          <target>figure 12</target>
        </segment>
      </unit>
      <unit id="755">
        <segment state="initial">
          <source>Clients that attempt to access Office 365 will be evaluated for the following properties:</source>
          <target>Clients that attempt to access Office 365 will be evaluated for the following properties:</target>
        </segment>
      </unit>
      <unit id="756">
        <segment state="initial">
          <source>Is the device managed by an MDM?</source>
          <target>Is the device managed by an MDM?</target>
        </segment>
      </unit>
      <unit id="757">
        <segment state="initial">
          <source>Is the device registered with Azure AD?</source>
          <target>Is the device registered with Azure AD?</target>
        </segment>
      </unit>
      <unit id="758">
        <segment state="initial">
          <source>Is the device compliant?</source>
          <target>Is the device compliant?</target>
        </segment>
      </unit>
      <unit id="759">
        <segment state="initial">
          <source>To get to a compliant state, the Windows 10-based device needs to:</source>
          <target>To get to a compliant state, the Windows 10-based device needs to:</target>
        </segment>
      </unit>
      <unit id="760">
        <segment state="initial">
          <source>Enroll with an MDM solution.</source>
          <target>Enroll with an MDM solution.</target>
        </segment>
      </unit>
      <unit id="761">
        <segment state="initial">
          <source>Register with Azure AD.</source>
          <target>Register with Azure AD.</target>
        </segment>
      </unit>
      <unit id="762">
        <segment state="initial">
          <source>Be compliant with the device policies set by the MDM solution.</source>
          <target>Be compliant with the device policies set by the MDM solution.</target>
        </segment>
      </unit>
      <unit id="763">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  At the present time, conditional access policies are selectively enforced on users on iOS and Android devices.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  At the present time, conditional access policies are selectively enforced on users on iOS and Android devices.</target>
        </segment>
      </unit>
      <unit id="764">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=691616)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD, Microsoft Intune and Windows 10 – Using the cloud to modernize enterprise mobility!</pc></source>
          <target>For more information, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD, Microsoft Intune and Windows 10 – Using the cloud to modernize enterprise mobility!</pc></target>
        </segment>
      </unit>
      <unit id="765">
        <segment state="initial">
          <source>blog post.</source>
          <target>blog post.</target>
        </segment>
      </unit>
      <unit id="766">
        <segment state="initial">
          <source>Cloud and on-premises apps conditional access control</source>
          <target>Cloud and on-premises apps conditional access control</target>
        </segment>
      </unit>
      <unit id="767">
        <segment state="initial">
          <source>Conditional access control is a powerful policy evaluation engine built into Azure AD.</source>
          <target>Conditional access control is a powerful policy evaluation engine built into Azure AD.</target>
        </segment>
      </unit>
      <unit id="768">
        <segment state="initial">
          <source>It gives IT pros an easy way to create access rules beyond Office 365 that evaluate the context of a user's logon to make real-time decisions about which applications they should be allowed to access.</source>
          <target>It gives IT pros an easy way to create access rules beyond Office 365 that evaluate the context of a user's logon to make real-time decisions about which applications they should be allowed to access.</target>
        </segment>
      </unit>
      <unit id="769">
        <segment state="initial">
          <source>IT pros can configure conditional access control policies for cloud SaaS applications secured by Azure AD and even on-premises applications.</source>
          <target>IT pros can configure conditional access control policies for cloud SaaS applications secured by Azure AD and even on-premises applications.</target>
        </segment>
      </unit>
      <unit id="770">
        <segment state="initial">
          <source>Access rules in Azure AD leverage the conditional access engine to check device health and compliance state reported by a compatible MDM solution like Intune in order to determine whether to allow access.</source>
          <target>Access rules in Azure AD leverage the conditional access engine to check device health and compliance state reported by a compatible MDM solution like Intune in order to determine whether to allow access.</target>
        </segment>
      </unit>
      <unit id="771">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=524807)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about conditional access, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Conditional Access Preview for SaaS Apps.</pc></source>
          <target>For more information about conditional access, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure Conditional Access Preview for SaaS Apps.</pc></target>
        </segment>
      </unit>
      <unit id="772">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Conditional access control is an Azure AD Premium feature that's also available with EMS.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Conditional access control is an Azure AD Premium feature that's also available with EMS.</target>
        </segment>
      </unit>
      <unit id="773">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=691617)</data>
        </originalData>
        <segment state="initial">
          <source>If you don't have an Azure AD Premium subscription, you can get a trial from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Azure</pc> site.</source>
          <target>If you don't have an Azure AD Premium subscription, you can get a trial from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Azure</pc> site.</target>
        </segment>
      </unit>
      <unit id="774">
        <segment state="initial">
          <source>For on-premises applications there are two options to enable conditional access control based on a device's compliance state:</source>
          <target>For on-premises applications there are two options to enable conditional access control based on a device's compliance state:</target>
        </segment>
      </unit>
      <unit id="775">
        <segment state="initial">
          <source>For on-premises applications that are published through the Azure AD Application Proxy, you can configure conditional access control policies as you would for cloud applications.</source>
          <target>For on-premises applications that are published through the Azure AD Application Proxy, you can configure conditional access control policies as you would for cloud applications.</target>
        </segment>
      </unit>
      <unit id="776">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=691618)</data>
        </originalData>
        <segment state="initial">
          <source>For more details, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD Conditional Access preview updated: Now supports On-Premises and Custom LOB apps</pc> blog post.</source>
          <target>For more details, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD Conditional Access preview updated: Now supports On-Premises and Custom LOB apps</pc> blog post.</target>
        </segment>
      </unit>
      <unit id="777">
        <segment state="initial">
          <source>Additionally, Azure AD Connect will sync device compliance information from Azure AD to on-premises AD.</source>
          <target>Additionally, Azure AD Connect will sync device compliance information from Azure AD to on-premises AD.</target>
        </segment>
      </unit>
      <unit id="778">
        <segment state="initial">
          <source>ADFS on Windows Server Technical Preview 2016 will support conditional access control based on a device's compliance state.</source>
          <target>ADFS on Windows Server Technical Preview 2016 will support conditional access control based on a device's compliance state.</target>
        </segment>
      </unit>
      <unit id="779">
        <segment state="initial">
          <source>IT pros will configure conditional access control policies in ADFS that use the device's compliance state reported by a compatible MDM solution to secure on-premises applications.</source>
          <target>IT pros will configure conditional access control policies in ADFS that use the device's compliance state reported by a compatible MDM solution to secure on-premises applications.</target>
        </segment>
      </unit>
      <unit id="780">
        <segment state="initial">
          <source>figure 13</source>
          <target>figure 13</target>
        </segment>
      </unit>
      <unit id="781">
        <segment state="initial">
          <source>The following process describes how Azure AD conditional access works:</source>
          <target>The following process describes how Azure AD conditional access works:</target>
        </segment>
      </unit>
      <unit id="782">
        <segment state="initial">
          <source>User has already enrolled with MDM through Workplace Access/Azure AD join which registers device with Azure AD.</source>
          <target>User has already enrolled with MDM through Workplace Access/Azure AD join which registers device with Azure AD.</target>
        </segment>
      </unit>
      <unit id="783">
        <segment state="initial">
          <source>When the device boots or resumes from hibernate, a task “Tpm-HASCertRetr” is triggered to request in background a health attestation blob.</source>
          <target>When the device boots or resumes from hibernate, a task “Tpm-HASCertRetr” is triggered to request in background a health attestation blob.</target>
        </segment>
      </unit>
      <unit id="784">
        <segment state="initial">
          <source>Device sends TPM boot measurements to the Health Attestation Service.</source>
          <target>Device sends TPM boot measurements to the Health Attestation Service.</target>
        </segment>
      </unit>
      <unit id="785">
        <segment state="initial">
          <source>Health Attestation Service validates device state and issues an encrypted blob to the device based on the health state with details on failed checks (if any).</source>
          <target>Health Attestation Service validates device state and issues an encrypted blob to the device based on the health state with details on failed checks (if any).</target>
        </segment>
      </unit>
      <unit id="786">
        <segment state="initial">
          <source>User logs on and the MDM agent contacts the Intune/MDM server.</source>
          <target>User logs on and the MDM agent contacts the Intune/MDM server.</target>
        </segment>
      </unit>
      <unit id="787">
        <segment state="initial">
          <source>MDM server pushes down new policies if available and queries health blob state and other inventory state.</source>
          <target>MDM server pushes down new policies if available and queries health blob state and other inventory state.</target>
        </segment>
      </unit>
      <unit id="788">
        <segment state="initial">
          <source>Device sends a health attestation blob previously acquired and also the value of the other state inventory requested by the Intune/MDM server.</source>
          <target>Device sends a health attestation blob previously acquired and also the value of the other state inventory requested by the Intune/MDM server.</target>
        </segment>
      </unit>
      <unit id="789">
        <segment state="initial">
          <source>Intune/MDM server sends the health attestation blob to Health Attestation Service to be validated.</source>
          <target>Intune/MDM server sends the health attestation blob to Health Attestation Service to be validated.</target>
        </segment>
      </unit>
      <unit id="790">
        <segment state="initial">
          <source>Health Attestation Service validates that the device which sent the health attestation blob is healthy, and returns this result to Intune/MDM server.</source>
          <target>Health Attestation Service validates that the device which sent the health attestation blob is healthy, and returns this result to Intune/MDM server.</target>
        </segment>
      </unit>
      <unit id="791">
        <segment state="initial">
          <source>Intune/MDM server evaluates compliance based on the compliance and the queried inventory/health attestation state from device.</source>
          <target>Intune/MDM server evaluates compliance based on the compliance and the queried inventory/health attestation state from device.</target>
        </segment>
      </unit>
      <unit id="792">
        <segment state="initial">
          <source>Intune/MDM server updates compliance state against device object in Azure AD.</source>
          <target>Intune/MDM server updates compliance state against device object in Azure AD.</target>
        </segment>
      </unit>
      <unit id="793">
        <segment state="initial">
          <source>User opens app, attempts to access a corporate managed asset.</source>
          <target>User opens app, attempts to access a corporate managed asset.</target>
        </segment>
      </unit>
      <unit id="794">
        <segment state="initial">
          <source>Access gated by compliance claim in Azure AD.</source>
          <target>Access gated by compliance claim in Azure AD.</target>
        </segment>
      </unit>
      <unit id="795">
        <segment state="initial">
          <source>If the device is compliant and the user is authorized, an access token is generated.</source>
          <target>If the device is compliant and the user is authorized, an access token is generated.</target>
        </segment>
      </unit>
      <unit id="796">
        <segment state="initial">
          <source>User can access the corporate managed asset.</source>
          <target>User can access the corporate managed asset.</target>
        </segment>
      </unit>
      <unit id="797">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=691619)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about Azure AD join, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD &amp; Windows 10: Better Together for Work or School</pc> white paper.</source>
          <target>For more information about Azure AD join, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Azure AD &amp; Windows 10: Better Together for Work or School</pc> white paper.</target>
        </segment>
      </unit>
      <unit id="798">
        <segment state="initial">
          <source>Conditional access control is a topic that many organizations and IT pros may not know as well as they should.</source>
          <target>Conditional access control is a topic that many organizations and IT pros may not know as well as they should.</target>
        </segment>
      </unit>
      <unit id="799">
        <segment state="initial">
          <source>The different attributes that describe a user, a device, compliance, and context of access are very powerful when used with a conditional access engine.</source>
          <target>The different attributes that describe a user, a device, compliance, and context of access are very powerful when used with a conditional access engine.</target>
        </segment>
      </unit>
      <unit id="800">
        <segment state="initial">
          <source>Conditional access control is an essential step that helps organizations secure their environment.</source>
          <target>Conditional access control is an essential step that helps organizations secure their environment.</target>
        </segment>
      </unit>
      <unit id="801">
        <segment state="initial">
          <source>Takeaways and summary</source>
          <target>Takeaways and summary</target>
        </segment>
      </unit>
      <unit id="802">
        <segment state="initial">
          <source>The following list contains high-level key take-aways to improve the security posture of any organization.</source>
          <target>The following list contains high-level key take-aways to improve the security posture of any organization.</target>
        </segment>
      </unit>
      <unit id="803">
        <segment state="initial">
          <source>However, the few take-aways presented in this section should not be interpreted as an exhaustive list of security best practices.</source>
          <target>However, the few take-aways presented in this section should not be interpreted as an exhaustive list of security best practices.</target>
        </segment>
      </unit>
      <unit id="804">
        <segment state="initial">
          <source>Understand that no solution is 100 percent secure</source>
          <target>Understand that no solution is 100 percent secure</target>
        </segment>
      </unit>
      <unit id="805">
        <segment state="initial">
          <source>If determined adversaries with malicious intent gain physical access to the device, they could eventually break through its security layers and control it.</source>
          <target>If determined adversaries with malicious intent gain physical access to the device, they could eventually break through its security layers and control it.</target>
        </segment>
      </unit>
      <unit id="806">
        <segment state="initial">
          <source>Use health attestation with an MDM solution</source>
          <target>Use health attestation with an MDM solution</target>
        </segment>
      </unit>
      <unit id="807">
        <segment state="initial">
          <source>Devices that attempt to connect to high-value assets must have their health evaluated so that unhealthy and noncompliant devices can be detected, reported, and eventually blocked.</source>
          <target>Devices that attempt to connect to high-value assets must have their health evaluated so that unhealthy and noncompliant devices can be detected, reported, and eventually blocked.</target>
        </segment>
      </unit>
      <unit id="808">
        <segment state="initial">
          <source>Use Credential Guard</source>
          <target>Use Credential Guard</target>
        </segment>
      </unit>
      <unit id="809">
        <segment state="initial">
          <source>Credential Guard is a feature that greatly helps protect corporate domain credentials from pass-the-hash attacks.</source>
          <target>Credential Guard is a feature that greatly helps protect corporate domain credentials from pass-the-hash attacks.</target>
        </segment>
      </unit>
      <unit id="810">
        <segment state="initial">
          <source>Use Device Guard</source>
          <target>Use Device Guard</target>
        </segment>
      </unit>
      <unit id="811">
        <segment state="initial">
          <source>Device Guard is a real advance in security and an effective way to help protect against malware.</source>
          <target>Device Guard is a real advance in security and an effective way to help protect against malware.</target>
        </segment>
      </unit>
      <unit id="812">
        <segment state="initial">
          <source>The new Device Guard feature in Windows 10 blocks untrusted apps (apps not authorized by your organization).</source>
          <target>The new Device Guard feature in Windows 10 blocks untrusted apps (apps not authorized by your organization).</target>
        </segment>
      </unit>
      <unit id="813">
        <segment state="initial">
          <source>Sign Device Guard policy</source>
          <target>Sign Device Guard policy</target>
        </segment>
      </unit>
      <unit id="814">
        <segment state="initial">
          <source>Signed Device Guard policy helps protect against a user with administrator privileges trying to defeat the current policy.</source>
          <target>Signed Device Guard policy helps protect against a user with administrator privileges trying to defeat the current policy.</target>
        </segment>
      </unit>
      <unit id="815">
        <segment state="initial">
          <source>When a policy is signed, the only way to modify Device Guard subsequently is to provide a new version of the policy signed by the same signer or from a signer specify as part of the Device Guard policy.</source>
          <target>When a policy is signed, the only way to modify Device Guard subsequently is to provide a new version of the policy signed by the same signer or from a signer specify as part of the Device Guard policy.</target>
        </segment>
      </unit>
      <unit id="816">
        <segment state="initial">
          <source>Use virtualization-based security</source>
          <target>Use virtualization-based security</target>
        </segment>
      </unit>
      <unit id="817">
        <segment state="initial">
          <source>When you have Kernel Mode Code Integrity protected by virtualization-based security, the code integrity rules are still enforced even if a vulnerability allows unauthorized kernel mode memory access.</source>
          <target>When you have Kernel Mode Code Integrity protected by virtualization-based security, the code integrity rules are still enforced even if a vulnerability allows unauthorized kernel mode memory access.</target>
        </segment>
      </unit>
      <unit id="818">
        <segment state="initial">
          <source>Keep in mind that Device Guard devices that run Kernel Code Integrity with virtualization-based security must have compatible drivers.</source>
          <target>Keep in mind that Device Guard devices that run Kernel Code Integrity with virtualization-based security must have compatible drivers.</target>
        </segment>
      </unit>
      <unit id="819">
        <segment state="initial">
          <source>Start to deploy Device Guard with Audit mode</source>
          <target>Start to deploy Device Guard with Audit mode</target>
        </segment>
      </unit>
      <unit id="820">
        <segment state="initial">
          <source>Deploy Device Guard policy to targeted computers and devices in Audit mode.</source>
          <target>Deploy Device Guard policy to targeted computers and devices in Audit mode.</target>
        </segment>
      </unit>
      <unit id="821">
        <segment state="initial">
          <source>Monitor the Code Integrity event log that indicates a program or a driver would have been blocked if Device Guard was configured in Enforcement mode.</source>
          <target>Monitor the Code Integrity event log that indicates a program or a driver would have been blocked if Device Guard was configured in Enforcement mode.</target>
        </segment>
      </unit>
      <unit id="822">
        <segment state="initial">
          <source>Adjust Device Guard rules until a high level of confidence has been reached.</source>
          <target>Adjust Device Guard rules until a high level of confidence has been reached.</target>
        </segment>
      </unit>
      <unit id="823">
        <segment state="initial">
          <source>After the testing phase has been completed, Device Guard policy can be switched to Enforcement mode.</source>
          <target>After the testing phase has been completed, Device Guard policy can be switched to Enforcement mode.</target>
        </segment>
      </unit>
      <unit id="824">
        <segment state="initial">
          <source>Build an isolated reference machine when deploying Device Guard</source>
          <target>Build an isolated reference machine when deploying Device Guard</target>
        </segment>
      </unit>
      <unit id="825">
        <segment state="initial">
          <source>Because the corporate network can contain malware, you should start to configure a reference environment that is isolated from your main corporate network.</source>
          <target>Because the corporate network can contain malware, you should start to configure a reference environment that is isolated from your main corporate network.</target>
        </segment>
      </unit>
      <unit id="826">
        <segment state="initial">
          <source>After that, you can create a code integrity policy that includes the trusted applications you want to run on your protected devices.</source>
          <target>After that, you can create a code integrity policy that includes the trusted applications you want to run on your protected devices.</target>
        </segment>
      </unit>
      <unit id="827">
        <segment state="initial">
          <source>Use AppLocker when it makes sense</source>
          <target>Use AppLocker when it makes sense</target>
        </segment>
      </unit>
      <unit id="828">
        <segment state="initial">
          <source>Although AppLocker is not considered a new Device Guard feature, it complements Device Guard functionality for some scenarios like being able to deny a specific Universal Windows apps for a specific user or a group of users.</source>
          <target>Although AppLocker is not considered a new Device Guard feature, it complements Device Guard functionality for some scenarios like being able to deny a specific Universal Windows apps for a specific user or a group of users.</target>
        </segment>
      </unit>
      <unit id="829">
        <segment state="initial">
          <source>Lock down firmware and configuration</source>
          <target>Lock down firmware and configuration</target>
        </segment>
      </unit>
      <unit id="830">
        <segment state="initial">
          <source>After Windows 10 is installed, lock down firmware boot options access.</source>
          <target>After Windows 10 is installed, lock down firmware boot options access.</target>
        </segment>
      </unit>
      <unit id="831">
        <segment state="initial">
          <source>This prevents a user with physical access from modifying UEFI settings, disabling Secure Boot, or booting other operating systems.</source>
          <target>This prevents a user with physical access from modifying UEFI settings, disabling Secure Boot, or booting other operating systems.</target>
        </segment>
      </unit>
      <unit id="832">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
        </originalData>
        <segment state="initial">
          <source>Also, in order to protect against an administrator trying to disable Device Guard, add a rule in the current Device Guard policy that will deny and block execution of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">C:<ph dataRef="id3" id="ph1" />Windows<ph dataRef="id4" id="ph2" />System32<ph dataRef="id5" id="ph3" />SecConfig.efi</pc> tool.</source>
          <target>Also, in order to protect against an administrator trying to disable Device Guard, add a rule in the current Device Guard policy that will deny and block execution of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">C:<ph dataRef="id3" id="ph1" />Windows<ph dataRef="id4" id="ph2" />System32<ph dataRef="id5" id="ph3" />SecConfig.efi</pc> tool.</target>
        </segment>
      </unit>
      <unit id="833">
        <segment state="initial">
          <source>Health attestation is a key feature of Windows 10 that includes client and cloud components to control access to high-value assets based on a user and their device’s identity and compliance with corporate governance policy.</source>
          <target>Health attestation is a key feature of Windows 10 that includes client and cloud components to control access to high-value assets based on a user and their device’s identity and compliance with corporate governance policy.</target>
        </segment>
      </unit>
      <unit id="834">
        <segment state="initial">
          <source>Organizations can choose to detect and report unhealthy devices, or to configure health enforcement rules based on their needs.</source>
          <target>Organizations can choose to detect and report unhealthy devices, or to configure health enforcement rules based on their needs.</target>
        </segment>
      </unit>
      <unit id="835">
        <segment state="initial">
          <source>Health attestation provides an end-to-end security model and integration points, which vendors and software developers can use to build and integrate a customized solution.</source>
          <target>Health attestation provides an end-to-end security model and integration points, which vendors and software developers can use to build and integrate a customized solution.</target>
        </segment>
      </unit>
      <unit id="836">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="837">
        <segment state="initial">
          <source>Protect derived domain credentials with Credential Guard</source>
          <target>Protect derived domain credentials with Credential Guard</target>
        </segment>
      </unit>
      <unit id="838">
        <segment state="initial">
          <source>Device Guard deployment guide</source>
          <target>Device Guard deployment guide</target>
        </segment>
      </unit>
      <unit id="839">
        <segment state="initial">
          <source>Trusted Platform Module technology overview</source>
          <target>Trusted Platform Module technology overview</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>