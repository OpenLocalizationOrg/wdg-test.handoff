<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\event-5152.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">44b2d7f200951c2a18db7d3ed069df6c6773fb1e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>5152(F) The Windows Filtering Platform blocked a packet.</source>
          <target>5152(F) The Windows Filtering Platform blocked a packet.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>(Windows 10)</source>
          <target>(Windows 10)</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Describes security event 5152(F) The Windows Filtering Platform blocked a packet.</source>
          <target>Describes security event 5152(F) The Windows Filtering Platform blocked a packet.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>5152(F): The Windows Filtering Platform blocked a packet.</source>
          <target>5152(F): The Windows Filtering Platform blocked a packet.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Windows Server 2016</source>
          <target>Windows Server 2016</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
          <data id="id3">&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](audit-filtering-platform-packet-drop.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Subcategory:</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Audit Filtering Platform Packet Drop</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Subcategory:</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Audit Filtering Platform Packet Drop</pc>
          </target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Event Description:</source>
          <target>Event Description:</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa366510(v=vs.85).aspx)</data>
        </originalData>
        <segment state="initial">
          <source>This event generates when <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Filtering Platform</pc> has blocked a network packet.</source>
          <target>This event generates when <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Filtering Platform</pc> has blocked a network packet.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>This event is generated for every received network packet.</source>
          <target>This event is generated for every received network packet.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](#security-monitoring-recommendations)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />For recommendations, see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Security Monitoring Recommendations</pc> for this event.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />For recommendations, see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Security Monitoring Recommendations</pc> for this event.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Event XML:</source>
          <target>Event XML:</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Required Server Roles:</pc> None.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Required Server Roles:</pc> None.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum OS Version:</pc> Windows Server 2008, Windows Vista.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum OS Version:</pc> Windows Server 2008, Windows Vista.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Versions:</pc> 0.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Versions:</pc> 0.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Field Descriptions:</source>
          <target>Field Descriptions:</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Information</pc>:</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Information</pc>:</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process ID</pc>
            <ph dataRef="id3" id="ph1" />Type = Pointer<ph dataRef="id4" id="ph2" />: hexadecimal Process ID of the process to which blocked network packet was sent.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process ID</pc>
            <ph dataRef="id3" id="ph1" />Type = Pointer<ph dataRef="id4" id="ph2" />: hexadecimal Process ID of the process to which blocked network packet was sent.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Process ID (PID) is a number used by the operating system to uniquely identify an active process.</source>
          <target>Process ID (PID) is a number used by the operating system to uniquely identify an active process.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>To see the PID for a specific process you can, for example, use Task Manager (Details tab, PID column):</source>
          <target>To see the PID for a specific process you can, for example, use Task Manager (Details tab, PID column):</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>If you convert the hexadecimal value to decimal, you can compare it to the values in Task Manager.</source>
          <target>If you convert the hexadecimal value to decimal, you can compare it to the values in Task Manager.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-4688.md)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\\</data>
        </originalData>
        <segment state="initial">
          <source>You can also correlate this process ID with a process ID in other events, for example, “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">4688</pc>: A new process has been created” <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Process Information<ph dataRef="id5" id="ph1" />New Process ID</pc>.</source>
          <target>You can also correlate this process ID with a process ID in other events, for example, “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">4688</pc>: A new process has been created” <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Process Information<ph dataRef="id5" id="ph1" />New Process ID</pc>.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> full path and the name of the executable for the process.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> full path and the name of the executable for the process.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\#</data>
        </originalData>
        <segment state="initial">
          <source>Logical disk is displayed in format <ph dataRef="id1" id="ph1" />device<ph dataRef="id2" id="ph2" />harddiskvolume<ph dataRef="id3" id="ph3" />.</source>
          <target>Logical disk is displayed in format <ph dataRef="id1" id="ph1" />device<ph dataRef="id2" id="ph2" />harddiskvolume<ph dataRef="id3" id="ph3" />.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>You can get all local volume numbers by using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">diskpart</pc> utility.</source>
          <target>You can get all local volume numbers by using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">diskpart</pc> utility.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The command to get volume numbers using diskpart is “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">list volume”</pc>:</source>
          <target>The command to get volume numbers using diskpart is “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">list volume”</pc>:</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Network Information:</source>
          <target>Network Information:</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direction</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: direction of blocked connection.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Direction</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: direction of blocked connection.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Inbound – for inbound connections.</source>
          <target>Inbound – for inbound connections.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Outbound – for unbound connections.</source>
          <target>Outbound – for unbound connections.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Source Address</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> local IP address on which application received the packet.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Source Address</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> local IP address on which application received the packet.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>IPv4 Address</source>
          <target>IPv4 Address</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>IPv6 Address</source>
          <target>IPv6 Address</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>:: - all IP addresses in IPv6 format</source>
          <target>:: - all IP addresses in IPv6 format</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>0.0.0.0 - all IP addresses in IPv4 format</source>
          <target>0.0.0.0 - all IP addresses in IPv4 format</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>127.0.0.1 , ::1 - localhost</source>
          <target>127.0.0.1 , ::1 - localhost</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Source Port</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> port number on which application received the packet.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Source Port</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> port number on which application received the packet.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">***</data>
          <data id="id8">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Address</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> IP address <pc dataRefEnd="id8" dataRefStart="id7" id="p3">from</pc> which packet was received or initiated.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Address</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> IP address <pc dataRefEnd="id8" dataRefStart="id7" id="p3">from</pc> which packet was received or initiated.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>IPv4 Address</source>
          <target>IPv4 Address</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>IPv6 Address</source>
          <target>IPv6 Address</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>:: - all IP addresses in IPv6 format</source>
          <target>:: - all IP addresses in IPv6 format</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>0.0.0.0 - all IP addresses in IPv4 format</source>
          <target>0.0.0.0 - all IP addresses in IPv4 format</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>127.0.0.1 , ::1 - localhost</source>
          <target>127.0.0.1 , ::1 - localhost</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Port</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> port number which was used from remote machine to send the packet.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Port</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> port number which was used from remote machine to send the packet.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Protocol</pc>
            <ph dataRef="id3" id="ph1" />Type = UInt32<ph dataRef="id4" id="ph2" />: number of protocol which was used.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Protocol</pc>
            <ph dataRef="id3" id="ph1" />Type = UInt32<ph dataRef="id4" id="ph2" />: number of protocol which was used.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Service</source>
          <target>Service</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Protocol Number</source>
          <target>Protocol Number</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Internet Control Message Protocol (ICMP)</source>
          <target>Internet Control Message Protocol (ICMP)</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>1</source>
          <target>1</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Transmission Control Protocol (TCP)</source>
          <target>Transmission Control Protocol (TCP)</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>6</source>
          <target>6</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>User Datagram Protocol (UDP)</source>
          <target>User Datagram Protocol (UDP)</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>17</source>
          <target>17</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>General Routing Encapsulation (PPTP data over GRE)</source>
          <target>General Routing Encapsulation (PPTP data over GRE)</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>47</source>
          <target>47</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Authentication Header (AH) IPSec</source>
          <target>Authentication Header (AH) IPSec</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>51</source>
          <target>51</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Encapsulation Security Payload (ESP) IPSec</source>
          <target>Encapsulation Security Payload (ESP) IPSec</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>50</source>
          <target>50</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Exterior Gateway Protocol (EGP)</source>
          <target>Exterior Gateway Protocol (EGP)</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>8</source>
          <target>8</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Gateway-Gateway Protocol (GGP)</source>
          <target>Gateway-Gateway Protocol (GGP)</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>3</source>
          <target>3</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Host Monitoring Protocol (HMP)</source>
          <target>Host Monitoring Protocol (HMP)</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>20</source>
          <target>20</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Internet Group Management Protocol (IGMP)</source>
          <target>Internet Group Management Protocol (IGMP)</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>88</source>
          <target>88</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>MIT Remote Virtual Disk (RVD)</source>
          <target>MIT Remote Virtual Disk (RVD)</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>66</source>
          <target>66</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>OSPF Open Shortest Path First</source>
          <target>OSPF Open Shortest Path First</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>89</source>
          <target>89</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>PARC Universal Packet Protocol (PUP)</source>
          <target>PARC Universal Packet Protocol (PUP)</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>12</source>
          <target>12</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Reliable Datagram Protocol (RDP)</source>
          <target>Reliable Datagram Protocol (RDP)</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>27</source>
          <target>27</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Reservation Protocol (RSVP) QoS</source>
          <target>Reservation Protocol (RSVP) QoS</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>46</source>
          <target>46</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Filter Information:</source>
          <target>Filter Information:</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Filter Run-Time ID</pc>
            <ph dataRef="id3" id="ph1" />Type = UInt64<ph dataRef="id4" id="ph2" />: unique filter ID which blocked the packet.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Filter Run-Time ID</pc>
            <ph dataRef="id3" id="ph1" />Type = UInt64<ph dataRef="id4" id="ph2" />: unique filter ID which blocked the packet.</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To find specific Windows Filtering Platform filter by ID you need to execute the following command: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">netsh wfp show filters</pc>.</source>
          <target>To find specific Windows Filtering Platform filter by ID you need to execute the following command: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">netsh wfp show filters</pc>.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>As result of this command <pc dataRefEnd="id2" dataRefStart="id1" id="p1">filters.xml</pc> file will be generated.</source>
          <target>As result of this command <pc dataRefEnd="id2" dataRefStart="id1" id="p1">filters.xml</pc> file will be generated.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>You need to open this file and find specific substring with required filter ID (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />filterId<ph dataRef="id4" id="ph2" /></pc>)<pc dataRefEnd="id6" dataRefStart="id5" id="p2">,</pc> for example:</source>
          <target>You need to open this file and find specific substring with required filter ID (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />filterId<ph dataRef="id4" id="ph2" /></pc>)<pc dataRefEnd="id6" dataRefStart="id5" id="p2">,</pc> for example:</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">[</data>
          <data id="id6">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa363971(v=vs.85).aspx)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Layer Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: <pc dataRefEnd="id6" dataRefStart="id5" id="p2">Application Layer Enforcement</pc> layer name.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Layer Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: <pc dataRefEnd="id6" dataRefStart="id5" id="p2">Application Layer Enforcement</pc> layer name.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Layer Run-Time ID</pc>
            <ph dataRef="id3" id="ph1" />Type = UInt64<ph dataRef="id4" id="ph2" />: Windows Filtering Platform layer identifier.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Layer Run-Time ID</pc>
            <ph dataRef="id3" id="ph1" />Type = UInt64<ph dataRef="id4" id="ph2" />: Windows Filtering Platform layer identifier.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To find specific Windows Filtering Platform layer ID you need to execute the following command: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">netsh wfp show state</pc>.</source>
          <target>To find specific Windows Filtering Platform layer ID you need to execute the following command: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">netsh wfp show state</pc>.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>As result of this command <pc dataRefEnd="id2" dataRefStart="id1" id="p1">wfpstate.xml</pc> file will be generated.</source>
          <target>As result of this command <pc dataRefEnd="id2" dataRefStart="id1" id="p1">wfpstate.xml</pc> file will be generated.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>You need to open this file and find specific substring with required layer ID (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />layerId<ph dataRef="id4" id="ph2" /></pc>)<pc dataRefEnd="id6" dataRefStart="id5" id="p2">,</pc> for example:</source>
          <target>You need to open this file and find specific substring with required layer ID (<pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />layerId<ph dataRef="id4" id="ph2" /></pc>)<pc dataRefEnd="id6" dataRefStart="id5" id="p2">,</pc> for example:</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Security Monitoring Recommendations</source>
          <target>Security Monitoring Recommendations</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>For 5152(F): The Windows Filtering Platform blocked a packet.</source>
          <target>For 5152(F): The Windows Filtering Platform blocked a packet.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you have a pre-defined application which should be used to perform the operation that was reported by this event, monitor events with “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application</pc>” not equal to your defined application.</source>
          <target>If you have a pre-defined application which should be used to perform the operation that was reported by this event, monitor events with “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application</pc>” not equal to your defined application.</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>You can monitor to see if “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application</pc>” is not in a standard folder (for example, not in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System32</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Program Files</pc>) or is in a restricted folder (for example, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Temporary Internet Files</pc>).</source>
          <target>You can monitor to see if “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application</pc>” is not in a standard folder (for example, not in <pc dataRefEnd="id4" dataRefStart="id3" id="p2">System32</pc> or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Program Files</pc>) or is in a restricted folder (for example, <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Temporary Internet Files</pc>).</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>If you have a pre-defined list of restricted substrings or words in application names (for example, “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">mimikatz</pc>” or “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">cain.exe</pc>”), check for these substrings in “<pc dataRefEnd="id6" dataRefStart="id5" id="p3">Application</pc>.”</source>
          <target>If you have a pre-defined list of restricted substrings or words in application names (for example, “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">mimikatz</pc>” or “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">cain.exe</pc>”), check for these substrings in “<pc dataRefEnd="id6" dataRefStart="id5" id="p3">Application</pc>.”</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Check that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Source Address</pc> is one of the addresses assigned to the computer.</source>
          <target>Check that <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Source Address</pc> is one of the addresses assigned to the computer.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-5152.md)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If the computer or device should not have access to the Internet, or contains only applications that don’t connect to the Internet, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">5152</pc> events where <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Destination Address</pc> is an IP address from the Internet (not from private IP ranges).</source>
          <target>If the computer or device should not have access to the Internet, or contains only applications that don’t connect to the Internet, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">5152</pc> events where <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Destination Address</pc> is an IP address from the Internet (not from private IP ranges).</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you know that the computer should never contact or be contacted by certain network IP addresses, monitor for these addresses in “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Address</pc>.”</source>
          <target>If you know that the computer should never contact or be contacted by certain network IP addresses, monitor for these addresses in “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Address</pc>.”</target>
        </segment>
      </unit>
      <unit id="197">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you have a “whitelist” of IP addresses that the computer or device is expected to contact or be contacted by, monitor for IP addresses in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">“Destination Address”</pc> that are not in the whitelist.</source>
          <target>If you have a “whitelist” of IP addresses that the computer or device is expected to contact or be contacted by, monitor for IP addresses in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">“Destination Address”</pc> that are not in the whitelist.</target>
        </segment>
      </unit>
      <unit id="198">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-5152.md)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>If you need to monitor all inbound connections to a specific local port, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">5152</pc> events with that “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source Port</pc>.<pc dataRefEnd="id6" dataRefStart="id5" id="p3">”</pc></source>
          <target>If you need to monitor all inbound connections to a specific local port, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">5152</pc> events with that “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Source Port</pc>.<pc dataRefEnd="id6" dataRefStart="id5" id="p3">”</pc></target>
        </segment>
      </unit>
      <unit id="199">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Monitor for all connections with a “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Protocol Number”</pc> that is not typical for this device or compter, for example, anything other than 1, 6, or 17.</source>
          <target>Monitor for all connections with a “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Protocol Number”</pc> that is not typical for this device or compter, for example, anything other than 1, 6, or 17.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>If the computer’s communication with “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Address”</pc> should always use a specific “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Destination Port</pc>,<pc dataRefEnd="id6" dataRefStart="id5" id="p3">”</pc> monitor for any other “<pc dataRefEnd="id8" dataRefStart="id7" id="p4">Destination Port</pc>.”</source>
          <target>If the computer’s communication with “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Destination Address”</pc> should always use a specific “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Destination Port</pc>,<pc dataRefEnd="id6" dataRefStart="id5" id="p3">”</pc> monitor for any other “<pc dataRefEnd="id8" dataRefStart="id7" id="p4">Destination Port</pc>.”</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>