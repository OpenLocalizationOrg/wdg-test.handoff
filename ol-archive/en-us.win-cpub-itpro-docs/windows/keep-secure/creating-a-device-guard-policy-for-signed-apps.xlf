<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\creating-a-device-guard-policy-for-signed-apps.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">46d13eb4cf6b0810899bc8281eced4a0d76fb75c</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Create a Device Guard code integrity policy based on a reference device (Windows 10)</source>
          <target>Create a Device Guard code integrity policy based on a reference device (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>To implement Device Guard app protection, you will need to create a code integrity policy.</source>
          <target>To implement Device Guard app protection, you will need to create a code integrity policy.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Code integrity policies determine what apps are considered trustworthy and are allowed to run on a protected device.</source>
          <target>Code integrity policies determine what apps are considered trustworthy and are allowed to run on a protected device.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Create a Device Guard code integrity policy based on a reference device</source>
          <target>Create a Device Guard code integrity policy based on a reference device</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>To implement Device Guard app protection, you will need to create a code integrity policy.</source>
          <target>To implement Device Guard app protection, you will need to create a code integrity policy.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Code integrity policies determine what apps are considered trustworthy and are allowed to run on a protected device.</source>
          <target>Code integrity policies determine what apps are considered trustworthy and are allowed to run on a protected device.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Create a Device Guard code integrity policy based on a reference device</source>
          <target>Create a Device Guard code integrity policy based on a reference device</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>To create a code integrity policy, you'll first need to create a reference image that includes the signed applications you want to run on your protected devices.</source>
          <target>To create a code integrity policy, you'll first need to create a reference image that includes the signed applications you want to run on your protected devices.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](getting-apps-to-run-on-device-guard-protected-devices.md)</data>
        </originalData>
        <segment state="initial">
          <source>For information on how to sign applications, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Getting apps to run on Device Guard-protected devices</pc>.</source>
          <target>For information on how to sign applications, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Getting apps to run on Device Guard-protected devices</pc>.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Before creating a code integrity policy, make sure your reference device is clean of viruses and malware.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Before creating a code integrity policy, make sure your reference device is clean of viruses and malware.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>To create a code integrity policy based on a reference device</source>
          <target>To create a code integrity policy based on a reference device</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>On your reference device, start PowerShell as an administrator.</source>
          <target>On your reference device, start PowerShell as an administrator.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>In PowerShell, initialize variables by typing:</source>
          <target>In PowerShell, initialize variables by typing:</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Scan your device for installed applications and create a new code integrity policy by typing:</source>
          <target>Scan your device for installed applications and create a new code integrity policy by typing:</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Where <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />RuleLevel<ph dataRef="id4" id="ph2" /></pc> can be set to any of the following options:</source>
          <target>Where <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />RuleLevel<ph dataRef="id4" id="ph2" /></pc> can be set to any of the following options:</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Rule level</source>
          <target>Rule level</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Hash</source>
          <target>Hash</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Specifies individual hash values for each discovered app.</source>
          <target>Specifies individual hash values for each discovered app.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Each time an app is updated the hash value will change and you will need to update your policy.</source>
          <target>Each time an app is updated the hash value will change and you will need to update your policy.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>FileName</source>
          <target>FileName</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Currently unsupported.</source>
          <target>Currently unsupported.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>SignedVersion</source>
          <target>SignedVersion</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Currently unsupported.</source>
          <target>Currently unsupported.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Publisher</source>
          <target>Publisher</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>This level is a combination of the PCA certificate and the common name (CN) on the leaf certificate.</source>
          <target>This level is a combination of the PCA certificate and the common name (CN) on the leaf certificate.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>When a PCA certificate is used to sign apps from multiple companies (such as VeriSign), this rule level allows you to trust the PCA certificate but only for the company whose name is on the leaf certificate.</source>
          <target>When a PCA certificate is used to sign apps from multiple companies (such as VeriSign), this rule level allows you to trust the PCA certificate but only for the company whose name is on the leaf certificate.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>FilePublisher</source>
          <target>FilePublisher</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Currently unsupported.</source>
          <target>Currently unsupported.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>LeafCertificate</source>
          <target>LeafCertificate</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Adds trusted signers at the individual signing certificate level.</source>
          <target>Adds trusted signers at the individual signing certificate level.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>When an app is updated, the hash value is modified but the signing certificate stays the same.</source>
          <target>When an app is updated, the hash value is modified but the signing certificate stays the same.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>You will only need to update your policy if the signing certificate for an app changes.</source>
          <target>You will only need to update your policy if the signing certificate for an app changes.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Note<ph dataRef="id1" id="ph1" />  Leaf certificates have much shorter validity periods than PCA certificates.</source>
          <target>Note<ph dataRef="id1" id="ph1" />  Leaf certificates have much shorter validity periods than PCA certificates.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>You will need to update your policy if a certificate expires.</source>
          <target>You will need to update your policy if a certificate expires.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>PcaCertificate</source>
          <target>PcaCertificate</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Adds the highest certificate in the provided certificate chain to signers.</source>
          <target>Adds the highest certificate in the provided certificate chain to signers.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>This is typically one certificate below the root certificate, as the scan does not validate anything above the presented signature by going online or checking local root stores.</source>
          <target>This is typically one certificate below the root certificate, as the scan does not validate anything above the presented signature by going online or checking local root stores.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>RootCertificate</source>
          <target>RootCertificate</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Currently unsupported.</source>
          <target>Currently unsupported.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>WHQL</source>
          <target>WHQL</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Currently unsupported.</source>
          <target>Currently unsupported.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>WHQLPublisher</source>
          <target>WHQLPublisher</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Currently unsupported.</source>
          <target>Currently unsupported.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>WHQLFilePublisher</source>
          <target>WHQLFilePublisher</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Currently unsupported.</source>
          <target>Currently unsupported.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Type the following to convert the code integrity policy to a binary format:</source>
          <target>Type the following to convert the code integrity policy to a binary format:</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Once you have completed these steps, the Device Guard policy binary file (DeviceGuardPolicy.bin) and original xml file (InitialScan.xml) will be available on your desktop.</source>
          <target>Once you have completed these steps, the Device Guard policy binary file (DeviceGuardPolicy.bin) and original xml file (InitialScan.xml) will be available on your desktop.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  We recommend that you keep a copy of InitialScan.xml to use if you need to merge this code integrity policy with another policy, or update policy rule options.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  We recommend that you keep a copy of InitialScan.xml to use if you need to merge this code integrity policy with another policy, or update policy rule options.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Getting apps to run on Device Guard-protected devices</source>
          <target>Getting apps to run on Device Guard-protected devices</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>