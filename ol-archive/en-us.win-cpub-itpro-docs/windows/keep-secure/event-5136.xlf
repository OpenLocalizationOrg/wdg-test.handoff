<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\event-5136.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3185f454b30cf96f8c7d07f2844e4f02128dbb4b</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>5136(S) A directory service object was modified.</source>
          <target>5136(S) A directory service object was modified.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>(Windows 10)</source>
          <target>(Windows 10)</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Describes security event 5136(S) A directory service object was modified.</source>
          <target>Describes security event 5136(S) A directory service object was modified.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>5136(S): A directory service object was modified.</source>
          <target>5136(S): A directory service object was modified.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Windows Server 2016</source>
          <target>Windows Server 2016</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
          <data id="id3">&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](audit-directory-service-changes.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Subcategory:</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Audit Directory Service Changes</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Subcategory:</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Audit Directory Service Changes</pc>
          </target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Event Description:</source>
          <target>Event Description:</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>This event generates every time an Active Directory object is modified.</source>
          <target>This event generates every time an Active Directory object is modified.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa374872(v=vs.85).aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To generate this event, the modified object must have an appropriate entry in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SACL</pc>: the “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Write”</pc> action auditing for specific attributes.</source>
          <target>To generate this event, the modified object must have an appropriate entry in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SACL</pc>: the “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">Write”</pc> action auditing for specific attributes.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>For a change operation you will typically see two 5136 events for one action, with different <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation<ph dataRef="id3" id="ph1" />Type</pc> fields: “Value Deleted” and then “Value Added”.</source>
          <target>For a change operation you will typically see two 5136 events for one action, with different <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation<ph dataRef="id3" id="ph1" />Type</pc> fields: “Value Deleted” and then “Value Added”.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>“Value Deleted” event typically contains previous value and “Value Added” event contains new value.</source>
          <target>“Value Deleted” event typically contains previous value and “Value Added” event contains new value.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](#security-monitoring-recommendations)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />For recommendations, see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Security Monitoring Recommendations</pc> for this event.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />For recommendations, see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Security Monitoring Recommendations</pc> for this event.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Event XML:</source>
          <target>Event XML:</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Required Server Roles:</pc> Active Directory domain controller.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Required Server Roles:</pc> Active Directory domain controller.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum OS Version:</pc> Windows Server 2008.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum OS Version:</pc> Windows Server 2008.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Versions:</pc> 0.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Versions:</pc> 0.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Field Descriptions:</source>
          <target>Field Descriptions:</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Subject:</source>
          <target>Subject:</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security ID</pc>
            <ph dataRef="id3" id="ph1" />Type = SID<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> SID of account that requested the “modify object” operation.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security ID</pc>
            <ph dataRef="id3" id="ph1" />Type = SID<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> SID of account that requested the “modify object” operation.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Event Viewer automatically tries to resolve SIDs and show the account name.</source>
          <target>Event Viewer automatically tries to resolve SIDs and show the account name.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>If the SID cannot be resolved, you will see the source data in the event.</source>
          <target>If the SID cannot be resolved, you will see the source data in the event.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />A <pc dataRefEnd="id5" dataRefStart="id4" id="p2">security identifier (SID)</pc> is a unique value of variable length used to identify a trustee (security principal).</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />A <pc dataRefEnd="id5" dataRefStart="id4" id="p2">security identifier (SID)</pc> is a unique value of variable length used to identify a trustee (security principal).</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Each account has a unique SID that is issued by an authority, such as an Active Directory domain controller, and stored in a security database.</source>
          <target>Each account has a unique SID that is issued by an authority, such as an Active Directory domain controller, and stored in a security database.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Each time a user logs on, the system retrieves the SID for that user from the database and places it in the access token for that user.</source>
          <target>Each time a user logs on, the system retrieves the SID for that user from the database and places it in the access token for that user.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>The system uses the SID in the access token to identify the user in all subsequent interactions with Windows security.</source>
          <target>The system uses the SID in the access token to identify the user in all subsequent interactions with Windows security.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>When a SID has been used as the unique identifier for a user or group, it cannot ever be used again to identify another user or group.</source>
          <target>When a SID has been used as the unique identifier for a user or group, it cannot ever be used again to identify another user or group.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](security-identifiers.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about SIDs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security identifiers</pc>.</source>
          <target>For more information about SIDs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security identifiers</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the name of the account that requested the “modify object” operation.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the name of the account that requested the “modify object” operation.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Domain</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> subject’s domain or computer name.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Domain</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> subject’s domain or computer name.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Formats vary, and include the following:</source>
          <target>Formats vary, and include the following:</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Domain NETBIOS name example: CONTOSO</source>
          <target>Domain NETBIOS name example: CONTOSO</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Lowercase full domain name: contoso.local</source>
          <target>Lowercase full domain name: contoso.local</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Uppercase full domain name: CONTOSO.LOCAL</source>
          <target>Uppercase full domain name: CONTOSO.LOCAL</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://support.microsoft.com/en-us/kb/243330)</data>
        </originalData>
        <segment state="initial">
          <source>For some <pc dataRefEnd="id2" dataRefStart="id1" id="p1">well-known security principals</pc>, such as LOCAL SERVICE or ANONYMOUS LOGON, the value of this field is “NT AUTHORITY”.</source>
          <target>For some <pc dataRefEnd="id2" dataRefStart="id1" id="p1">well-known security principals</pc>, such as LOCAL SERVICE or ANONYMOUS LOGON, the value of this field is “NT AUTHORITY”.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>For local user accounts, this field will contain the name of the computer or device that this account belongs to, for example: “Win81”.</source>
          <target>For local user accounts, this field will contain the name of the computer or device that this account belongs to, for example: “Win81”.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](event-4624.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Logon ID</pc>
            <ph dataRef="id3" id="ph1" />Type = HexInt64<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> hexadecimal value that can help you correlate this event with recent events that might contain the same Logon ID, for example, “<pc dataRefEnd="id8" dataRefStart="id7" id="p3">4624</pc>: An account was successfully logged on.”</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Logon ID</pc>
            <ph dataRef="id3" id="ph1" />Type = HexInt64<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> hexadecimal value that can help you correlate this event with recent events that might contain the same Logon ID, for example, “<pc dataRefEnd="id8" dataRefStart="id7" id="p3">4624</pc>: An account was successfully logged on.”</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Directory Service:</source>
          <target>Directory Service:</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the name of the Active Directory domain where the modified object is located.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the name of the Active Directory domain where the modified object is located.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Type</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> has “<pc dataRefEnd="id8" dataRefStart="id7" id="p3">Active Directory Domain Services</pc>” value for this event.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Type</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> has “<pc dataRefEnd="id8" dataRefStart="id7" id="p3">Active Directory Domain Services</pc>” value for this event.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Object:</source>
          <target>Object:</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DN</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: distinguished name of the object that was modified.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DN</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: distinguished name of the object that was modified.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />The LDAP API references an LDAP object by its <pc dataRefEnd="id5" dataRefStart="id4" id="p2">distinguished name (DN)</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />The LDAP API references an LDAP object by its <pc dataRefEnd="id5" dataRefStart="id4" id="p2">distinguished name (DN)</pc>.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>A DN is a sequence of relative distinguished names (RDN) connected by commas.</source>
          <target>A DN is a sequence of relative distinguished names (RDN) connected by commas.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>An RDN is an attribute with an associated value in the form attribute=value; .</source>
          <target>An RDN is an attribute with an associated value in the form attribute=value; .</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>These are examples of RDNs attributes:</source>
          <target>These are examples of RDNs attributes:</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>• DC - domainComponent</source>
          <target>• DC - domainComponent</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>• CN - commonName</source>
          <target>• CN - commonName</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>• OU - organizationalUnitName</source>
          <target>• OU - organizationalUnitName</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>• O - organizationName</source>
          <target>• O - organizationName</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc>
            <ph dataRef="id3" id="ph1" />Type = GUID<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> each Active Directory object has globally unique identifier (GUID), which is a 128-bit value that is unique not only in the enterprise but also across the world.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc>
            <ph dataRef="id3" id="ph1" />Type = GUID<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> each Active Directory object has globally unique identifier (GUID), which is a 128-bit value that is unique not only in the enterprise but also across the world.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>GUIDs are assigned to every object created by Active Directory.</source>
          <target>GUIDs are assigned to every object created by Active Directory.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Each object's GUID is stored in its Object-GUID (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">objectGUID</pc>) property.</source>
          <target>Each object's GUID is stored in its Object-GUID (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">objectGUID</pc>) property.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Active Directory uses GUIDs internally to identify objects.</source>
          <target>Active Directory uses GUIDs internally to identify objects.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>For example, the GUID is one of an object's properties that is published in the global catalog.</source>
          <target>For example, the GUID is one of an object's properties that is published in the global catalog.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Searching the global catalog for a User object's GUID will yield results if the user has an account somewhere in the enterprise.</source>
          <target>Searching the global catalog for a User object's GUID will yield results if the user has an account somewhere in the enterprise.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>In fact, searching for any object by Object-GUID might be the most reliable way of finding the object you want to find.</source>
          <target>In fact, searching for any object by Object-GUID might be the most reliable way of finding the object you want to find.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>The values of other object properties can change, but the Object-GUID never changes.</source>
          <target>The values of other object properties can change, but the Object-GUID never changes.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>When an object is assigned a GUID, it keeps that value for life.</source>
          <target>When an object is assigned a GUID, it keeps that value for life.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Event Viewer automatically resolves <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc> field to real object.</source>
          <target>Event Viewer automatically resolves <pc dataRefEnd="id2" dataRefStart="id1" id="p1">GUID</pc> field to real object.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>To translate this GUID, use the following procedure:</source>
          <target>To translate this GUID, use the following procedure:</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Perform the following LDAP search using LDP.exe tool:</source>
          <target>Perform the following LDAP search using LDP.exe tool:</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Base DN: CN=Schema,CN=Configuration,DC=XXX,DC=XXX</source>
          <target>Base DN: CN=Schema,CN=Configuration,DC=XXX,DC=XXX</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">\*</data>
        </originalData>
        <segment state="initial">
          <source>Filter: (&amp;(objectClass=<ph dataRef="id1" id="ph1" />)(objectGUID=GUID))</source>
          <target>Filter: (&amp;(objectClass=<ph dataRef="id1" id="ph1" />)(objectGUID=GUID))</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Perform the following operations with the GUID before using it in a search request:</source>
          <target>Perform the following operations with the GUID before using it in a search request:</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>We have this GUID to search for: a6b34ab5-551b-4626-b8ee-2b36b3ee6672</source>
          <target>We have this GUID to search for: a6b34ab5-551b-4626-b8ee-2b36b3ee6672</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Take first 3 sections a6b34ab5-551b-4626.</source>
          <target>Take first 3 sections a6b34ab5-551b-4626.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>For each of these 3 sections you need to change (Invert) the order of bytes, like this b54ab3a6-1b55-2646</source>
          <target>For each of these 3 sections you need to change (Invert) the order of bytes, like this b54ab3a6-1b55-2646</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Add the last 2 sections without transformation: b54ab3a6-1b55-2646-b8ee-2b36b3ee6672</source>
          <target>Add the last 2 sections without transformation: b54ab3a6-1b55-2646-b8ee-2b36b3ee6672</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Delete - : b54ab3a61b552646b8ee2b36b3ee6672</source>
          <target>Delete - : b54ab3a61b552646b8ee2b36b3ee6672</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
          <data id="id10">\\</data>
          <data id="id11">\\</data>
          <data id="id12">\\</data>
          <data id="id13">\\</data>
          <data id="id14">\\</data>
          <data id="id15">\\</data>
          <data id="id16">\\</data>
        </originalData>
        <segment state="initial">
          <source>Divide bytes with backslashes: <ph dataRef="id1" id="ph1" />b5<ph dataRef="id2" id="ph2" />4a<ph dataRef="id3" id="ph3" />b3<ph dataRef="id4" id="ph4" />a6<ph dataRef="id5" id="ph5" />1b<ph dataRef="id6" id="ph6" />55<ph dataRef="id7" id="ph7" />26<ph dataRef="id8" id="ph8" />46<ph dataRef="id9" id="ph9" />b8<ph dataRef="id10" id="ph10" />ee<ph dataRef="id11" id="ph11" />2b<ph dataRef="id12" id="ph12" />36<ph dataRef="id13" id="ph13" />b3<ph dataRef="id14" id="ph14" />ee<ph dataRef="id15" id="ph15" />66<ph dataRef="id16" id="ph16" />72</source>
          <target>Divide bytes with backslashes: <ph dataRef="id1" id="ph1" />b5<ph dataRef="id2" id="ph2" />4a<ph dataRef="id3" id="ph3" />b3<ph dataRef="id4" id="ph4" />a6<ph dataRef="id5" id="ph5" />1b<ph dataRef="id6" id="ph6" />55<ph dataRef="id7" id="ph7" />26<ph dataRef="id8" id="ph8" />46<ph dataRef="id9" id="ph9" />b8<ph dataRef="id10" id="ph10" />ee<ph dataRef="id11" id="ph11" />2b<ph dataRef="id12" id="ph12" />36<ph dataRef="id13" id="ph13" />b3<ph dataRef="id14" id="ph14" />ee<ph dataRef="id15" id="ph15" />66<ph dataRef="id16" id="ph16" />72</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">\*</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
          <data id="id10">\\</data>
          <data id="id11">\\</data>
          <data id="id12">\\</data>
          <data id="id13">\\</data>
          <data id="id14">\\</data>
          <data id="id15">\\</data>
          <data id="id16">\\</data>
          <data id="id17">\\</data>
        </originalData>
        <segment state="initial">
          <source>Filter example: (&amp;(objectClass=<ph dataRef="id1" id="ph1" />)(objectGUID = <ph dataRef="id2" id="ph2" />b5<ph dataRef="id3" id="ph3" />4a<ph dataRef="id4" id="ph4" />b3<ph dataRef="id5" id="ph5" />a6<ph dataRef="id6" id="ph6" />1b<ph dataRef="id7" id="ph7" />55<ph dataRef="id8" id="ph8" />26<ph dataRef="id9" id="ph9" />46<ph dataRef="id10" id="ph10" />b8<ph dataRef="id11" id="ph11" />ee<ph dataRef="id12" id="ph12" />2b<ph dataRef="id13" id="ph13" />36<ph dataRef="id14" id="ph14" />b3<ph dataRef="id15" id="ph15" />ee<ph dataRef="id16" id="ph16" />66<ph dataRef="id17" id="ph17" />72))</source>
          <target>Filter example: (&amp;(objectClass=<ph dataRef="id1" id="ph1" />)(objectGUID = <ph dataRef="id2" id="ph2" />b5<ph dataRef="id3" id="ph3" />4a<ph dataRef="id4" id="ph4" />b3<ph dataRef="id5" id="ph5" />a6<ph dataRef="id6" id="ph6" />1b<ph dataRef="id7" id="ph7" />55<ph dataRef="id8" id="ph8" />26<ph dataRef="id9" id="ph9" />46<ph dataRef="id10" id="ph10" />b8<ph dataRef="id11" id="ph11" />ee<ph dataRef="id12" id="ph12" />2b<ph dataRef="id13" id="ph13" />36<ph dataRef="id14" id="ph14" />b3<ph dataRef="id15" id="ph15" />ee<ph dataRef="id16" id="ph16" />66<ph dataRef="id17" id="ph17" />72))</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Scope: Subtree</source>
          <target>Scope: Subtree</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Attributes: objectGUID</source>
          <target>Attributes: objectGUID</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Class</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: class of the object that was modified.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Class</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: class of the object that was modified.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Some of the common Active Directory object classes:</source>
          <target>Some of the common Active Directory object classes:</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>container – for containers.</source>
          <target>container – for containers.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>user – for users.</source>
          <target>user – for users.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>group – for groups.</source>
          <target>group – for groups.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>domainDNS – for domain object.</source>
          <target>domainDNS – for domain object.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>groupPolicyContainer – for group policy objects.</source>
          <target>groupPolicyContainer – for group policy objects.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">\\</data>
        </originalData>
        <segment state="initial">
          <source>For all possible values of this field open Active Directory Schema snap-in (see how to enable this snap-in: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://technet.microsoft.com/en-us/library/Cc755885(v=WS.10).aspx</pc>) and navigate to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Active Directory Schema<ph dataRef="id5" id="ph1" />Classes</pc>.</source>
          <target>For all possible values of this field open Active Directory Schema snap-in (see how to enable this snap-in: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://technet.microsoft.com/en-us/library/Cc755885(v=WS.10).aspx</pc>) and navigate to <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Active Directory Schema<ph dataRef="id5" id="ph1" />Classes</pc>.</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Or use this document: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://msdn.microsoft.com/en-us/library/cc221630.aspx</pc></source>
          <target>Or use this document: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">https://msdn.microsoft.com/en-us/library/cc221630.aspx</pc></target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Attribute:</source>
          <target>Attribute:</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LDAP Display Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the object attribute that was modified.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LDAP Display Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the object attribute that was modified.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](https://msdn.microsoft.com/en-us/library/ms676828(v=vs.85).aspx)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">LDAP Display Name</pc> is the name used by LDAP clients, such as the ADSI LDAP provider, to read and write the attribute by using the LDAP protocol.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">LDAP Display Name</pc> is the name used by LDAP clients, such as the ADSI LDAP provider, to read and write the attribute by using the LDAP protocol.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Syntax (OID)</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> The syntax for an attribute defines the storage representation, byte ordering, and matching rules for comparisons of property types.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Syntax (OID)</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> The syntax for an attribute defines the storage representation, byte ordering, and matching rules for comparisons of property types.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Whether the attribute value must be a string, a number, or a unit of time is also defined.</source>
          <target>Whether the attribute value must be a string, a number, or a unit of time is also defined.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Every attribute of every object is associated with exactly one syntax.</source>
          <target>Every attribute of every object is associated with exactly one syntax.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>The syntaxes are not represented as objects in the schema, but they are programmed to be understood by Active Directory.</source>
          <target>The syntaxes are not represented as objects in the schema, but they are programmed to be understood by Active Directory.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>The allowable syntaxes in Active Directory are predefined.</source>
          <target>The allowable syntaxes in Active Directory are predefined.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>OID</source>
          <target>OID</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Syntax Name</source>
          <target>Syntax Name</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>2.5.5.0</source>
          <target>2.5.5.0</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Undefined</source>
          <target>Undefined</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Not a legal syntax.</source>
          <target>Not a legal syntax.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>2.5.5.1</source>
          <target>2.5.5.1</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Object(DN-DN)</source>
          <target>Object(DN-DN)</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>The fully qualified name of an object in the directory.</source>
          <target>The fully qualified name of an object in the directory.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>2.5.5.2</source>
          <target>2.5.5.2</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>String(Object-Identifier)</source>
          <target>String(Object-Identifier)</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>The object identifier.</source>
          <target>The object identifier.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>2.5.5.3</source>
          <target>2.5.5.3</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Case-Sensitive String</source>
          <target>Case-Sensitive String</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>General String.</source>
          <target>General String.</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>2.5.5.4</source>
          <target>2.5.5.4</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>CaseIgnoreString(Teletex)</source>
          <target>CaseIgnoreString(Teletex)</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>Differentiates uppercase and lowercase.</source>
          <target>Differentiates uppercase and lowercase.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>2.5.5.5</source>
          <target>2.5.5.5</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>String(Printable), String(IA5)</source>
          <target>String(Printable), String(IA5)</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Teletex.</source>
          <target>Teletex.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>Does not differentiate uppercase and lowercase.</source>
          <target>Does not differentiate uppercase and lowercase.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>2.5.5.6</source>
          <target>2.5.5.6</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>String(Numeric)</source>
          <target>String(Numeric)</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>Printable string or IA5-String.</source>
          <target>Printable string or IA5-String.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>2.5.5.7</source>
          <target>2.5.5.7</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Object(DN-Binary)</source>
          <target>Object(DN-Binary)</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Both character sets are case-sensitive.</source>
          <target>Both character sets are case-sensitive.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>2.5.5.8</source>
          <target>2.5.5.8</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>Boolean</source>
          <target>Boolean</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>A sequence of digits.</source>
          <target>A sequence of digits.</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>2.5.5.9</source>
          <target>2.5.5.9</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>Integer, Enumeration</source>
          <target>Integer, Enumeration</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>A distinguished name plus a binary large object.</source>
          <target>A distinguished name plus a binary large object.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>2.5.5.10</source>
          <target>2.5.5.10</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>String(Octet)</source>
          <target>String(Octet)</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>TRUE or FALSE values.</source>
          <target>TRUE or FALSE values.</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>2.5.5.11</source>
          <target>2.5.5.11</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>String(UTC-Time), String(Generalized-Time)</source>
          <target>String(UTC-Time), String(Generalized-Time)</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>A 32-bit number or enumeration.</source>
          <target>A 32-bit number or enumeration.</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>2.5.5.12</source>
          <target>2.5.5.12</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>String(Unicode)</source>
          <target>String(Unicode)</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>A string of bytes.</source>
          <target>A string of bytes.</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>2.5.5.13</source>
          <target>2.5.5.13</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>Object(Presentation-Address)</source>
          <target>Object(Presentation-Address)</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>UTC Time or Generalized-Time.</source>
          <target>UTC Time or Generalized-Time.</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>2.5.5.14</source>
          <target>2.5.5.14</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>Object(DN-String)</source>
          <target>Object(DN-String)</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Unicode string.</source>
          <target>Unicode string.</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>2.5.5.15</source>
          <target>2.5.5.15</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>String(NT-Sec-Desc)</source>
          <target>String(NT-Sec-Desc)</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>Presentation address.</source>
          <target>Presentation address.</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>2.5.5.16</source>
          <target>2.5.5.16</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>LargeInteger</source>
          <target>LargeInteger</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>A DN-String plus a Unicode string.</source>
          <target>A DN-String plus a Unicode string.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>2.5.5.17</source>
          <target>2.5.5.17</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>String(Sid)</source>
          <target>String(Sid)</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>A Microsoft® Windows NT® Security descriptor.</source>
          <target>A Microsoft® Windows NT® Security descriptor.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Table 10.</source>
          <target>Table 10.</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>LDAP Attribute Syntax OIDs.</source>
          <target>LDAP Attribute Syntax OIDs.</target>
        </segment>
      </unit>
      <unit id="253">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Value</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the value which was added or deleted, depending on the <pc dataRefEnd="id6" dataRefStart="id5" id="p2">Operation<ph dataRef="id7" id="ph3" />Type</pc> field.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Value</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the value which was added or deleted, depending on the <pc dataRefEnd="id6" dataRefStart="id5" id="p2">Operation<ph dataRef="id7" id="ph3" />Type</pc> field.</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>Operation:</source>
          <target>Operation:</target>
        </segment>
      </unit>
      <unit id="255">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Type</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> type of performed operation.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Type</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> type of performed operation.</target>
        </segment>
      </unit>
      <unit id="256">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Value Added</pc> – new value added.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Value Added</pc> – new value added.</target>
        </segment>
      </unit>
      <unit id="257">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Value Deleted</pc> – value deleted (typically “Value Deleted” is a part of change operation).</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Value Deleted</pc> – value deleted (typically “Value Deleted” is a part of change operation).</target>
        </segment>
      </unit>
      <unit id="258">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Correlation ID</pc>
            <ph dataRef="id3" id="ph1" />Type = GUID<ph dataRef="id4" id="ph2" />: multiple modifications are often executed as one operation via LDAP.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Correlation ID</pc>
            <ph dataRef="id3" id="ph1" />Type = GUID<ph dataRef="id4" id="ph2" />: multiple modifications are often executed as one operation via LDAP.</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>This value allows you to correlate all the modification events that comprise the operation.</source>
          <target>This value allows you to correlate all the modification events that comprise the operation.</target>
        </segment>
      </unit>
      <unit id="260">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](event-5137.md)</data>
        </originalData>
        <segment state="initial">
          <source>Just look for other events from current subcategory with the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Correlation ID</pc>, for example “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">5137</pc>: A directory service object was created.”</source>
          <target>Just look for other events from current subcategory with the same <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Correlation ID</pc>, for example “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">5137</pc>: A directory service object was created.”</target>
        </segment>
      </unit>
      <unit id="261">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-5139.md)</data>
        </originalData>
        <segment state="initial">
          <source>and “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">5139</pc>: A directory service object was moved.”</source>
          <target>and “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">5139</pc>: A directory service object was moved.”</target>
        </segment>
      </unit>
      <unit id="262">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">GUID</pc> is an acronym for 'Globally Unique Identifier'.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">GUID</pc> is an acronym for 'Globally Unique Identifier'.</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>It is a 128-bit integer number used to identify resources, activities or instances.</source>
          <target>It is a 128-bit integer number used to identify resources, activities or instances.</target>
        </segment>
      </unit>
      <unit id="264">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">-</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Correlation ID</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: always has “<pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" /></pc>“ value.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Correlation ID</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: always has “<pc dataRefEnd="id6" dataRefStart="id5" id="p2"><ph dataRef="id7" id="ph3" /></pc>“ value.</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>Not in use.</source>
          <target>Not in use.</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>Security Monitoring Recommendations</source>
          <target>Security Monitoring Recommendations</target>
        </segment>
      </unit>
      <unit id="267">
        <segment state="initial">
          <source>For 5136(S): A directory service object was modified.</source>
          <target>For 5136(S): A directory service object was modified.</target>
        </segment>
      </unit>
      <unit id="268">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](appendix-a-security-monitoring-recommendations-for-many-audit-events.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>
            <ph dataRef="id3" id="ph1" />For this event, also see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Appendix A: Security monitoring recommendations for many audit events</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>
            <ph dataRef="id3" id="ph1" />For this event, also see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Appendix A: Security monitoring recommendations for many audit events</pc>.</target>
        </segment>
      </unit>
      <unit id="269">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you need to monitor modifications to specific Active Directory objects, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DN</pc> field with specific object name.</source>
          <target>If you need to monitor modifications to specific Active Directory objects, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DN</pc> field with specific object name.</target>
        </segment>
      </unit>
      <unit id="270">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For example, we recommend that you monitor all modifications to “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CN=AdminSDHolder,CN=System,DC=domain,DC=com”</pc> object.</source>
          <target>For example, we recommend that you monitor all modifications to “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">CN=AdminSDHolder,CN=System,DC=domain,DC=com”</pc> object.</target>
        </segment>
      </unit>
      <unit id="271">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you need to monitor modifications to specific Active Directory classes, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Class</pc> field with specific class name.</source>
          <target>If you need to monitor modifications to specific Active Directory classes, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Class</pc> field with specific class name.</target>
        </segment>
      </unit>
      <unit id="272">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For example, we recommend that you monitor all modifications to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">domainDNS</pc> class.</source>
          <target>For example, we recommend that you monitor all modifications to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">domainDNS</pc> class.</target>
        </segment>
      </unit>
      <unit id="273">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you need to monitor modifications to specific Active Directory attributes, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LDAP Display Name</pc> field with specific attribute name.</source>
          <target>If you need to monitor modifications to specific Active Directory attributes, monitor for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LDAP Display Name</pc> field with specific attribute name.</target>
        </segment>
      </unit>
      <unit id="274">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>It is better to monitor <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation<ph dataRef="id3" id="ph1" />Type = Value Added</pc> events, because you will see the new value of attribute.</source>
          <target>It is better to monitor <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation<ph dataRef="id3" id="ph1" />Type = Value Added</pc> events, because you will see the new value of attribute.</target>
        </segment>
      </unit>
      <unit id="275">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>At the same time you can correlate to previous <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation<ph dataRef="id3" id="ph1" />Type = Value Deleted</pc> event with the same <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Correlation ID</pc> to see the previous value.</source>
          <target>At the same time you can correlate to previous <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation<ph dataRef="id3" id="ph1" />Type = Value Deleted</pc> event with the same <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Correlation ID</pc> to see the previous value.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>