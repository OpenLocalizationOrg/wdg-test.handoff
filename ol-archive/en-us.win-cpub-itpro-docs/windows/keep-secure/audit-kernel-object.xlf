<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\audit-kernel-object.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">19110e6e1f1169900716e749a7b83bc936438c5d</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Audit Kernel Object (Windows 10)</source>
          <target>Audit Kernel Object (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This topic for the IT professional describes the Advanced Security Audit policy setting, Audit Kernel Object, which determines whether the operating system generates audit events when users attempt to access the system kernel, which includes mutexes and semaphores.</source>
          <target>This topic for the IT professional describes the Advanced Security Audit policy setting, Audit Kernel Object, which determines whether the operating system generates audit events when users attempt to access the system kernel, which includes mutexes and semaphores.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Audit Kernel Object</source>
          <target>Audit Kernel Object</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows Server 2016</source>
          <target>Windows Server 2016</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Audit Kernel Object determines whether the operating system generates audit events when users attempt to access the system kernel, which includes mutexes and semaphores.</source>
          <target>Audit Kernel Object determines whether the operating system generates audit events when users attempt to access the system kernel, which includes mutexes and semaphores.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/library/windows/desktop/aa374872(v=vs.85).aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Only kernel objects with a matching system access control list (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SACL</pc>) generate security audit events.</source>
          <target>Only kernel objects with a matching system access control list (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">SACL</pc>) generate security audit events.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>The audits generated are usually useful only to developers.</source>
          <target>The audits generated are usually useful only to developers.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Typically, kernel objects are given SACLs only if the AuditBaseObjects or AuditBaseDirectories auditing options are enabled.</source>
          <target>Typically, kernel objects are given SACLs only if the AuditBaseObjects or AuditBaseDirectories auditing options are enabled.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://technet.microsoft.com/en-us/library/jj852233.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>The “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit: Audit the access of global system objects</pc>” policy setting controls the default SACL of kernel objects.</source>
          <target>The “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit: Audit the access of global system objects</pc>” policy setting controls the default SACL of kernel objects.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event volume</pc>: High.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event volume</pc>: High.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Computer Type</source>
          <target>Computer Type</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>General Success</source>
          <target>General Success</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>General Failure</source>
          <target>General Failure</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Stronger Success</source>
          <target>Stronger Success</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Stronger Failure</source>
          <target>Stronger Failure</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Comments</source>
          <target>Comments</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Domain Controller</source>
          <target>Domain Controller</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Typically Kernel object auditing events have little to no security relevance and are hard to parse or analyze.</source>
          <target>Typically Kernel object auditing events have little to no security relevance and are hard to parse or analyze.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Also, the volume of these events is typically very high.</source>
          <target>Also, the volume of these events is typically very high.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>There is no recommendation to enable this subcategory, unless you know exactly what you need to monitor at the Kernel objects level.</source>
          <target>There is no recommendation to enable this subcategory, unless you know exactly what you need to monitor at the Kernel objects level.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Member Server</source>
          <target>Member Server</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Typically Kernel object auditing events have little to no security relevance and are hard to parse or analyze.</source>
          <target>Typically Kernel object auditing events have little to no security relevance and are hard to parse or analyze.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Also, the volume of these events is typically very high.</source>
          <target>Also, the volume of these events is typically very high.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>There is no recommendation to enable this subcategory, unless you know exactly what you need to monitor at the Kernel objects level.</source>
          <target>There is no recommendation to enable this subcategory, unless you know exactly what you need to monitor at the Kernel objects level.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Workstation</source>
          <target>Workstation</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Typically Kernel object auditing events have little to no security relevance and are hard to parse or analyze.</source>
          <target>Typically Kernel object auditing events have little to no security relevance and are hard to parse or analyze.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Also, the volume of these events is typically very high.</source>
          <target>Also, the volume of these events is typically very high.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>There is no recommendation to enable this subcategory, unless you know exactly what you need to monitor at the Kernel objects level.</source>
          <target>There is no recommendation to enable this subcategory, unless you know exactly what you need to monitor at the Kernel objects level.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Events List:</source>
          <target>Events List:</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-4656.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4656</pc>(S, F): A handle to an object was requested.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4656</pc>(S, F): A handle to an object was requested.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-4658.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4658</pc>(S): The handle to an object was closed.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4658</pc>(S): The handle to an object was closed.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-4660.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4660</pc>(S): An object was deleted.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4660</pc>(S): An object was deleted.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](event-4663.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4663</pc>(S): An attempt was made to access an object.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">4663</pc>(S): An attempt was made to access an object.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>