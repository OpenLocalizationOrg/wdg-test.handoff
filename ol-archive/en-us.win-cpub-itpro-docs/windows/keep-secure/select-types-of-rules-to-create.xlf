<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\select-types-of-rules-to-create.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">dcdb4e150c820a347093b4c25c2132f66702f2c8</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Select the types of rules to create (Windows 10)</source>
          <target>Select the types of rules to create (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This topic lists resources you can use when selecting your application control policy rules by using AppLocker.</source>
          <target>This topic lists resources you can use when selecting your application control policy rules by using AppLocker.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Select the types of rules to create</source>
          <target>Select the types of rules to create</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This topic lists resources you can use when selecting your application control policy rules by using AppLocker.</source>
          <target>This topic lists resources you can use when selecting your application control policy rules by using AppLocker.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>When determining what types of rules to create for each of your groups, you should also determine what enforcement setting to use for each group.</source>
          <target>When determining what types of rules to create for each of your groups, you should also determine what enforcement setting to use for each group.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Different rule types are more applicable for some apps, depending on the way that the applications are deployed in a specific business group.</source>
          <target>Different rule types are more applicable for some apps, depending on the way that the applications are deployed in a specific business group.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>The following topics provide additional information about AppLocker rules that can help you decide what rules to use for your applications:</source>
          <target>The following topics provide additional information about AppLocker rules that can help you decide what rules to use for your applications:</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Understanding AppLocker rule behavior</source>
          <target>Understanding AppLocker rule behavior</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Understanding AppLocker rule exceptions</source>
          <target>Understanding AppLocker rule exceptions</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Understanding AppLocker rule collections</source>
          <target>Understanding AppLocker rule collections</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Understanding AppLocker allow and deny actions on rules</source>
          <target>Understanding AppLocker allow and deny actions on rules</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Understanding AppLocker rule condition types</source>
          <target>Understanding AppLocker rule condition types</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Understanding AppLocker default rules</source>
          <target>Understanding AppLocker default rules</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Select the rule collection</source>
          <target>Select the rule collection</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>The rules you create will be in one of the following rule collections:</source>
          <target>The rules you create will be in one of the following rule collections:</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Executable files: .exe and .com</source>
          <target>Executable files: .exe and .com</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Windows Installer files: .msi, .msp, and .mst</source>
          <target>Windows Installer files: .msi, .msp, and .mst</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Scripts: .ps1, .bat, .cmd, .vbs, and .js</source>
          <target>Scripts: .ps1, .bat, .cmd, .vbs, and .js</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Packaged apps and packaged app installers: .appx</source>
          <target>Packaged apps and packaged app installers: .appx</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>DLLs: .dll and .ocx</source>
          <target>DLLs: .dll and .ocx</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>By default, the rules will allow a file to run based upon user or group privilege.</source>
          <target>By default, the rules will allow a file to run based upon user or group privilege.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>If you use DLL rules, a DLL allow rule has to be created for each DLL that is used by all of the allowed apps.</source>
          <target>If you use DLL rules, a DLL allow rule has to be created for each DLL that is used by all of the allowed apps.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>The DLL rule collection is not enabled by default.</source>
          <target>The DLL rule collection is not enabled by default.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>In the Woodgrove Bank example, the line-of-business app for the Bank Tellers business group is C:<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />Woodgrove<ph dataRef="id3" id="ph3" />Teller.exe, and this app needs to be included in a rule.</source>
          <target>In the Woodgrove Bank example, the line-of-business app for the Bank Tellers business group is C:<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />Woodgrove<ph dataRef="id3" id="ph3" />Teller.exe, and this app needs to be included in a rule.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>In addition, because this rule is part of a list of allowed applications, all the Windows files under C:<ph dataRef="id1" id="ph1" />Windows must be included as well.</source>
          <target>In addition, because this rule is part of a list of allowed applications, all the Windows files under C:<ph dataRef="id1" id="ph1" />Windows must be included as well.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Determine the rule condition</source>
          <target>Determine the rule condition</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>A rule condition is criteria upon which an AppLocker rule is based and can only be one of the rule conditions in the following table.</source>
          <target>A rule condition is criteria upon which an AppLocker rule is based and can only be one of the rule conditions in the following table.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Rule condition</source>
          <target>Rule condition</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Usage scenario</source>
          <target>Usage scenario</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Resources</source>
          <target>Resources</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Publisher</source>
          <target>Publisher</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>To use a publisher condition, the files must be digitally signed by the software publisher, or you must do so by using an internal certificate.</source>
          <target>To use a publisher condition, the files must be digitally signed by the software publisher, or you must do so by using an internal certificate.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Rules that are specified to the version level might have to be updated when a new version of the file is released.</source>
          <target>Rules that are specified to the version level might have to be updated when a new version of the file is released.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](understanding-the-publisher-rule-condition-in-applocker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the publisher rule condition in AppLocker</pc>.</source>
          <target>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the publisher rule condition in AppLocker</pc>.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Path</source>
          <target>Path</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Any file can be assigned this rule condition; however, because path rules specify locations within the file system, any subdirectory will also be affected by the rule (unless explicitly exempted).</source>
          <target>Any file can be assigned this rule condition; however, because path rules specify locations within the file system, any subdirectory will also be affected by the rule (unless explicitly exempted).</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](understanding-the-path-rule-condition-in-applocker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the path rule condition in AppLocker</pc>.</source>
          <target>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the path rule condition in AppLocker</pc>.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>File hash</source>
          <target>File hash</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Any file can be assigned this rule condition; however, the rule must be updated each time a new version of the file is released because the hash value is based in part upon the version.</source>
          <target>Any file can be assigned this rule condition; however, the rule must be updated each time a new version of the file is released because the hash value is based in part upon the version.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](understanding-the-file-hash-rule-condition-in-applocker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the file hash rule condition in AppLocker</pc>.</source>
          <target>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the file hash rule condition in AppLocker</pc>.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>In the Woodgrove Bank example, the line-of-business app for the Bank Tellers business group is signed and is located at C:<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />Woodgrove<ph dataRef="id3" id="ph3" />Teller.exe.</source>
          <target>In the Woodgrove Bank example, the line-of-business app for the Bank Tellers business group is signed and is located at C:<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />Woodgrove<ph dataRef="id3" id="ph3" />Teller.exe.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Therefore, the rule can be defined with a publisher condition.</source>
          <target>Therefore, the rule can be defined with a publisher condition.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>If the rule is defined to a specific version and above (for example, Teller.exe version 8.0 and above), then this will allow any updates to this app to occur without interruption of access to the users if the app's name and signed attributes stay the same.</source>
          <target>If the rule is defined to a specific version and above (for example, Teller.exe version 8.0 and above), then this will allow any updates to this app to occur without interruption of access to the users if the app's name and signed attributes stay the same.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Determine how to allow system files to run</source>
          <target>Determine how to allow system files to run</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Because AppLocker rules build a list of allowed apps, a rule or rules must be created to allow all Windows files to run.</source>
          <target>Because AppLocker rules build a list of allowed apps, a rule or rules must be created to allow all Windows files to run.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>AppLocker provides a means to ensure system files are properly considered in your rule collection by generating the default rules for each rule collection.</source>
          <target>AppLocker provides a means to ensure system files are properly considered in your rule collection by generating the default rules for each rule collection.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>You can use the default rules as a template when creating your own rules.</source>
          <target>You can use the default rules as a template when creating your own rules.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>However, these rules are only meant to function as a starter policy when you are first testing AppLocker rules so that the system files in the Windows folders will be allowed to run.</source>
          <target>However, these rules are only meant to function as a starter policy when you are first testing AppLocker rules so that the system files in the Windows folders will be allowed to run.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>When a default rule is created, it is denoted with "(Default rule)" in its name as it appears in the rule collection.</source>
          <target>When a default rule is created, it is denoted with "(Default rule)" in its name as it appears in the rule collection.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>You can also create a rule for the system files based on the path condition.</source>
          <target>You can also create a rule for the system files based on the path condition.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>In the preceding example, for the Bank Tellers group, all Windows files reside under C:<ph dataRef="id1" id="ph1" />Windows and can be defined with the path rule condition type.</source>
          <target>In the preceding example, for the Bank Tellers group, all Windows files reside under C:<ph dataRef="id1" id="ph1" />Windows and can be defined with the path rule condition type.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>This will permit access to these files whenever updates are applied and the files change.</source>
          <target>This will permit access to these files whenever updates are applied and the files change.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>If you require additional application security, you might need to modify the rules created from the built-in default rule collection.</source>
          <target>If you require additional application security, you might need to modify the rules created from the built-in default rule collection.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>For example, the default rule to allow all users to run .exe files in the Windows folder is based on a path condition that allows all files within the Windows folder to run.</source>
          <target>For example, the default rule to allow all users to run .exe files in the Windows folder is based on a path condition that allows all files within the Windows folder to run.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>The Windows folder contains a Temp subfolder to which the Users group is given the following permissions:</source>
          <target>The Windows folder contains a Temp subfolder to which the Users group is given the following permissions:</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Traverse Folder/Execute File</source>
          <target>Traverse Folder/Execute File</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Create Files/Write Data</source>
          <target>Create Files/Write Data</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Create Folders/Append Data</source>
          <target>Create Folders/Append Data</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>These permissions settings are applied to this folder for application compatibility.</source>
          <target>These permissions settings are applied to this folder for application compatibility.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>However, because any user can create files in this location, allowing apps to be run from this location might conflict with your organization's security policy.</source>
          <target>However, because any user can create files in this location, allowing apps to be run from this location might conflict with your organization's security policy.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Next steps</source>
          <target>Next steps</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](document-your-applocker-rules.md)</data>
        </originalData>
        <segment state="initial">
          <source>After you have selected the types of rules to create, record your findings as explained in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Document your AppLocker rules</pc>.</source>
          <target>After you have selected the types of rules to create, record your findings as explained in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Document your AppLocker rules</pc>.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>After recording your findings for the AppLocker rules to create, you will need to consider how to enforce the rules.</source>
          <target>After recording your findings for the AppLocker rules to create, you will need to consider how to enforce the rules.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](determine-group-policy-structure-and-rule-enforcement.md)</data>
        </originalData>
        <segment state="initial">
          <source>For info about how to do this, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Determine Group Policy structure and rule enforcement</pc>.</source>
          <target>For info about how to do this, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Determine Group Policy structure and rule enforcement</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>