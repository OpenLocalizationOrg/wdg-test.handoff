<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\event-5061.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">1259944deb4d4a8aba90feb19eef92f3c4134398</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>5061(S, F) Cryptographic operation.</source>
          <target>5061(S, F) Cryptographic operation.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>(Windows 10)</source>
          <target>(Windows 10)</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Describes security event 5061(S, F) Cryptographic operation.</source>
          <target>Describes security event 5061(S, F) Cryptographic operation.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>5061(S, F): Cryptographic operation.</source>
          <target>5061(S, F): Cryptographic operation.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Windows Server 2016</source>
          <target>Windows Server 2016</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
          <data id="id3">&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](audit-system-integrity.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Subcategory:</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Audit System Integrity</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Subcategory:</pc>
            <ph dataRef="id3" id="ph1" />
            <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Audit System Integrity</pc>
          </target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Event Description:</source>
          <target>Event Description:</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/en-us/library/windows/desktop/bb931355(v=vs.85).aspx)</data>
        </originalData>
        <segment state="initial">
          <source>This event generates when a cryptographic operation (open key, create key, create key, and so on) was performed using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Storage Provider</pc> (KSP).</source>
          <target>This event generates when a cryptographic operation (open key, create key, create key, and so on) was performed using a <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Storage Provider</pc> (KSP).</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>This event generates only if one of the following KSPs were used:</source>
          <target>This event generates only if one of the following KSPs were used:</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Microsoft Software Key Storage Provider</source>
          <target>Microsoft Software Key Storage Provider</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Microsoft Smart Card Key Storage Provider</source>
          <target>Microsoft Smart Card Key Storage Provider</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](#security-monitoring-recommendations)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />For recommendations, see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Security Monitoring Recommendations</pc> for this event.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />For recommendations, see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Security Monitoring Recommendations</pc> for this event.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Event XML:</source>
          <target>Event XML:</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Required Server Roles:</pc> None.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Required Server Roles:</pc> None.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum OS Version:</pc> Windows Server 2008, Windows Vista.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Minimum OS Version:</pc> Windows Server 2008, Windows Vista.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">***</data>
          <data id="id2">***</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Versions:</pc> 0.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Event Versions:</pc> 0.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Field Descriptions:</source>
          <target>Field Descriptions:</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Subject:</source>
          <target>Subject:</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security ID</pc>
            <ph dataRef="id3" id="ph1" />Type = SID<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> SID of account that requested specific cryptographic operation.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security ID</pc>
            <ph dataRef="id3" id="ph1" />Type = SID<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> SID of account that requested specific cryptographic operation.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Event Viewer automatically tries to resolve SIDs and show the account name.</source>
          <target>Event Viewer automatically tries to resolve SIDs and show the account name.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>If the SID cannot be resolved, you will see the source data in the event.</source>
          <target>If the SID cannot be resolved, you will see the source data in the event.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />A <pc dataRefEnd="id5" dataRefStart="id4" id="p2">security identifier (SID)</pc> is a unique value of variable length used to identify a trustee (security principal).</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <ph dataRef="id3" id="ph1" />A <pc dataRefEnd="id5" dataRefStart="id4" id="p2">security identifier (SID)</pc> is a unique value of variable length used to identify a trustee (security principal).</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Each account has a unique SID that is issued by an authority, such as an Active Directory domain controller, and stored in a security database.</source>
          <target>Each account has a unique SID that is issued by an authority, such as an Active Directory domain controller, and stored in a security database.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Each time a user logs on, the system retrieves the SID for that user from the database and places it in the access token for that user.</source>
          <target>Each time a user logs on, the system retrieves the SID for that user from the database and places it in the access token for that user.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>The system uses the SID in the access token to identify the user in all subsequent interactions with Windows security.</source>
          <target>The system uses the SID in the access token to identify the user in all subsequent interactions with Windows security.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>When a SID has been used as the unique identifier for a user or group, it cannot ever be used again to identify another user or group.</source>
          <target>When a SID has been used as the unique identifier for a user or group, it cannot ever be used again to identify another user or group.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](security-identifiers.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about SIDs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security identifiers</pc>.</source>
          <target>For more information about SIDs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Security identifiers</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the name of the account that requested specific cryptographic operation.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the name of the account that requested specific cryptographic operation.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Domain</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> subject’s domain or computer name.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Account Domain</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> subject’s domain or computer name.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Formats vary, and include the following:</source>
          <target>Formats vary, and include the following:</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Domain NETBIOS name example: CONTOSO</source>
          <target>Domain NETBIOS name example: CONTOSO</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Lowercase full domain name: contoso.local</source>
          <target>Lowercase full domain name: contoso.local</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Uppercase full domain name: CONTOSO.LOCAL</source>
          <target>Uppercase full domain name: CONTOSO.LOCAL</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://support.microsoft.com/en-us/kb/243330)</data>
        </originalData>
        <segment state="initial">
          <source>For some <pc dataRefEnd="id2" dataRefStart="id1" id="p1">well-known security principals</pc>, such as LOCAL SERVICE or ANONYMOUS LOGON, the value of this field is “NT AUTHORITY”.</source>
          <target>For some <pc dataRefEnd="id2" dataRefStart="id1" id="p1">well-known security principals</pc>, such as LOCAL SERVICE or ANONYMOUS LOGON, the value of this field is “NT AUTHORITY”.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>For local user accounts, this field will contain the name of the computer or device that this account belongs to, for example: “Win81”.</source>
          <target>For local user accounts, this field will contain the name of the computer or device that this account belongs to, for example: “Win81”.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">[</data>
          <data id="id8">](event-4624.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Logon ID</pc>
            <ph dataRef="id3" id="ph1" />Type = HexInt64<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> hexadecimal value that can help you correlate this event with recent events that might contain the same Logon ID, for example, “<pc dataRefEnd="id8" dataRefStart="id7" id="p3">4624</pc>: An account was successfully logged on.”</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Logon ID</pc>
            <ph dataRef="id3" id="ph1" />Type = HexInt64<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> hexadecimal value that can help you correlate this event with recent events that might contain the same Logon ID, for example, “<pc dataRefEnd="id8" dataRefStart="id7" id="p3">4624</pc>: An account was successfully logged on.”</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Cryptographic Parameters:</source>
          <target>Cryptographic Parameters:</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Provider Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the name of KSP through which the operation was performed.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Provider Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">:</pc> the name of KSP through which the operation was performed.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Can have one of the following values:</source>
          <target>Can have one of the following values:</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Microsoft Software Key Storage Provider</source>
          <target>Microsoft Software Key Storage Provider</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Microsoft Smart Card Key Storage Provider</source>
          <target>Microsoft Smart Card Key Storage Provider</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Algorithm Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the name of cryptographic algorithm through which the key was used or accessed.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Algorithm Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the name of cryptographic algorithm through which the key was used or accessed.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>For “Read persisted key from file” operation, this typically has “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UNKNOWN</pc>” value.</source>
          <target>For “Read persisted key from file” operation, this typically has “<pc dataRefEnd="id2" dataRefStart="id1" id="p1">UNKNOWN</pc>” value.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Can also have one of the following values:</source>
          <target>Can also have one of the following values:</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>RSA – algorithm created by Ron Rivest, Adi Shamir, and Leonard Adleman.</source>
          <target>RSA – algorithm created by Ron Rivest, Adi Shamir, and Leonard Adleman.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>DSA – Digital Signature Algorithm.</source>
          <target>DSA – Digital Signature Algorithm.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>DH – Diffie-Hellman.</source>
          <target>DH – Diffie-Hellman.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>ECDH<ph dataRef="id1" id="ph1" />P521 – Elliptic Curve Diffie-Hellman algorithm with 512-bit key length.</source>
          <target>ECDH<ph dataRef="id1" id="ph1" />P521 – Elliptic Curve Diffie-Hellman algorithm with 512-bit key length.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>ECDH<ph dataRef="id1" id="ph1" />P384 – Elliptic Curve Diffie-Hellman algorithm with 384-bit key length.</source>
          <target>ECDH<ph dataRef="id1" id="ph1" />P384 – Elliptic Curve Diffie-Hellman algorithm with 384-bit key length.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>ECDH<ph dataRef="id1" id="ph1" />P256 – Elliptic Curve Diffie-Hellman algorithm with 256-bit key length.</source>
          <target>ECDH<ph dataRef="id1" id="ph1" />P256 – Elliptic Curve Diffie-Hellman algorithm with 256-bit key length.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>ECDSA<ph dataRef="id1" id="ph1" />P256 – Elliptic Curve Digital Signature Algorithm with 256-bit key length.</source>
          <target>ECDSA<ph dataRef="id1" id="ph1" />P256 – Elliptic Curve Digital Signature Algorithm with 256-bit key length.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>ECDSA<ph dataRef="id1" id="ph1" />P384 – Elliptic Curve Digital Signature Algorithm with 384-bit key length.</source>
          <target>ECDSA<ph dataRef="id1" id="ph1" />P384 – Elliptic Curve Digital Signature Algorithm with 384-bit key length.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>ECDSA<ph dataRef="id1" id="ph1" />P521 – Elliptic Curve Digital Signature Algorithm with 521-bit key length.</source>
          <target>ECDSA<ph dataRef="id1" id="ph1" />P521 – Elliptic Curve Digital Signature Algorithm with 521-bit key length.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the name of the key (key container) with which operation was performed.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Name</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: the name of the key (key container) with which operation was performed.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>For example, to get the list of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Names</pc> for certificates for logged in user you can use “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">certutil -store -user my</pc>” command and check <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Key Container</pc> parameter in the output.</source>
          <target>For example, to get the list of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Names</pc> for certificates for logged in user you can use “<pc dataRefEnd="id4" dataRefStart="id3" id="p2">certutil -store -user my</pc>” command and check <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Key Container</pc> parameter in the output.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Here is an output example:</source>
          <target>Here is an output example:</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Type</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: can have one of the following values:</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Type</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: can have one of the following values:</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>“User key.”</source>
          <target>“User key.”</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>– user’s cryptographic key.</source>
          <target>– user’s cryptographic key.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>“Machine key.”</source>
          <target>“Machine key.”</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>– machine’s cryptographic key.</source>
          <target>– machine’s cryptographic key.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Cryptographic Operation:</source>
          <target>Cryptographic Operation:</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: performed operation.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operation</pc>
            <ph dataRef="id3" id="ph1" />Type = UnicodeString<ph dataRef="id4" id="ph2" />: performed operation.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Possible values:</source>
          <target>Possible values:</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Open Key.</source>
          <target>Open Key.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>– open existing cryptographic key.</source>
          <target>– open existing cryptographic key.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Create Key.</source>
          <target>Create Key.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>– create new cryptographic key.</source>
          <target>– create new cryptographic key.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Delete Key.</source>
          <target>Delete Key.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>– delete existing cryptographic key.</source>
          <target>– delete existing cryptographic key.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Sign hash.</source>
          <target>Sign hash.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>– cryptographic signing operation.</source>
          <target>– cryptographic signing operation.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Secret agreement.</source>
          <target>Secret agreement.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Key Derivation.</source>
          <target>Key Derivation.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>– key derivation operation.</source>
          <target>– key derivation operation.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Encrypt.</source>
          <target>Encrypt.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>– encryption operation.</source>
          <target>– encryption operation.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Decrypt.</source>
          <target>Decrypt.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>– decryption operation.</source>
          <target>– decryption operation.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\[</data>
          <data id="id4">\]</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Return Code</pc>
            <ph dataRef="id3" id="ph1" />Type = HexInt32<ph dataRef="id4" id="ph2" />: has “<pc dataRefEnd="id6" dataRefStart="id5" id="p2">0x0</pc>” value for Success events.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Return Code</pc>
            <ph dataRef="id3" id="ph1" />Type = HexInt32<ph dataRef="id4" id="ph2" />: has “<pc dataRefEnd="id6" dataRefStart="id5" id="p2">0x0</pc>” value for Success events.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>For failure events, provides a hexadecimal error code number.</source>
          <target>For failure events, provides a hexadecimal error code number.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Security Monitoring Recommendations</source>
          <target>Security Monitoring Recommendations</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>For 5061(S, F): Cryptographic operation.</source>
          <target>For 5061(S, F): Cryptographic operation.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Typically this event is required for detailed monitoring of KSP-related actions with cryptographic keys.</source>
          <target>Typically this event is required for detailed monitoring of KSP-related actions with cryptographic keys.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>If you need to monitor actions related to specific cryptographic keys (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">“Key Name”)</pc> or a specific <pc dataRefEnd="id4" dataRefStart="id3" id="p2">“Operation”</pc>, such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3">“Delete Key”</pc>, create monitoring rules and use this event as an information source.</source>
          <target>If you need to monitor actions related to specific cryptographic keys (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">“Key Name”)</pc> or a specific <pc dataRefEnd="id4" dataRefStart="id3" id="p2">“Operation”</pc>, such as <pc dataRefEnd="id6" dataRefStart="id5" id="p3">“Delete Key”</pc>, create monitoring rules and use this event as an information source.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;nbsp;&amp;nbsp;</data>
          <data id="id4">[</data>
          <data id="id5">](appendix-a-security-monitoring-recommendations-for-many-audit-events.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>
            <ph dataRef="id3" id="ph1" />For this event, also see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Appendix A: Security monitoring recommendations for many audit events</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important</pc>
            <ph dataRef="id3" id="ph1" />For this event, also see <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Appendix A: Security monitoring recommendations for many audit events</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>