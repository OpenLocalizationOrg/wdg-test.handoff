<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\manage\add-unsigned-app-to-code-integrity-policy.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">de5f08c086d4860902788040a7ad17b19cc91065</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Add unsigned app to code integrity policy (Windows 10)</source>
          <target>Add unsigned app to code integrity policy (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>When you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device.</source>
          <target>When you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Add unsigned app to code integrity policy</source>
          <target>Add unsigned app to code integrity policy</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10 Mobile</source>
          <target>Windows 10 Mobile</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>When you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device.</source>
          <target>When you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Then, create the catalog files for your unsigned app, sign the catalog files, and then merge the default policy that includes your signing certificate with existing code integrity policies.</source>
          <target>Then, create the catalog files for your unsigned app, sign the catalog files, and then merge the default policy that includes your signing certificate with existing code integrity policies.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>In this section</source>
          <target>In this section</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Create a code integrity policy based on a reference device</source>
          <target>Create a code integrity policy based on a reference device</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Create catalog files for your unsigned app</source>
          <target>Create catalog files for your unsigned app</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Catalog signing with Device Guard signing portal</source>
          <target>Catalog signing with Device Guard signing portal</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Create a code integrity policy based on a reference device</source>
          <target>Create a code integrity policy based on a reference device</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>To add an unsigned app to a code integrity policy, your code integrity policy must be created from golden image machine.</source>
          <target>To add an unsigned app to a code integrity policy, your code integrity policy must be created from golden image machine.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://technet.microsoft.com/library/mt243445.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a Device Guard code integrity policy based on a reference device</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a Device Guard code integrity policy based on a reference device</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Create catalog files for your unsigned app</source>
          <target>Create catalog files for your unsigned app</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Creating catalog files starts the process for adding an unsigned app to a code integrity policy.</source>
          <target>Creating catalog files starts the process for adding an unsigned app to a code integrity policy.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Before you get started, be sure to review these best practices and requirements:</source>
          <target>Before you get started, be sure to review these best practices and requirements:</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Requirements</source>
          <target>Requirements</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>You'll use Package Inspector during this process.</source>
          <target>You'll use Package Inspector during this process.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Only perform this process with a code integrity policy running in audit mode.</source>
          <target>Only perform this process with a code integrity policy running in audit mode.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>You should not perform this process on a system running an enforced Device Guard policy.</source>
          <target>You should not perform this process on a system running an enforced Device Guard policy.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Best practices</source>
          <target>Best practices</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Naming convention</pc> -- Using a naming convention makes it easier to find deployed catalog files.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Naming convention</pc> -- Using a naming convention makes it easier to find deployed catalog files.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">\*</data>
        </originalData>
        <segment state="initial">
          <source>We'll use <ph dataRef="id1" id="ph1" />-Contoso.cat as the naming convention in this topic.</source>
          <target>We'll use <ph dataRef="id1" id="ph1" />-Contoso.cat as the naming convention in this topic.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://technet.microsoft.com/library/mt463091.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see the section Inventorying catalog files by using Configuration Manager in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</source>
          <target>For more information, see the section Inventorying catalog files by using Configuration Manager in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](#create-ci-policy)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Where to deploy code integrity policy</pc> -- The <pc dataRefEnd="id4" dataRefStart="id3" id="p2">code integrity policy that you created</pc> should be deployed to the system on which you are running Package Inspector.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Where to deploy code integrity policy</pc> -- The <pc dataRefEnd="id4" dataRefStart="id3" id="p2">code integrity policy that you created</pc> should be deployed to the system on which you are running Package Inspector.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>This will ensure that the code integrity policy binaries are trusted.</source>
          <target>This will ensure that the code integrity policy binaries are trusted.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Copy the commands for each step into an elevated Windows PowerShell session.</source>
          <target>Copy the commands for each step into an elevated Windows PowerShell session.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>You'll use Package Inspector to find and trust all binaries in the app.</source>
          <target>You'll use Package Inspector to find and trust all binaries in the app.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>To create catalog files for your unsigned app</source>
          <target>To create catalog files for your unsigned app</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Start Package Inspector to scan the C drive.</source>
          <target>Start Package Inspector to scan the C drive.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Copy the installation media to the C drive.</source>
          <target>Copy the installation media to the C drive.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Copying the installation media to the C drive ensures that Package Inspector finds and catalogs the installer.</source>
          <target>Copying the installation media to the C drive ensures that Package Inspector finds and catalogs the installer.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>If you skip this step, the code integrity policy may trust the application to run, but not trust it to be installed.</source>
          <target>If you skip this step, the code integrity policy may trust the application to run, but not trust it to be installed.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Install and start the app.</source>
          <target>Install and start the app.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>All binaries that are used while Package Inspector is running will be part of the catalog files.</source>
          <target>All binaries that are used while Package Inspector is running will be part of the catalog files.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>After the installation, start the app and make sure that any product updates are installed and any downloadable content was found during the scan.</source>
          <target>After the installation, start the app and make sure that any product updates are installed and any downloadable content was found during the scan.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Then, close and restart the app to make sure that the scan found all binaries.</source>
          <target>Then, close and restart the app to make sure that the scan found all binaries.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Stop the scan and create definition and catalog files.</source>
          <target>Stop the scan and create definition and catalog files.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>After app install is complete, stop the Package Inspector scan and create catalog and definition files on your desktop.</source>
          <target>After app install is complete, stop the Package Inspector scan and create catalog and definition files on your desktop.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The Package Inspector scan catalogs the hash values for each binary file that is finds.</source>
          <target>The Package Inspector scan catalogs the hash values for each binary file that is finds.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>If the app that was scanned are updated, do this process again to trust the new binaries hash values.</source>
          <target>If the app that was scanned are updated, do this process again to trust the new binaries hash values.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>After you're done, the files are saved to your desktop.</source>
          <target>After you're done, the files are saved to your desktop.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>You still need to sign the catalog file so that it will be trusted within the code integrity policy.</source>
          <target>You still need to sign the catalog file so that it will be trusted within the code integrity policy.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Catalog signing with Device Guard signing portal</source>
          <target>Catalog signing with Device Guard signing portal</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>To sign catalog files with the Device Guard signing portal, you need to be signed up with the Windows Store for Business.</source>
          <target>To sign catalog files with the Device Guard signing portal, you need to be signed up with the Windows Store for Business.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](sign-up-windows-store-for-business.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign up for the Windows Store for Business</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign up for the Windows Store for Business</pc>.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Catalog signing is a vital step to adding your unsigned apps to your code integrity policy.</source>
          <target>Catalog signing is a vital step to adding your unsigned apps to your code integrity policy.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>To sign a catalog file with Device Guard signing portal</source>
          <target>To sign a catalog file with Device Guard signing portal</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Sign in to the Store for Business</source>
          <target>Sign in to the Store for Business</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Settings</pc>, and then choose <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Device Guard signing</pc>.</source>
          <target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Settings</pc>, and then choose <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Device Guard signing</pc>.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Upload</pc> to upload your unsigned catalog files.</source>
          <target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Upload</pc> to upload your unsigned catalog files.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#create-catalog-files)</data>
        </originalData>
        <segment state="initial">
          <source>These are the catalog files you created earlier in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create catalog files for your unsigned app</pc>.</source>
          <target>These are the catalog files you created earlier in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create catalog files for your unsigned app</pc>.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>After the files are uploaded, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign</pc> to sign the catalog files.</source>
          <target>After the files are uploaded, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sign</pc> to sign the catalog files.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Click Download to download each item:</source>
          <target>Click Download to download each item:</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>signed catalog file</source>
          <target>signed catalog file</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>default policy</source>
          <target>default policy</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>root certificate for your organization</source>
          <target>root certificate for your organization</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>When you use the Device Guard signing portal to sign a catalog file, the signing certificate is added to the default policy.</source>
          <target>When you use the Device Guard signing portal to sign a catalog file, the signing certificate is added to the default policy.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>When you download the signed catalog file, you should also download the default policy and merge this code integrity policy with your existing code integrity policies to protect machines running the catalog file.</source>
          <target>When you download the signed catalog file, you should also download the default policy and merge this code integrity policy with your existing code integrity policies to protect machines running the catalog file.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>You need to do this step to trust and run your catalog files.</source>
          <target>You need to do this step to trust and run your catalog files.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://technet.microsoft.com/library/mt463091.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see the Merging code integrity policies in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</source>
          <target>For more information, see the Merging code integrity policies in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Open the root certificate that you downloaded, and follow the steps in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Certificate Import wizard</pc> to install the certificate in your machine's certificate store.</source>
          <target>Open the root certificate that you downloaded, and follow the steps in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Certificate Import wizard</pc> to install the certificate in your machine's certificate store.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Deploy signed catalogs to your managed devices.</source>
          <target>Deploy signed catalogs to your managed devices.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://technet.microsoft.com/library/mt463091.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see Deploy catalog files with Group Policy, or Deploy catalog files with System Center Configuration Manager in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</source>
          <target>For more information, see Deploy catalog files with Group Policy, or Deploy catalog files with System Center Configuration Manager in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard deployment guide</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>