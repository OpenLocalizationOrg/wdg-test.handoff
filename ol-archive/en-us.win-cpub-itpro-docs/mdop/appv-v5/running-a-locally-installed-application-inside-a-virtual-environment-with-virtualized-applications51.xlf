<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">mdop\appv-v5\running-a-locally-installed-application-inside-a-virtual-environment-with-virtualized-applications51.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">87e8790a769ebab5291fbdfe2c888a582b1acc9e</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Running a Locally Installed Application Inside a Virtual Environment with Virtualized Applications</source>
          <target>Running a Locally Installed Application Inside a Virtual Environment with Virtualized Applications</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Running a Locally Installed Application Inside a Virtual Environment with Virtualized Applications</source>
          <target>Running a Locally Installed Application Inside a Virtual Environment with Virtualized Applications</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Running a Locally Installed Application Inside a Virtual Environment with Virtualized Applications</source>
          <target>Running a Locally Installed Application Inside a Virtual Environment with Virtualized Applications</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>You can run a locally installed application in a virtual environment, alongside applications that have been virtualized by using Microsoft Application Virtualization (App-V).</source>
          <target>You can run a locally installed application in a virtual environment, alongside applications that have been virtualized by using Microsoft Application Virtualization (App-V).</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>You might want to do this if you:</source>
          <target>You might want to do this if you:</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Want to install and run an application locally on client computers, but want to virtualize and run specific plug-ins that work with that local application.</source>
          <target>Want to install and run an application locally on client computers, but want to virtualize and run specific plug-ins that work with that local application.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Are troubleshooting an App-V client package and want to open a local application within the App-V virtual environment.</source>
          <target>Are troubleshooting an App-V client package and want to open a local application within the App-V virtual environment.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Use any of the following methods to open a local application inside the App-V virtual environment:</source>
          <target>Use any of the following methods to open a local application inside the App-V virtual environment:</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>RunVirtual registry key</source>
          <target>RunVirtual registry key</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Get-AppvClientPackage PowerShell cmdlet</source>
          <target>Get-AppvClientPackage PowerShell cmdlet</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>Command line switch /appvpid:<ph dataRef="id1" id="ph1" />PID</source>
          <target>Command line switch /appvpid:<ph dataRef="id1" id="ph1" />PID</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>Command line hook switch /appvve:<ph dataRef="id1" id="ph1" />GUID</source>
          <target>Command line hook switch /appvve:<ph dataRef="id1" id="ph1" />GUID</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Each method accomplishes essentially the same task, but some methods may be better suited for some applications than others, depending on whether the virtualized application is already running.</source>
          <target>Each method accomplishes essentially the same task, but some methods may be better suited for some applications than others, depending on whether the virtualized application is already running.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>RunVirtual registry key</source>
          <target>RunVirtual registry key</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">`RunVirtual`</data>
        </originalData>
        <segment state="initial">
          <source>To add a locally installed application to a package or to a connection group’s virtual environment, you add a subkey to the <ph dataRef="id1" id="ph1" /> registry key in the Registry Editor, as described in the following sections.</source>
          <target>To add a locally installed application to a package or to a connection group’s virtual environment, you add a subkey to the <ph dataRef="id1" id="ph1" /> registry key in the Registry Editor, as described in the following sections.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>There is no Group Policy setting available to manage this registry key, so you have to use System Center Configuration Manager or another electronic software distribution (ESD) system, or manually edit the registry.</source>
          <target>There is no Group Policy setting available to manage this registry key, so you have to use System Center Configuration Manager or another electronic software distribution (ESD) system, or manually edit the registry.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Supported methods of publishing packages when using RunVirtual</source>
          <target>Supported methods of publishing packages when using RunVirtual</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>App-V version</source>
          <target>App-V version</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Supported publishing methods</source>
          <target>Supported publishing methods</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>App-V 5.0 SP3 and App-V 5.1</source>
          <target>App-V 5.0 SP3 and App-V 5.1</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Published globally or to the user</source>
          <target>Published globally or to the user</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>App-V 5.0 through App-V 5.0 SP2</source>
          <target>App-V 5.0 through App-V 5.0 SP2</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Published globally only</source>
          <target>Published globally only</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Steps to create the subkey</source>
          <target>Steps to create the subkey</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Using the information in the following table, create a new registry key using the name of the executable file, for example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MyApp.exe</pc>.</source>
          <target>Using the information in the following table, create a new registry key using the name of the executable file, for example, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MyApp.exe</pc>.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Package publishing method</source>
          <target>Package publishing method</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Where to create the registry key</source>
          <target>Where to create the registry key</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Published globally</source>
          <target>Published globally</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\AppV\Client\RunVirtual</source>
          <target>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\AppV\Client\RunVirtual</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Example<ph dataRef="id1" id="ph1" />: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\AppV\Client\RunVirtual\MyApp.exe</source>
          <target>Example<ph dataRef="id1" id="ph1" />: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\AppV\Client\RunVirtual\MyApp.exe</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Published to the user</source>
          <target>Published to the user</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>HKEY_CURRENT_USER\SOFTWARE\Microsoft\AppV\Client\RunVirtual</source>
          <target>HKEY_CURRENT_USER\SOFTWARE\Microsoft\AppV\Client\RunVirtual</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Example<ph dataRef="id1" id="ph1" />: HKEY_CURRENT_USER \SOFTWARE\Microsoft\AppV\Client\RunVirtual\MyApp.exe</source>
          <target>Example<ph dataRef="id1" id="ph1" />: HKEY_CURRENT_USER \SOFTWARE\Microsoft\AppV\Client\RunVirtual\MyApp.exe</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Connection group can contain:</source>
          <target>Connection group can contain:</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Packages that are published just globally or just to the user</source>
          <target>Packages that are published just globally or just to the user</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Packages that are published globally and to the user</source>
          <target>Packages that are published globally and to the user</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Either HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER key, but all of the following must be true:</source>
          <target>Either HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER key, but all of the following must be true:</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>If you want to include multiple packages in the virtual environment, you must include them in an enabled connection group.</source>
          <target>If you want to include multiple packages in the virtual environment, you must include them in an enabled connection group.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Create only one subkey for one of the packages in the connection group.</source>
          <target>Create only one subkey for one of the packages in the connection group.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>If, for example, you have one package that is published globally, and another package that is published to the user, you create a subkey for either of these packages, but not both.</source>
          <target>If, for example, you have one package that is published globally, and another package that is published to the user, you create a subkey for either of these packages, but not both.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Although you create a subkey for only one of the packages, all of the packages in the connection group, plus the local application, will be available in the virtual environment.</source>
          <target>Although you create a subkey for only one of the packages, all of the packages in the connection group, plus the local application, will be available in the virtual environment.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The key under which you create the subkey must match the publishing method you used for the package.</source>
          <target>The key under which you create the subkey must match the publishing method you used for the package.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">&lt;code&gt;HKEY_CURRENT_USER\SOFTWARE\Microsoft\AppV\Client\RunVirtual&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For example, if you published the package to the user, you must create the subkey under <ph dataRef="id1" id="ph1" />.</source>
          <target>For example, if you published the package to the user, you must create the subkey under <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Set the new registry subkey’s value to the PackageId and VersionId of the package, separating the values with an underscore.</source>
          <target>Set the new registry subkey’s value to the PackageId and VersionId of the package, separating the values with an underscore.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;\_&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Syntax</pc>: <ph dataRef="id3" id="ph1" />PackageId<ph dataRef="id4" id="ph2" />VersionId</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Syntax</pc>: <ph dataRef="id3" id="ph1" />PackageId<ph dataRef="id4" id="ph2" />VersionId</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\_</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Example</pc>: 4c909996-afc9-4352-b606-0b74542a09c1<ph dataRef="id3" id="ph1" />be463724-Oct1-48f1-8604-c4bd7ca92fa</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Example</pc>: 4c909996-afc9-4352-b606-0b74542a09c1<ph dataRef="id3" id="ph1" />be463724-Oct1-48f1-8604-c4bd7ca92fa</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>The application in the previous example would produce a registry export file (.reg file) like the following:</source>
          <target>The application in the previous example would produce a registry export file (.reg file) like the following:</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Get-AppvClientPackage PowerShell cmdlet</source>
          <target>Get-AppvClientPackage PowerShell cmdlet</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start-AppVVirtualProcess</pc> cmdlet to retrieve the package name and then start a process within the specified package's virtual environment.</source>
          <target>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start-AppVVirtualProcess</pc> cmdlet to retrieve the package name and then start a process within the specified package's virtual environment.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>This method lets you launch any command within the context of an App-V package, regardless of whether the package is currently running.</source>
          <target>This method lets you launch any command within the context of an App-V package, regardless of whether the package is currently running.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Use the following example syntax, and substitute the name of your package for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Package<ph dataRef="id4" id="ph2" /></pc>:</source>
          <target>Use the following example syntax, and substitute the name of your package for <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><ph dataRef="id3" id="ph1" />Package<ph dataRef="id4" id="ph2" /></pc>:</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\*</data>
          <data id="id4">\*</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">\*</data>
          <data id="id8">\*</data>
        </originalData>
        <segment state="initial">
          <source>If you don’t know the exact name of your package, you can use the command line <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppvClientPackage <ph dataRef="id3" id="ph1" />executable<ph dataRef="id4" id="ph2" /></pc>, where <pc dataRefEnd="id6" dataRefStart="id5" id="p2">executable</pc> is the name of the application, for example: Get-AppvClientPackage <ph dataRef="id7" id="ph3" />Word<ph dataRef="id8" id="ph4" />.</source>
          <target>If you don’t know the exact name of your package, you can use the command line <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppvClientPackage <ph dataRef="id3" id="ph1" />executable<ph dataRef="id4" id="ph2" /></pc>, where <pc dataRefEnd="id6" dataRefStart="id5" id="p2">executable</pc> is the name of the application, for example: Get-AppvClientPackage <ph dataRef="id7" id="ph3" />Word<ph dataRef="id8" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>Command line switch /appvpid:<ph dataRef="id1" id="ph1" />PID</source>
          <target>Command line switch /appvpid:<ph dataRef="id1" id="ph1" />PID</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can apply the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/appvpid:<ph dataRef="id3" id="ph1" />PID<ph dataRef="id4" id="ph2" /></pc> switch to any command, which enables that command to run within a virtual process that you select by specifying its process ID (PID).</source>
          <target>You can apply the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/appvpid:<ph dataRef="id3" id="ph1" />PID<ph dataRef="id4" id="ph2" /></pc> switch to any command, which enables that command to run within a virtual process that you select by specifying its process ID (PID).</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Using this method launches the new executable in the same App-V environment as an executable that is already running.</source>
          <target>Using this method launches the new executable in the same App-V environment as an executable that is already running.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To find the process ID (PID) of your App-V process, run the command <pc dataRefEnd="id2" dataRefStart="id1" id="p1">tasklist.exe</pc> from an elevated command prompt.</source>
          <target>To find the process ID (PID) of your App-V process, run the command <pc dataRefEnd="id2" dataRefStart="id1" id="p1">tasklist.exe</pc> from an elevated command prompt.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>Command line hook switch /appvve:<ph dataRef="id1" id="ph1" />GUID</source>
          <target>Command line hook switch /appvve:<ph dataRef="id1" id="ph1" />GUID</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>This switch lets you run a local command within the virtual environment of an App-V package.</source>
          <target>This switch lets you run a local command within the virtual environment of an App-V package.</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Unlike the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/appvid</pc> switch, where the virtual environment must already be running, this switch enables you to start the virtual environment.</source>
          <target>Unlike the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/appvid</pc> switch, where the virtual environment must already be running, this switch enables you to start the virtual environment.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Syntax:</source>
          <target>Syntax:</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To get the package GUID and version GUID of your application, run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppvClientPackage</pc> cmdlet.</source>
          <target>To get the package GUID and version GUID of your application, run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppvClientPackage</pc> cmdlet.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Concatenate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/appvve</pc> switch with the following:</source>
          <target>Concatenate the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/appvve</pc> switch with the following:</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>A colon</source>
          <target>A colon</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Package GUID of the desired package</source>
          <target>Package GUID of the desired package</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>An underscore</source>
          <target>An underscore</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Version ID of the desired package</source>
          <target>Version ID of the desired package</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\*</data>
          <data id="id4">\*</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">\*</data>
          <data id="id8">\*</data>
        </originalData>
        <segment state="initial">
          <source>If you don’t know the exact name of your package, use the command line <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppvClientPackage <ph dataRef="id3" id="ph1" />executable<ph dataRef="id4" id="ph2" /></pc>, where <pc dataRefEnd="id6" dataRefStart="id5" id="p2">executable</pc> is the name of the application, for example: Get-AppvClientPackage <ph dataRef="id7" id="ph3" />Word<ph dataRef="id8" id="ph4" />.</source>
          <target>If you don’t know the exact name of your package, use the command line <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppvClientPackage <ph dataRef="id3" id="ph1" />executable<ph dataRef="id4" id="ph2" /></pc>, where <pc dataRefEnd="id6" dataRefStart="id5" id="p2">executable</pc> is the name of the application, for example: Get-AppvClientPackage <ph dataRef="id7" id="ph3" />Word<ph dataRef="id8" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>This method lets you launch any command within the context of an App-V package, regardless of whether the package is currently running.</source>
          <target>This method lets you launch any command within the context of an App-V package, regardless of whether the package is currently running.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Got a suggestion for App-V?</source>
          <target>Got a suggestion for App-V?</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://appv.uservoice.com/forums/280448-microsoft-application-virtualization)</data>
        </originalData>
        <segment state="initial">
          <source>Add or vote on suggestions <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</source>
          <target>Add or vote on suggestions <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://social.technet.microsoft.com/Forums/home?forum=mdopappv)</data>
        </originalData>
        <segment state="initial">
          <source>For App-V issues, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App-V TechNet Forum</pc>.</source>
          <target>For App-V issues, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App-V TechNet Forum</pc>.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Technical Reference for App-V 5.1</source>
          <target>Technical Reference for App-V 5.1</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>