<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">mdop\appv-v5\application-publishing-and-client-interaction51.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">55bad3965f7bd6b984b1dd381c7537d01ed6ecab</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Application Publishing and Client Interaction</source>
          <target>Application Publishing and Client Interaction</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Application Publishing and Client Interaction</source>
          <target>Application Publishing and Client Interaction</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Application Publishing and Client Interaction</source>
          <target>Application Publishing and Client Interaction</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>This article provides technical information about common App-V client operations and their integration with the local operating system.</source>
          <target>This article provides technical information about common App-V client operations and their integration with the local operating system.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>App-V package files created by the Sequencer</source>
          <target>App-V package files created by the Sequencer</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>What’s in the appv file?</source>
          <target>What’s in the appv file?</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>App-V client data storage locations</source>
          <target>App-V client data storage locations</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Package registry</source>
          <target>Package registry</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>App-V package store behavior</source>
          <target>App-V package store behavior</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Roaming registry and data</source>
          <target>Roaming registry and data</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>App-V client application lifecycle management</source>
          <target>App-V client application lifecycle management</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Integration of App-V packages</source>
          <target>Integration of App-V packages</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Dynamic configuration processing</source>
          <target>Dynamic configuration processing</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Side-by-side assemblies</source>
          <target>Side-by-side assemblies</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Client logging</source>
          <target>Client logging</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://www.microsoft.com/download/details.aspx?id=27760)</data>
        </originalData>
        <segment state="initial">
          <source>For additional reference information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Application Virtualization (App-V) Documentation Resources Download Page</pc>.</source>
          <target>For additional reference information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Application Virtualization (App-V) Documentation Resources Download Page</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>App-V package files created by the Sequencer</source>
          <target>App-V package files created by the Sequencer</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>The Sequencer creates App-V packages and produces a virtualized application.</source>
          <target>The Sequencer creates App-V packages and produces a virtualized application.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>The sequencing process creates the following files:</source>
          <target>The sequencing process creates the following files:</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>File</source>
          <target>File</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>.appv</source>
          <target>.appv</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>The primary package file, which contains the captured assets and state information from the sequencing process.</source>
          <target>The primary package file, which contains the captured assets and state information from the sequencing process.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Architecture of the package file, publishing information, and registry in a tokenized form that can be reapplied to a machine and to a specific user upon delivery.</source>
          <target>Architecture of the package file, publishing information, and registry in a tokenized form that can be reapplied to a machine and to a specific user upon delivery.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>.MSI</source>
          <target>.MSI</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Executable deployment wrapper that you can use to deploy .appv files manually or by using a third-party deployment platform.</source>
          <target>Executable deployment wrapper that you can use to deploy .appv files manually or by using a third-party deployment platform.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>_DeploymentConfig.XML</source>
          <target>_DeploymentConfig.XML</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>File used to customize the default publishing parameters for all applications in a package that is deployed globally to all users on a computer that is running the App-V client.</source>
          <target>File used to customize the default publishing parameters for all applications in a package that is deployed globally to all users on a computer that is running the App-V client.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>_UserConfig.XML</source>
          <target>_UserConfig.XML</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>File used to customize the publishing parameters for all applications in a package that is a deployed to a specific user on a computer that is running the App-V client.</source>
          <target>File used to customize the publishing parameters for all applications in a package that is a deployed to a specific user on a computer that is running the App-V client.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Report.xml</source>
          <target>Report.xml</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Summary of messages resulting from the sequencing process, including omitted drivers, files, and registry locations.</source>
          <target>Summary of messages resulting from the sequencing process, including omitted drivers, files, and registry locations.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>.CAB</source>
          <target>.CAB</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Optional:<ph dataRef="id1" id="ph1" /> Package accelerator file used to automatically rebuild a previously sequenced virtual application package.</source>
          <target>Optional:<ph dataRef="id1" id="ph1" /> Package accelerator file used to automatically rebuild a previously sequenced virtual application package.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>.appvt</source>
          <target>.appvt</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Optional:<ph dataRef="id1" id="ph1" /> Sequencer template file used to retain commonly reused Sequencer settings.</source>
          <target>Optional:<ph dataRef="id1" id="ph1" /> Sequencer template file used to retain commonly reused Sequencer settings.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkID=269810)</data>
        </originalData>
        <segment state="initial">
          <source>For information about sequencing, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Virtualization Sequencing Guide</pc>.</source>
          <target>For information about sequencing, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Virtualization Sequencing Guide</pc>.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>What’s in the appv file?</source>
          <target>What’s in the appv file?</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>The appv file is a container that stores XML and non-XML files together in a single entity.</source>
          <target>The appv file is a container that stores XML and non-XML files together in a single entity.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>This file is built from the AppX format, which is based on the Open Packaging Conventions (OPC) standard.</source>
          <target>This file is built from the AppX format, which is based on the Open Packaging Conventions (OPC) standard.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>To view the appv file contents, make a copy of the package, and then rename the copied file to a ZIP extension.</source>
          <target>To view the appv file contents, make a copy of the package, and then rename the copied file to a ZIP extension.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The appv file contains the following folder and files, which are used when creating and publishing a virtual application:</source>
          <target>The appv file contains the following folder and files, which are used when creating and publishing a virtual application:</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Name</source>
          <target>Name</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Type</source>
          <target>Type</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Root</source>
          <target>Root</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>File folder</source>
          <target>File folder</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Directory that contains the file system for the virtualized application that is captured during sequencing.</source>
          <target>Directory that contains the file system for the virtualized application that is captured during sequencing.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>[Content_Types].xml</source>
          <target>[Content_Types].xml</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>XML File</source>
          <target>XML File</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>List of the core content types in the appv file (e.g. DLL, EXE, BIN).</source>
          <target>List of the core content types in the appv file (e.g. DLL, EXE, BIN).</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>AppxBlockMap.xml</source>
          <target>AppxBlockMap.xml</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>XML File</source>
          <target>XML File</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>Layout of the appv file, which uses File, Block, and BlockMap elements that enable location and validation of files in the App-V package.</source>
          <target>Layout of the appv file, which uses File, Block, and BlockMap elements that enable location and validation of files in the App-V package.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>AppxManifest.xml</source>
          <target>AppxManifest.xml</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>XML File</source>
          <target>XML File</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Metadata for the package that contains the required information for adding, publishing, and launching the package.</source>
          <target>Metadata for the package that contains the required information for adding, publishing, and launching the package.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Includes extension points (file type associations and shortcuts) and the names and GUIDs associated with the package.</source>
          <target>Includes extension points (file type associations and shortcuts) and the names and GUIDs associated with the package.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>FilesystemMetadata.xml</source>
          <target>FilesystemMetadata.xml</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>XML File</source>
          <target>XML File</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>List of the files captured during sequencing, including attributes (e.g., directories, files, opaque directories, empty directories,and long and short names).</source>
          <target>List of the files captured during sequencing, including attributes (e.g., directories, files, opaque directories, empty directories,and long and short names).</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>PackageHistory.xml</source>
          <target>PackageHistory.xml</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>XML File</source>
          <target>XML File</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Information about the sequencing computer (operating system version, Internet Explorer version, .Net Framework version) and process (upgrade, package version).</source>
          <target>Information about the sequencing computer (operating system version, Internet Explorer version, .Net Framework version) and process (upgrade, package version).</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Registry.dat</source>
          <target>Registry.dat</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>DAT File</source>
          <target>DAT File</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Registry keys and values captured during the sequencing process for the package.</source>
          <target>Registry keys and values captured during the sequencing process for the package.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>StreamMap.xml</source>
          <target>StreamMap.xml</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>XML File</source>
          <target>XML File</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>List of files for the primary and publishing feature block.</source>
          <target>List of files for the primary and publishing feature block.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>The publishing feature block contains the ICO files and required portions of files (EXE and DLL) for publishing the package.</source>
          <target>The publishing feature block contains the ICO files and required portions of files (EXE and DLL) for publishing the package.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>When present, the primary feature block includes files that have been optimized for streaming during the sequencing process.</source>
          <target>When present, the primary feature block includes files that have been optimized for streaming during the sequencing process.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>App-V client data storage locations</source>
          <target>App-V client data storage locations</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>The App-V client performs tasks to ensure that virtual applications run properly and work like locally installed applications.</source>
          <target>The App-V client performs tasks to ensure that virtual applications run properly and work like locally installed applications.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>The process of opening and running virtual applications requires mapping from the virtual file system and registry to ensure the application has the required components of a traditional application expected by users.</source>
          <target>The process of opening and running virtual applications requires mapping from the virtual file system and registry to ensure the application has the required components of a traditional application expected by users.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>This section describes the assets that are required to run virtual applications and lists the location where App-V stores the assets.</source>
          <target>This section describes the assets that are required to run virtual applications and lists the location where App-V stores the assets.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Name</source>
          <target>Name</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Location</source>
          <target>Location</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Package Store</source>
          <target>Package Store</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>%ProgramData%\App-V</source>
          <target>%ProgramData%\App-V</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Default location for read only package files</source>
          <target>Default location for read only package files</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>Machine Catalog</source>
          <target>Machine Catalog</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>%ProgramData%\Microsoft\AppV\Client\Catalog</source>
          <target>%ProgramData%\Microsoft\AppV\Client\Catalog</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Contains per-machine configuration documents</source>
          <target>Contains per-machine configuration documents</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>User Catalog</source>
          <target>User Catalog</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>%AppData%\Microsoft\AppV\Client\Catalog</source>
          <target>%AppData%\Microsoft\AppV\Client\Catalog</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Contains per-user configuration documents</source>
          <target>Contains per-user configuration documents</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Shortcut Backups</source>
          <target>Shortcut Backups</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>%AppData%\Microsoft\AppV\Client\Integration\ShortCutBackups</source>
          <target>%AppData%\Microsoft\AppV\Client\Integration\ShortCutBackups</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Stores previous integration points that enable restore on package unpublish</source>
          <target>Stores previous integration points that enable restore on package unpublish</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Copy on Write (COW) Roaming</source>
          <target>Copy on Write (COW) Roaming</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>%AppData%\Microsoft\AppV\Client\VFS</source>
          <target>%AppData%\Microsoft\AppV\Client\VFS</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Writeable roaming location for package modification</source>
          <target>Writeable roaming location for package modification</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Copy on Write (COW) Local</source>
          <target>Copy on Write (COW) Local</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>%LocalAppData%\Microsoft\AppV\Client\VFS</source>
          <target>%LocalAppData%\Microsoft\AppV\Client\VFS</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Writeable non-roaming location for package modification</source>
          <target>Writeable non-roaming location for package modification</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Machine Registry</source>
          <target>Machine Registry</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>HKLM\Software\Microsoft\AppV</source>
          <target>HKLM\Software\Microsoft\AppV</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Contains package state information, including VReg for machine or globally published packages (Machine hive)</source>
          <target>Contains package state information, including VReg for machine or globally published packages (Machine hive)</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>User Registry</source>
          <target>User Registry</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>HKCU\Software\Microsoft\AppV</source>
          <target>HKCU\Software\Microsoft\AppV</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Contains user package state information including VReg</source>
          <target>Contains user package state information including VReg</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>User Registry Classes</source>
          <target>User Registry Classes</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>HKCU\Software\Classes\AppV</source>
          <target>HKCU\Software\Classes\AppV</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Contains additional user package state information</source>
          <target>Contains additional user package state information</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Additional details for the table are provided in the section below and throughout the document.</source>
          <target>Additional details for the table are provided in the section below and throughout the document.</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>Package store</source>
          <target>Package store</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>The App-V Client manages the applications assets mounted in the package store.</source>
          <target>The App-V Client manages the applications assets mounted in the package store.</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">`%ProgramData%\App-V`</data>
          <data id="id2">`Set-AppVClientConfiguration`</data>
          <data id="id3">`PackageInstallationRoot`</data>
          <data id="id4">`HKLM\Software\Microsoft\AppV\Client\Streaming`</data>
        </originalData>
        <segment state="initial">
          <source>This default storage location is <ph dataRef="id1" id="ph1" />, but you can configure it during or after setup by using the <ph dataRef="id2" id="ph2" /> PowerShell command, which modifies the local registry (<ph dataRef="id3" id="ph3" /> value under the <ph dataRef="id4" id="ph4" /> key).</source>
          <target>This default storage location is <ph dataRef="id1" id="ph1" />, but you can configure it during or after setup by using the <ph dataRef="id2" id="ph2" /> PowerShell command, which modifies the local registry (<ph dataRef="id3" id="ph3" /> value under the <ph dataRef="id4" id="ph4" /> key).</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>The package store must be located at a local path on the client operating system.</source>
          <target>The package store must be located at a local path on the client operating system.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>The individual packages are stored in the package store in subdirectories named for the Package GUID and Version GUID.</source>
          <target>The individual packages are stored in the package store in subdirectories named for the Package GUID and Version GUID.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Example of a path to a specific application:</source>
          <target>Example of a path to a specific application:</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](how-to-deploy-the-app-v-client-51gb18030.md)</data>
        </originalData>
        <segment state="initial">
          <source>To change the default location of the package store during setup, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to Deploy the App-V Client</pc>.</source>
          <target>To change the default location of the package store during setup, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to Deploy the App-V Client</pc>.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>Shared Content Store</source>
          <target>Shared Content Store</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>If the App-V Client is configured in Shared Content Store mode, no data is written to disk when a stream fault occurs, which means that the packages require minimal local disk space (publishing data).</source>
          <target>If the App-V Client is configured in Shared Content Store mode, no data is written to disk when a stream fault occurs, which means that the packages require minimal local disk space (publishing data).</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>The use of less disk space is highly desirable in VDI environments, where local storage can be limited, and streaming the applications from a high performance network location (such as a SAN) is preferable.</source>
          <target>The use of less disk space is highly desirable in VDI environments, where local storage can be limited, and streaming the applications from a high performance network location (such as a SAN) is preferable.</target>
        </segment>
      </unit>
      <unit id="218">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For more information on shared content store mode, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/p/?LinkId=392750</pc>.</source>
          <target>For more information on shared content store mode, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/p/?LinkId=392750</pc>.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>The machine and package store must be located on a local drive, even when you’re using Shared Content Store configurations for the App-V Client.</source>
          <target>The machine and package store must be located on a local drive, even when you’re using Shared Content Store configurations for the App-V Client.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Package catalogs</source>
          <target>Package catalogs</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>The App-V Client manages the following two file-based locations:</source>
          <target>The App-V Client manages the following two file-based locations:</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>Catalogs (user and machine).</source>
          <target>Catalogs (user and machine).</target>
        </segment>
      </unit>
      <unit id="224">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Registry locations</pc> - depends on how the package is targeted for publishing.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Registry locations</pc> - depends on how the package is targeted for publishing.</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>There is a Catalog (data store) for the computer, and a catalog for each individual user.</source>
          <target>There is a Catalog (data store) for the computer, and a catalog for each individual user.</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>The Machine Catalog stores global information applicable to all users or any user, and the User Catalog stores information applicable to a specific user.</source>
          <target>The Machine Catalog stores global information applicable to all users or any user, and the User Catalog stores information applicable to a specific user.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>The Catalog is a collection of Dynamic Configurations and manifest files; there is discrete data for both file and registry per package version.</source>
          <target>The Catalog is a collection of Dynamic Configurations and manifest files; there is discrete data for both file and registry per package version.</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>Machine catalog</source>
          <target>Machine catalog</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>Stores package documents that are available to users on the machine, when packages are added and published.</source>
          <target>Stores package documents that are available to users on the machine, when packages are added and published.</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>However, if a package is “global” at publishing time, the integrations are available to all users.</source>
          <target>However, if a package is “global” at publishing time, the integrations are available to all users.</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>If a package is non-global, the integrations are published only for specific users, but there are still global resources that are modified and visible to anyone on the client computer (e.g., the package directory is in a shared disk location).</source>
          <target>If a package is non-global, the integrations are published only for specific users, but there are still global resources that are modified and visible to anyone on the client computer (e.g., the package directory is in a shared disk location).</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>If a package is available to a user on the computer (global or non-global), the manifest is stored in the Machine Catalog.</source>
          <target>If a package is available to a user on the computer (global or non-global), the manifest is stored in the Machine Catalog.</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>When a package is published globally, there is a Dynamic Configuration file, stored in the Machine Catalog; therefore, the determination of whether a package is global is defined according to whether there is a policy file (UserDeploymentConfiguration file) in the Machine Catalog.</source>
          <target>When a package is published globally, there is a Dynamic Configuration file, stored in the Machine Catalog; therefore, the determination of whether a package is global is defined according to whether there is a policy file (UserDeploymentConfiguration file) in the Machine Catalog.</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>Default storage location</source>
          <target>Default storage location</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>This location is not the same as the Package Store location.</source>
          <target>This location is not the same as the Package Store location.</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>The Package Store is the golden or pristine copy of the package files.</source>
          <target>The Package Store is the golden or pristine copy of the package files.</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>Files in the machine catalog</source>
          <target>Files in the machine catalog</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>Manifest.xml</source>
          <target>Manifest.xml</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>DeploymentConfiguration.xml</source>
          <target>DeploymentConfiguration.xml</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>UserManifest.xml (Globally Published Package)</source>
          <target>UserManifest.xml (Globally Published Package)</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>UserDeploymentConfiguration.xml (Globally Published Package)</source>
          <target>UserDeploymentConfiguration.xml (Globally Published Package)</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>Additional machine catalog location, used when the package is part of a connection group</source>
          <target>Additional machine catalog location, used when the package is part of a connection group</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>The following location is in addition to the specific package location mentioned above:</source>
          <target>The following location is in addition to the specific package location mentioned above:</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>Additional files in the machine catalog when the package is part of a connection group</source>
          <target>Additional files in the machine catalog when the package is part of a connection group</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>PackageGroupDescriptor.xml</source>
          <target>PackageGroupDescriptor.xml</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>UserPackageGroupDescriptor.xml (globally published Connection Group)</source>
          <target>UserPackageGroupDescriptor.xml (globally published Connection Group)</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>User catalog</source>
          <target>User catalog</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>Created during the publishing process.</source>
          <target>Created during the publishing process.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Contains information used for publishing the package, and also used at launch to ensure that a package is provisioned to a specific user.</source>
          <target>Contains information used for publishing the package, and also used at launch to ensure that a package is provisioned to a specific user.</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>Created in a roaming location and includes user-specific publishing information.</source>
          <target>Created in a roaming location and includes user-specific publishing information.</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>When a package is published for a user, the policy file is stored in the User Catalog.</source>
          <target>When a package is published for a user, the policy file is stored in the User Catalog.</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>At the same time, a copy of the manifest is also stored in the User Catalog.</source>
          <target>At the same time, a copy of the manifest is also stored in the User Catalog.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>When a package entitlement is removed for a user, the relevant package files are removed from the User Catalog.</source>
          <target>When a package entitlement is removed for a user, the relevant package files are removed from the User Catalog.</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>Looking at the user catalog, an administrator can view the presence of a Dynamic Configuration file, which indicates that the package is entitled for that user.</source>
          <target>Looking at the user catalog, an administrator can view the presence of a Dynamic Configuration file, which indicates that the package is entitled for that user.</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>For roaming users, the User Catalog needs to be in a roaming or shared location to preserve the legacy App-V behavior of targeting users by default.</source>
          <target>For roaming users, the User Catalog needs to be in a roaming or shared location to preserve the legacy App-V behavior of targeting users by default.</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>Entitlement and policy are tied to a user, not a computer, so they should roam with the user once they are provisioned.</source>
          <target>Entitlement and policy are tied to a user, not a computer, so they should roam with the user once they are provisioned.</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>Default storage location</source>
          <target>Default storage location</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>Files in the user catalog</source>
          <target>Files in the user catalog</target>
        </segment>
      </unit>
      <unit id="261">
        <segment state="initial">
          <source>UserManifest.xml</source>
          <target>UserManifest.xml</target>
        </segment>
      </unit>
      <unit id="262">
        <segment state="initial">
          <source>DynamicConfiguration.xml or UserDeploymentConfiguration.xml</source>
          <target>DynamicConfiguration.xml or UserDeploymentConfiguration.xml</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>Additional user catalog location, used when the package is part of a connection group</source>
          <target>Additional user catalog location, used when the package is part of a connection group</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source>The following location is in addition to the specific package location mentioned above:</source>
          <target>The following location is in addition to the specific package location mentioned above:</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>Additional file in the machine catalog when the package is part of a connection group</source>
          <target>Additional file in the machine catalog when the package is part of a connection group</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>Shortcut backups</source>
          <target>Shortcut backups</target>
        </segment>
      </unit>
      <unit id="267">
        <originalData>
          <data id="id1">`%AppData%\Microsoft\AppV\Client\Integration\ShortCutBackups.`</data>
        </originalData>
        <segment state="initial">
          <source>During the publishing process, the App-V Client backs up any shortcuts and integration points to <ph dataRef="id1" id="ph1" /> This backup enables the restoration of these integration points to the previous versions when the package is unpublished.</source>
          <target>During the publishing process, the App-V Client backs up any shortcuts and integration points to <ph dataRef="id1" id="ph1" /> This backup enables the restoration of these integration points to the previous versions when the package is unpublished.</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source>Copy on Write files</source>
          <target>Copy on Write files</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source>The Package Store contains a pristine copy of the package files that have been streamed from the publishing server.</source>
          <target>The Package Store contains a pristine copy of the package files that have been streamed from the publishing server.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>During normal operation of an App-V application, the user or service may require changes to the files.</source>
          <target>During normal operation of an App-V application, the user or service may require changes to the files.</target>
        </segment>
      </unit>
      <unit id="271">
        <segment state="initial">
          <source>These changes are not made in the package store in order to preserve your ability to repair the application, which removes these changes.</source>
          <target>These changes are not made in the package store in order to preserve your ability to repair the application, which removes these changes.</target>
        </segment>
      </unit>
      <unit id="272">
        <segment state="initial">
          <source>These locations, called Copy on Write (COW), support both roaming and non-roaming locations.</source>
          <target>These locations, called Copy on Write (COW), support both roaming and non-roaming locations.</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>The location where the modifications are stored depends where the application has been programmed to write changes to in a native experience.</source>
          <target>The location where the modifications are stored depends where the application has been programmed to write changes to in a native experience.</target>
        </segment>
      </unit>
      <unit id="274">
        <segment state="initial">
          <source>COW roaming</source>
          <target>COW roaming</target>
        </segment>
      </unit>
      <unit id="275">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>The COW Roaming location described above stores changes to files and directories that are targeted to the typical %AppData% location or <ph dataRef="id1" id="ph1" />Users<ph dataRef="id2" id="ph2" />{username}<ph dataRef="id3" id="ph3" />AppData<ph dataRef="id4" id="ph4" />Roaming location.</source>
          <target>The COW Roaming location described above stores changes to files and directories that are targeted to the typical %AppData% location or <ph dataRef="id1" id="ph1" />Users<ph dataRef="id2" id="ph2" />{username}<ph dataRef="id3" id="ph3" />AppData<ph dataRef="id4" id="ph4" />Roaming location.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source>These directories and files are then roamed based on the operating system settings.</source>
          <target>These directories and files are then roamed based on the operating system settings.</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source>COW local</source>
          <target>COW local</target>
        </segment>
      </unit>
      <unit id="278">
        <segment state="initial">
          <source>The COW Local location is similar to the roaming location, but the directories and files are not roamed to other computers, even if roaming support has been configured.</source>
          <target>The COW Local location is similar to the roaming location, but the directories and files are not roamed to other computers, even if roaming support has been configured.</target>
        </segment>
      </unit>
      <unit id="279">
        <segment state="initial">
          <source>The COW Local location described above stores changes applicable to typical windows and not the %AppData% location.</source>
          <target>The COW Local location described above stores changes applicable to typical windows and not the %AppData% location.</target>
        </segment>
      </unit>
      <unit id="280">
        <segment state="initial">
          <source>The directories listed will vary but there will be two locations for any typical Windows locations (e.g. Common AppData and Common AppDataS).</source>
          <target>The directories listed will vary but there will be two locations for any typical Windows locations (e.g. Common AppData and Common AppDataS).</target>
        </segment>
      </unit>
      <unit id="281">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">S</pc> signifies the restricted location when the virtual service requests the change as a different elevated user from the logged on users.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">S</pc> signifies the restricted location when the virtual service requests the change as a different elevated user from the logged on users.</target>
        </segment>
      </unit>
      <unit id="282">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The non-<pc dataRefEnd="id2" dataRefStart="id1" id="p1">S</pc> location stores user based changes.</source>
          <target>The non-<pc dataRefEnd="id2" dataRefStart="id1" id="p1">S</pc> location stores user based changes.</target>
        </segment>
      </unit>
      <unit id="283">
        <segment state="initial">
          <source>Package registry</source>
          <target>Package registry</target>
        </segment>
      </unit>
      <unit id="284">
        <segment state="initial">
          <source>Before an application can access the package registry data, the App-V Client must make the package registry data available to the applications.</source>
          <target>Before an application can access the package registry data, the App-V Client must make the package registry data available to the applications.</target>
        </segment>
      </unit>
      <unit id="285">
        <segment state="initial">
          <source>The App-V Client uses the real registry as a backing store for all registry data.</source>
          <target>The App-V Client uses the real registry as a backing store for all registry data.</target>
        </segment>
      </unit>
      <unit id="286">
        <originalData>
          <data id="id1">`%ProgramData%\Microsoft\AppV\Client\VREG\{Version GUID}.dat`</data>
        </originalData>
        <segment state="initial">
          <source>When a new package is added to the App-V Client, a copy of the REGISTRY.DAT file from the package is created at <ph dataRef="id1" id="ph1" />.</source>
          <target>When a new package is added to the App-V Client, a copy of the REGISTRY.DAT file from the package is created at <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="287">
        <segment state="initial">
          <source>The name of the file is the version GUID with the .DAT extension.</source>
          <target>The name of the file is the version GUID with the .DAT extension.</target>
        </segment>
      </unit>
      <unit id="288">
        <segment state="initial">
          <source>The reason this copy is made is to ensure that the actual hive file in the package is never in use, which would prevent the removal of the package at a later time.</source>
          <target>The reason this copy is made is to ensure that the actual hive file in the package is never in use, which would prevent the removal of the package at a later time.</target>
        </segment>
      </unit>
      <unit id="289">
        <segment state="initial">
          <source>Registry.dat from Package Store</source>
          <target>Registry.dat from Package Store</target>
        </segment>
      </unit>
      <unit id="290">
        <originalData>
          <data id="id1">\{</data>
        </originalData>
        <segment state="initial">
          <source>%ProgramData%\Microsoft\AppV\Client\Vreg<ph dataRef="id1" id="ph1" />VersionGuid}.dat</source>
          <target>%ProgramData%\Microsoft\AppV\Client\Vreg<ph dataRef="id1" id="ph1" />VersionGuid}.dat</target>
        </segment>
      </unit>
      <unit id="291">
        <originalData>
          <data id="id1">`HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\AppV\Client\Packages\PackageGuid\Versions\VersionGuid\REGISTRY`</data>
        </originalData>
        <segment state="initial">
          <source>When the first application from the package is launched on the client, the client stages or copies the contents out of the hive file, re-creating the package registry data in an alternate location <ph dataRef="id1" id="ph1" />.</source>
          <target>When the first application from the package is launched on the client, the client stages or copies the contents out of the hive file, re-creating the package registry data in an alternate location <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="292">
        <segment state="initial">
          <source>The staged registry data has two distinct types of machine data and user data.</source>
          <target>The staged registry data has two distinct types of machine data and user data.</target>
        </segment>
      </unit>
      <unit id="293">
        <segment state="initial">
          <source>Machine data is shared across all users on the machine.</source>
          <target>Machine data is shared across all users on the machine.</target>
        </segment>
      </unit>
      <unit id="294">
        <originalData>
          <data id="id1">`HKCU\Software\Microsoft\AppV\Client\Packages\PackageGuid\Registry\User`</data>
        </originalData>
        <segment state="initial">
          <source>User data is staged for each user to a userspecific location <ph dataRef="id1" id="ph1" />.</source>
          <target>User data is staged for each user to a userspecific location <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="295">
        <segment state="initial">
          <source>The machine data is ultimately removed at package removal time, and the user data is removed on a user unpublish operation.</source>
          <target>The machine data is ultimately removed at package removal time, and the user data is removed on a user unpublish operation.</target>
        </segment>
      </unit>
      <unit id="296">
        <segment state="initial">
          <source>Package registry staging vs. connection group registry staging</source>
          <target>Package registry staging vs. connection group registry staging</target>
        </segment>
      </unit>
      <unit id="297">
        <segment state="initial">
          <source>When connection groups are present, the previous process of staging the registry holds true, but instead of having one hive file to process, there are more than one.</source>
          <target>When connection groups are present, the previous process of staging the registry holds true, but instead of having one hive file to process, there are more than one.</target>
        </segment>
      </unit>
      <unit id="298">
        <segment state="initial">
          <source>The files are processed in the order in which they appear in the connection group XML, with the first writer winning any conflicts.</source>
          <target>The files are processed in the order in which they appear in the connection group XML, with the first writer winning any conflicts.</target>
        </segment>
      </unit>
      <unit id="299">
        <segment state="initial">
          <source>The staged registry persists the same way as in the single package case.</source>
          <target>The staged registry persists the same way as in the single package case.</target>
        </segment>
      </unit>
      <unit id="300">
        <segment state="initial">
          <source>Staged user registry data remains for the connection group until it is disabled; staged machine registry data is removed on connection group removal.</source>
          <target>Staged user registry data remains for the connection group until it is disabled; staged machine registry data is removed on connection group removal.</target>
        </segment>
      </unit>
      <unit id="301">
        <segment state="initial">
          <source>Virtual registry</source>
          <target>Virtual registry</target>
        </segment>
      </unit>
      <unit id="302">
        <segment state="initial">
          <source>The purpose of the virtual registry (VREG) is to provide a single merged view of the package registry and the native registry to applications.</source>
          <target>The purpose of the virtual registry (VREG) is to provide a single merged view of the package registry and the native registry to applications.</target>
        </segment>
      </unit>
      <unit id="303">
        <segment state="initial">
          <source>It also provides copy-on-write (COW) functionality – that is any changes made to the registry from the context of a virtual process are made to a separate COW location.</source>
          <target>It also provides copy-on-write (COW) functionality – that is any changes made to the registry from the context of a virtual process are made to a separate COW location.</target>
        </segment>
      </unit>
      <unit id="304">
        <originalData>
          <data id="id1">&amp;gt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>This means that the VREG must combine up to three separate registry locations into a single view based on the populated locations in the registry COW -<ph dataRef="id1" id="ph1" /> package -<ph dataRef="id2" id="ph2" /> native.</source>
          <target>This means that the VREG must combine up to three separate registry locations into a single view based on the populated locations in the registry COW -<ph dataRef="id1" id="ph1" /> package -<ph dataRef="id2" id="ph2" /> native.</target>
        </segment>
      </unit>
      <unit id="305">
        <segment state="initial">
          <source>When a request is made for a registry data it will locate in order until it finds the data it was requesting.</source>
          <target>When a request is made for a registry data it will locate in order until it finds the data it was requesting.</target>
        </segment>
      </unit>
      <unit id="306">
        <segment state="initial">
          <source>Meaning if there is a value stored in a COW location it will not proceed to other locations, however, if there is no data in the COW location it will proceed to the Package and then Native location until it finds the appropriate data.</source>
          <target>Meaning if there is a value stored in a COW location it will not proceed to other locations, however, if there is no data in the COW location it will proceed to the Package and then Native location until it finds the appropriate data.</target>
        </segment>
      </unit>
      <unit id="307">
        <segment state="initial">
          <source>Registry locations</source>
          <target>Registry locations</target>
        </segment>
      </unit>
      <unit id="308">
        <segment state="initial">
          <source>There are two package registry locations and two connection group locations where the App-V Client stores registry information, depending on whether the Package is published individually or as part of a connection group.</source>
          <target>There are two package registry locations and two connection group locations where the App-V Client stores registry information, depending on whether the Package is published individually or as part of a connection group.</target>
        </segment>
      </unit>
      <unit id="309">
        <segment state="initial">
          <source>There are three COW locations for packages and three for connection groups, which are created and managed by the VREG.</source>
          <target>There are three COW locations for packages and three for connection groups, which are created and managed by the VREG.</target>
        </segment>
      </unit>
      <unit id="310">
        <segment state="initial">
          <source>Settings for packages and connection groups are not shared:</source>
          <target>Settings for packages and connection groups are not shared:</target>
        </segment>
      </unit>
      <unit id="311">
        <segment state="initial">
          <source>Single Package VReg:</source>
          <target>Single Package VReg:</target>
        </segment>
      </unit>
      <unit id="312">
        <segment state="initial">
          <source>Location</source>
          <target>Location</target>
        </segment>
      </unit>
      <unit id="313">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="314">
        <segment state="initial">
          <source>COW</source>
          <target>COW</target>
        </segment>
      </unit>
      <unit id="315">
        <segment state="initial">
          <source>Machine Registry\Client\Packages\PkgGUID\REGISTRY (Only elevate process can write)</source>
          <target>Machine Registry\Client\Packages\PkgGUID\REGISTRY (Only elevate process can write)</target>
        </segment>
      </unit>
      <unit id="316">
        <segment state="initial">
          <source>User Registry\Client\Packages\PkgGUID\REGISTRY (User Roaming anything written under HKCU except Software\Classes</source>
          <target>User Registry\Client\Packages\PkgGUID\REGISTRY (User Roaming anything written under HKCU except Software\Classes</target>
        </segment>
      </unit>
      <unit id="317">
        <segment state="initial">
          <source>User Registry Classes\Client\Packages\PkgGUID\REGISTRY (HKCU\Software\Classes writes and HKLM for non elevated process)</source>
          <target>User Registry Classes\Client\Packages\PkgGUID\REGISTRY (HKCU\Software\Classes writes and HKLM for non elevated process)</target>
        </segment>
      </unit>
      <unit id="318">
        <segment state="initial">
          <source>Package</source>
          <target>Package</target>
        </segment>
      </unit>
      <unit id="319">
        <segment state="initial">
          <source>Machine Registry\Client\Packages\PkgGUID\Versions\VerGuid\Registry\Machine</source>
          <target>Machine Registry\Client\Packages\PkgGUID\Versions\VerGuid\Registry\Machine</target>
        </segment>
      </unit>
      <unit id="320">
        <segment state="initial">
          <source>User Registry Classes\Client\Packages\PkgGUID\Versions\VerGUID\Registry</source>
          <target>User Registry Classes\Client\Packages\PkgGUID\Versions\VerGUID\Registry</target>
        </segment>
      </unit>
      <unit id="321">
        <segment state="initial">
          <source>Native</source>
          <target>Native</target>
        </segment>
      </unit>
      <unit id="322">
        <segment state="initial">
          <source>Native application registry location</source>
          <target>Native application registry location</target>
        </segment>
      </unit>
      <unit id="323">
        <segment state="initial">
          <source>Connection Group VReg:</source>
          <target>Connection Group VReg:</target>
        </segment>
      </unit>
      <unit id="324">
        <segment state="initial">
          <source>Location</source>
          <target>Location</target>
        </segment>
      </unit>
      <unit id="325">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="326">
        <segment state="initial">
          <source>COW</source>
          <target>COW</target>
        </segment>
      </unit>
      <unit id="327">
        <segment state="initial">
          <source>Machine Registry\Client\PackageGroups\GrpGUID\REGISTRY (only elevate process can write)</source>
          <target>Machine Registry\Client\PackageGroups\GrpGUID\REGISTRY (only elevate process can write)</target>
        </segment>
      </unit>
      <unit id="328">
        <segment state="initial">
          <source>User Registry\Client\PackageGroups\GrpGUID\REGISTRY (Anything written to HKCU except Software\Classes</source>
          <target>User Registry\Client\PackageGroups\GrpGUID\REGISTRY (Anything written to HKCU except Software\Classes</target>
        </segment>
      </unit>
      <unit id="329">
        <segment state="initial">
          <source>User Registry Classes\Client\PackageGroups\GrpGUID\REGISTRY</source>
          <target>User Registry Classes\Client\PackageGroups\GrpGUID\REGISTRY</target>
        </segment>
      </unit>
      <unit id="330">
        <segment state="initial">
          <source>Package</source>
          <target>Package</target>
        </segment>
      </unit>
      <unit id="331">
        <segment state="initial">
          <source>Machine Registry\Client\PackageGroups\GrpGUID\Versions\VerGUID\REGISTRY</source>
          <target>Machine Registry\Client\PackageGroups\GrpGUID\Versions\VerGUID\REGISTRY</target>
        </segment>
      </unit>
      <unit id="332">
        <segment state="initial">
          <source>User Registry Classes\Client\PackageGroups\GrpGUID\Versions\VerGUID\REGISTRY</source>
          <target>User Registry Classes\Client\PackageGroups\GrpGUID\Versions\VerGUID\REGISTRY</target>
        </segment>
      </unit>
      <unit id="333">
        <segment state="initial">
          <source>Native</source>
          <target>Native</target>
        </segment>
      </unit>
      <unit id="334">
        <segment state="initial">
          <source>Native application registry location</source>
          <target>Native application registry location</target>
        </segment>
      </unit>
      <unit id="335">
        <segment state="initial">
          <source>There are two COW locations for HKLM; elevated and non-elevated processes.</source>
          <target>There are two COW locations for HKLM; elevated and non-elevated processes.</target>
        </segment>
      </unit>
      <unit id="336">
        <segment state="initial">
          <source>Elevated processes always write HKLM changes to the secure COW under HKLM.</source>
          <target>Elevated processes always write HKLM changes to the secure COW under HKLM.</target>
        </segment>
      </unit>
      <unit id="337">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>Non-elevated processes always write HKLM changes to the non-secure COW under HKCU<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Classes.</source>
          <target>Non-elevated processes always write HKLM changes to the non-secure COW under HKCU<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Classes.</target>
        </segment>
      </unit>
      <unit id="338">
        <segment state="initial">
          <source>When an application reads changes from HKLM, elevated processes will read changes from the secure COW under HKLM.</source>
          <target>When an application reads changes from HKLM, elevated processes will read changes from the secure COW under HKLM.</target>
        </segment>
      </unit>
      <unit id="339">
        <segment state="initial">
          <source>Non-elevated reads from both, favoring the changes made in the unsecure COW first.</source>
          <target>Non-elevated reads from both, favoring the changes made in the unsecure COW first.</target>
        </segment>
      </unit>
      <unit id="340">
        <segment state="initial">
          <source>Pass-through keys</source>
          <target>Pass-through keys</target>
        </segment>
      </unit>
      <unit id="341">
        <segment state="initial">
          <source>Pass-through keys enable an administrator to configure certain keys so they can only be read from the native registry, bypassing the Package and COW locations.</source>
          <target>Pass-through keys enable an administrator to configure certain keys so they can only be read from the native registry, bypassing the Package and COW locations.</target>
        </segment>
      </unit>
      <unit id="342">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">`HKLM\Software\Microsoft\AppV\Subsystem\VirtualRegistry`</data>
        </originalData>
        <segment state="initial">
          <source>Pass-through locations are global to the machine (not package specific) and can be configured by adding the path to the key, which should be treated as pass-through to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">REG<ph dataRef="id3" id="ph1" />MULTI<ph dataRef="id4" id="ph2" />SZ</pc> value called <pc dataRefEnd="id6" dataRefStart="id5" id="p2">PassThroughPaths</pc> of the key <ph dataRef="id7" id="ph3" />.</source>
          <target>Pass-through locations are global to the machine (not package specific) and can be configured by adding the path to the key, which should be treated as pass-through to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">REG<ph dataRef="id3" id="ph1" />MULTI<ph dataRef="id4" id="ph2" />SZ</pc> value called <pc dataRefEnd="id6" dataRefStart="id5" id="p2">PassThroughPaths</pc> of the key <ph dataRef="id7" id="ph3" />.</target>
        </segment>
      </unit>
      <unit id="343">
        <segment state="initial">
          <source>Any key that appears under this multi-string value (and their children) will be treated as pass-through.</source>
          <target>Any key that appears under this multi-string value (and their children) will be treated as pass-through.</target>
        </segment>
      </unit>
      <unit id="344">
        <segment state="initial">
          <source>The following locations are configured as pass-through locations by default:</source>
          <target>The following locations are configured as pass-through locations by default:</target>
        </segment>
      </unit>
      <unit id="345">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
          <data id="id10">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Classes<ph dataRef="id5" id="ph5" />Local Settings<ph dataRef="id6" id="ph6" />Software<ph dataRef="id7" id="ph7" />Microsoft<ph dataRef="id8" id="ph8" />Windows<ph dataRef="id9" id="ph9" />CurrentVersion<ph dataRef="id10" id="ph10" />AppModel</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Classes<ph dataRef="id5" id="ph5" />Local Settings<ph dataRef="id6" id="ph6" />Software<ph dataRef="id7" id="ph7" />Microsoft<ph dataRef="id8" id="ph8" />Windows<ph dataRef="id9" id="ph9" />CurrentVersion<ph dataRef="id10" id="ph10" />AppModel</target>
        </segment>
      </unit>
      <unit id="346">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
          <data id="id10">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Classes<ph dataRef="id5" id="ph5" />Local Settings<ph dataRef="id6" id="ph6" />Software<ph dataRef="id7" id="ph7" />Microsoft<ph dataRef="id8" id="ph8" />Windows<ph dataRef="id9" id="ph9" />CurrentVersion<ph dataRef="id10" id="ph10" />AppModel</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Classes<ph dataRef="id5" id="ph5" />Local Settings<ph dataRef="id6" id="ph6" />Software<ph dataRef="id7" id="ph7" />Microsoft<ph dataRef="id8" id="ph8" />Windows<ph dataRef="id9" id="ph9" />CurrentVersion<ph dataRef="id10" id="ph10" />AppModel</target>
        </segment>
      </unit>
      <unit id="347">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />Windows<ph dataRef="id6" id="ph6" />CurrentVersion<ph dataRef="id7" id="ph7" />WINEVT</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />Windows<ph dataRef="id6" id="ph6" />CurrentVersion<ph dataRef="id7" id="ph7" />WINEVT</target>
        </segment>
      </unit>
      <unit id="348">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SYSTEM<ph dataRef="id4" id="ph4" />CurrentControlSet<ph dataRef="id5" id="ph5" />services<ph dataRef="id6" id="ph6" />eventlog<ph dataRef="id7" id="ph7" />Application</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SYSTEM<ph dataRef="id4" id="ph4" />CurrentControlSet<ph dataRef="id5" id="ph5" />services<ph dataRef="id6" id="ph6" />eventlog<ph dataRef="id7" id="ph7" />Application</target>
        </segment>
      </unit>
      <unit id="349">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SYSTEM<ph dataRef="id4" id="ph4" />CurrentControlSet<ph dataRef="id5" id="ph5" />Control<ph dataRef="id6" id="ph6" />WMI<ph dataRef="id7" id="ph7" />Autologger</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SYSTEM<ph dataRef="id4" id="ph4" />CurrentControlSet<ph dataRef="id5" id="ph5" />Control<ph dataRef="id6" id="ph6" />WMI<ph dataRef="id7" id="ph7" />Autologger</target>
        </segment>
      </unit>
      <unit id="350">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />Windows<ph dataRef="id6" id="ph6" />CurrentVersion<ph dataRef="id7" id="ph7" />Internet Settings</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />Windows<ph dataRef="id6" id="ph6" />CurrentVersion<ph dataRef="id7" id="ph7" />Internet Settings</target>
        </segment>
      </unit>
      <unit id="351">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />Windows NT<ph dataRef="id6" id="ph6" />CurrentVersion<ph dataRef="id7" id="ph7" />Perflib</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />Windows NT<ph dataRef="id6" id="ph6" />CurrentVersion<ph dataRef="id7" id="ph7" />Perflib</target>
        </segment>
      </unit>
      <unit id="352">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Policies</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />LOCAL<ph dataRef="id2" id="ph2" />MACHINE<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Policies</target>
        </segment>
      </unit>
      <unit id="353">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Policies</source>
          <target>HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />SOFTWARE<ph dataRef="id4" id="ph4" />Policies</target>
        </segment>
      </unit>
      <unit id="354">
        <segment state="initial">
          <source>The purpose of Pass-through keys is to ensure that a virtual application does not write registry data in the VReg that is required for non-virtual applications for successful operation or integration.</source>
          <target>The purpose of Pass-through keys is to ensure that a virtual application does not write registry data in the VReg that is required for non-virtual applications for successful operation or integration.</target>
        </segment>
      </unit>
      <unit id="355">
        <segment state="initial">
          <source>The Policies key ensures that Group Policy based settings set by the administrator are utilized and not per package settings.</source>
          <target>The Policies key ensures that Group Policy based settings set by the administrator are utilized and not per package settings.</target>
        </segment>
      </unit>
      <unit id="356">
        <segment state="initial">
          <source>The AppModel key is required for integration with Windows Modern UI based applications.</source>
          <target>The AppModel key is required for integration with Windows Modern UI based applications.</target>
        </segment>
      </unit>
      <unit id="357">
        <segment state="initial">
          <source>It is recommend that administers do not modify any of the default pass-through keys, but in some instances, based on application behavior may require adding additional pass-through keys.</source>
          <target>It is recommend that administers do not modify any of the default pass-through keys, but in some instances, based on application behavior may require adding additional pass-through keys.</target>
        </segment>
      </unit>
      <unit id="358">
        <segment state="initial">
          <source>App-V package store behavior</source>
          <target>App-V package store behavior</target>
        </segment>
      </unit>
      <unit id="359">
        <segment state="initial">
          <source>App-V 5 manages the Package Store, which is the location where the expanded asset files from the appv file are stored.</source>
          <target>App-V 5 manages the Package Store, which is the location where the expanded asset files from the appv file are stored.</target>
        </segment>
      </unit>
      <unit id="360">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>By default, this location is stored at %ProgramData%<ph dataRef="id1" id="ph1" />App-V, and is limited in terms of storage capabilities only by free disk space.</source>
          <target>By default, this location is stored at %ProgramData%<ph dataRef="id1" id="ph1" />App-V, and is limited in terms of storage capabilities only by free disk space.</target>
        </segment>
      </unit>
      <unit id="361">
        <segment state="initial">
          <source>The package store is organized by the GUIDs for the package and version as mentioned in the previous section.</source>
          <target>The package store is organized by the GUIDs for the package and version as mentioned in the previous section.</target>
        </segment>
      </unit>
      <unit id="362">
        <segment state="initial">
          <source>Add packages</source>
          <target>Add packages</target>
        </segment>
      </unit>
      <unit id="363">
        <segment state="initial">
          <source>App-V Packages are staged upon addition to the computer with the App-V Client.</source>
          <target>App-V Packages are staged upon addition to the computer with the App-V Client.</target>
        </segment>
      </unit>
      <unit id="364">
        <segment state="initial">
          <source>The App-V Client provides on-demand staging.</source>
          <target>The App-V Client provides on-demand staging.</target>
        </segment>
      </unit>
      <unit id="365">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>During publishing or a manual Add-AppVClientPackage, the data structure is built in the package store (c:<ph dataRef="id1" id="ph1" />programdata<ph dataRef="id2" id="ph2" />App-V<ph dataRef="id3" id="ph3" />{PkgGUID}<ph dataRef="id4" id="ph4" />{VerGUID}).</source>
          <target>During publishing or a manual Add-AppVClientPackage, the data structure is built in the package store (c:<ph dataRef="id1" id="ph1" />programdata<ph dataRef="id2" id="ph2" />App-V<ph dataRef="id3" id="ph3" />{PkgGUID}<ph dataRef="id4" id="ph4" />{VerGUID}).</target>
        </segment>
      </unit>
      <unit id="366">
        <segment state="initial">
          <source>The package files identified in the publishing block defined in the StreamMap.xml are added to the system and the top level folders and child files staged to ensure proper application assets exist at launch.</source>
          <target>The package files identified in the publishing block defined in the StreamMap.xml are added to the system and the top level folders and child files staged to ensure proper application assets exist at launch.</target>
        </segment>
      </unit>
      <unit id="367">
        <segment state="initial">
          <source>Mounting packages</source>
          <target>Mounting packages</target>
        </segment>
      </unit>
      <unit id="368">
        <originalData>
          <data id="id1">`Mount-AppVClientPackage`</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
        </originalData>
        <segment state="initial">
          <source>Packages can be explicitly loaded using the PowerShell <ph dataRef="id1" id="ph1" /> or by using the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">App-V Client UI</pc> to download a package.</source>
          <target>Packages can be explicitly loaded using the PowerShell <ph dataRef="id1" id="ph1" /> or by using the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">App-V Client UI</pc> to download a package.</target>
        </segment>
      </unit>
      <unit id="369">
        <segment state="initial">
          <source>This operation completely loads the entire package into the package store.</source>
          <target>This operation completely loads the entire package into the package store.</target>
        </segment>
      </unit>
      <unit id="370">
        <segment state="initial">
          <source>Streaming packages</source>
          <target>Streaming packages</target>
        </segment>
      </unit>
      <unit id="371">
        <segment state="initial">
          <source>The App-V Client can be configured to change the default behavior of streaming.</source>
          <target>The App-V Client can be configured to change the default behavior of streaming.</target>
        </segment>
      </unit>
      <unit id="372">
        <originalData>
          <data id="id1">`HKEY_LOCAL_MAcHINE\Software\Microsoft\AppV\Client\Streaming`</data>
        </originalData>
        <segment state="initial">
          <source>All streaming policies are stored under the following registry key: <ph dataRef="id1" id="ph1" />.</source>
          <target>All streaming policies are stored under the following registry key: <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="373">
        <originalData>
          <data id="id1">`Set-AppvClientConfiguration`</data>
        </originalData>
        <segment state="initial">
          <source>Policies are set using the PowerShell cmdlet <ph dataRef="id1" id="ph1" />.</source>
          <target>Policies are set using the PowerShell cmdlet <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="374">
        <segment state="initial">
          <source>The following policies apply to Streaming:</source>
          <target>The following policies apply to Streaming:</target>
        </segment>
      </unit>
      <unit id="375">
        <segment state="initial">
          <source>Policy</source>
          <target>Policy</target>
        </segment>
      </unit>
      <unit id="376">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="377">
        <segment state="initial">
          <source>AllowHighCostLaunch</source>
          <target>AllowHighCostLaunch</target>
        </segment>
      </unit>
      <unit id="378">
        <segment state="initial">
          <source>On Windows 8 and later, it allows streaming over 3G and cellular networks</source>
          <target>On Windows 8 and later, it allows streaming over 3G and cellular networks</target>
        </segment>
      </unit>
      <unit id="379">
        <segment state="initial">
          <source>AutoLoad</source>
          <target>AutoLoad</target>
        </segment>
      </unit>
      <unit id="380">
        <segment state="initial">
          <source>Specifies the Background Load setting:</source>
          <target>Specifies the Background Load setting:</target>
        </segment>
      </unit>
      <unit id="381">
        <originalData>
          <data id="id1">&lt;/strong&gt; -</data>
        </originalData>
        <segment state="initial">
          <source>0<ph dataRef="id1" id="ph1" /> Disabled</source>
          <target>0<ph dataRef="id1" id="ph1" /> Disabled</target>
        </segment>
      </unit>
      <unit id="382">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>1<ph dataRef="id1" id="ph1" /> – Previously Used Packages only</source>
          <target>1<ph dataRef="id1" id="ph1" /> – Previously Used Packages only</target>
        </segment>
      </unit>
      <unit id="383">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>2<ph dataRef="id1" id="ph1" /> – All Packages</source>
          <target>2<ph dataRef="id1" id="ph1" /> – All Packages</target>
        </segment>
      </unit>
      <unit id="384">
        <segment state="initial">
          <source>PackageInstallationRoot</source>
          <target>PackageInstallationRoot</target>
        </segment>
      </unit>
      <unit id="385">
        <segment state="initial">
          <source>The root folder for the package store in the local machine</source>
          <target>The root folder for the package store in the local machine</target>
        </segment>
      </unit>
      <unit id="386">
        <segment state="initial">
          <source>PackageSourceRoot</source>
          <target>PackageSourceRoot</target>
        </segment>
      </unit>
      <unit id="387">
        <segment state="initial">
          <source>The root override where packages should be streamed from</source>
          <target>The root override where packages should be streamed from</target>
        </segment>
      </unit>
      <unit id="388">
        <segment state="initial">
          <source>SharedContentStoreMode</source>
          <target>SharedContentStoreMode</target>
        </segment>
      </unit>
      <unit id="389">
        <segment state="initial">
          <source>Enables the use of Shared Content Store for VDI scenarios</source>
          <target>Enables the use of Shared Content Store for VDI scenarios</target>
        </segment>
      </unit>
      <unit id="390">
        <segment state="initial">
          <source>These settings affect the behavior of streaming App-V package assets to the client.</source>
          <target>These settings affect the behavior of streaming App-V package assets to the client.</target>
        </segment>
      </unit>
      <unit id="391">
        <segment state="initial">
          <source>By default, App-V only downloads the assets required after downloading the initial publishing and primary feature blocks.</source>
          <target>By default, App-V only downloads the assets required after downloading the initial publishing and primary feature blocks.</target>
        </segment>
      </unit>
      <unit id="392">
        <segment state="initial">
          <source>There are three specific behaviors around streaming packages that must be explained:</source>
          <target>There are three specific behaviors around streaming packages that must be explained:</target>
        </segment>
      </unit>
      <unit id="393">
        <segment state="initial">
          <source>Background Streaming</source>
          <target>Background Streaming</target>
        </segment>
      </unit>
      <unit id="394">
        <segment state="initial">
          <source>Optimized Streaming</source>
          <target>Optimized Streaming</target>
        </segment>
      </unit>
      <unit id="395">
        <segment state="initial">
          <source>Stream Faults</source>
          <target>Stream Faults</target>
        </segment>
      </unit>
      <unit id="396">
        <segment state="initial">
          <source>Background streaming</source>
          <target>Background streaming</target>
        </segment>
      </unit>
      <unit id="397">
        <originalData>
          <data id="id1">`Get-AppvClientConfiguration`</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
        </originalData>
        <segment state="initial">
          <source>The PowerShell cmdlet <ph dataRef="id1" id="ph1" /> can be used to determine the current mode for background streaming with the AutoLoad setting and modified with the cmdlet Set-AppvClientConfiguration or from the registry (HKLM<ph dataRef="id2" id="ph2" />SOFTWARE<ph dataRef="id3" id="ph3" />Microsoft<ph dataRef="id4" id="ph4" />AppV<ph dataRef="id5" id="ph5" />ClientStreaming key).</source>
          <target>The PowerShell cmdlet <ph dataRef="id1" id="ph1" /> can be used to determine the current mode for background streaming with the AutoLoad setting and modified with the cmdlet Set-AppvClientConfiguration or from the registry (HKLM<ph dataRef="id2" id="ph2" />SOFTWARE<ph dataRef="id3" id="ph3" />Microsoft<ph dataRef="id4" id="ph4" />AppV<ph dataRef="id5" id="ph5" />ClientStreaming key).</target>
        </segment>
      </unit>
      <unit id="398">
        <segment state="initial">
          <source>Background streaming is a default setting where the Autoload setting is set to download previously used packages.</source>
          <target>Background streaming is a default setting where the Autoload setting is set to download previously used packages.</target>
        </segment>
      </unit>
      <unit id="399">
        <segment state="initial">
          <source>The behavior based on default setting (value=1) downloads App-V data blocks in the background after the application has been launched.</source>
          <target>The behavior based on default setting (value=1) downloads App-V data blocks in the background after the application has been launched.</target>
        </segment>
      </unit>
      <unit id="400">
        <segment state="initial">
          <source>This setting can be disabled all together (value=0) or enabled for all packages (value=2), whether they have been launched.</source>
          <target>This setting can be disabled all together (value=0) or enabled for all packages (value=2), whether they have been launched.</target>
        </segment>
      </unit>
      <unit id="401">
        <segment state="initial">
          <source>Optimized streaming</source>
          <target>Optimized streaming</target>
        </segment>
      </unit>
      <unit id="402">
        <segment state="initial">
          <source>App-V packages can be configured with a primary feature block during sequencing.</source>
          <target>App-V packages can be configured with a primary feature block during sequencing.</target>
        </segment>
      </unit>
      <unit id="403">
        <segment state="initial">
          <source>This setting allows the sequencing engineer to monitor launch files for a specific application, or applications, and mark the blocks of data in the App-V package for streaming at first launch of any application in the package.</source>
          <target>This setting allows the sequencing engineer to monitor launch files for a specific application, or applications, and mark the blocks of data in the App-V package for streaming at first launch of any application in the package.</target>
        </segment>
      </unit>
      <unit id="404">
        <segment state="initial">
          <source>Stream faults</source>
          <target>Stream faults</target>
        </segment>
      </unit>
      <unit id="405">
        <segment state="initial">
          <source>After the initial stream of any publishing data and the primary feature block, requests for additional files perform stream faults.</source>
          <target>After the initial stream of any publishing data and the primary feature block, requests for additional files perform stream faults.</target>
        </segment>
      </unit>
      <unit id="406">
        <segment state="initial">
          <source>These blocks of data are downloaded to the package store on an as-needed basis.</source>
          <target>These blocks of data are downloaded to the package store on an as-needed basis.</target>
        </segment>
      </unit>
      <unit id="407">
        <segment state="initial">
          <source>This allows a user to download only a small part of the package, typically enough to launch the package and run normal tasks.</source>
          <target>This allows a user to download only a small part of the package, typically enough to launch the package and run normal tasks.</target>
        </segment>
      </unit>
      <unit id="408">
        <segment state="initial">
          <source>All other blocks are downloaded when a user initiates an operation that requires data not currently in the package store.</source>
          <target>All other blocks are downloaded when a user initiates an operation that requires data not currently in the package store.</target>
        </segment>
      </unit>
      <unit id="409">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For more information on App-V Package streaming visit: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392770</pc>.</source>
          <target>For more information on App-V Package streaming visit: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392770</pc>.</target>
        </segment>
      </unit>
      <unit id="410">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sequencing for streaming optimization is available at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392771</pc>.</source>
          <target>Sequencing for streaming optimization is available at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392771</pc>.</target>
        </segment>
      </unit>
      <unit id="411">
        <segment state="initial">
          <source>Package upgrades</source>
          <target>Package upgrades</target>
        </segment>
      </unit>
      <unit id="412">
        <segment state="initial">
          <source>App-V Packages require updating throughout the lifecycle of the application.</source>
          <target>App-V Packages require updating throughout the lifecycle of the application.</target>
        </segment>
      </unit>
      <unit id="413">
        <originalData>
          <data id="id1">`%ProgramData%\App-V\{PkgGUID}\{newVerGUID}`</data>
        </originalData>
        <segment state="initial">
          <source>App-V Package upgrades are similar to the package publish operation, as each version will be created in its own PackageRoot location: <ph dataRef="id1" id="ph1" />.</source>
          <target>App-V Package upgrades are similar to the package publish operation, as each version will be created in its own PackageRoot location: <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="414">
        <segment state="initial">
          <source>The upgrade operation is optimized by creating hard links to identical- and streamed-files from other versions of the same package.</source>
          <target>The upgrade operation is optimized by creating hard links to identical- and streamed-files from other versions of the same package.</target>
        </segment>
      </unit>
      <unit id="415">
        <segment state="initial">
          <source>Package removal</source>
          <target>Package removal</target>
        </segment>
      </unit>
      <unit id="416">
        <segment state="initial">
          <source>The behavior of the App-V Client when packages are removed depends on the method used for removal.</source>
          <target>The behavior of the App-V Client when packages are removed depends on the method used for removal.</target>
        </segment>
      </unit>
      <unit id="417">
        <segment state="initial">
          <source>Using an App-V full infrastructure to unpublish the application, the user catalog files (machine catalog for globally published applications) are removed, but retains the package store location and COW locations.</source>
          <target>Using an App-V full infrastructure to unpublish the application, the user catalog files (machine catalog for globally published applications) are removed, but retains the package store location and COW locations.</target>
        </segment>
      </unit>
      <unit id="418">
        <originalData>
          <data id="id1">`Remove-AppVClientPackge`</data>
        </originalData>
        <segment state="initial">
          <source>When the PowerShell cmdlet <ph dataRef="id1" id="ph1" /> is used to remove an App-V Package, the package store location is cleaned.</source>
          <target>When the PowerShell cmdlet <ph dataRef="id1" id="ph1" /> is used to remove an App-V Package, the package store location is cleaned.</target>
        </segment>
      </unit>
      <unit id="419">
        <segment state="initial">
          <source>Remember that unpublishing an App-V Package from the Management Server does not perform a Remove operation.</source>
          <target>Remember that unpublishing an App-V Package from the Management Server does not perform a Remove operation.</target>
        </segment>
      </unit>
      <unit id="420">
        <segment state="initial">
          <source>Neither operation will remove the Package Store package files.</source>
          <target>Neither operation will remove the Package Store package files.</target>
        </segment>
      </unit>
      <unit id="421">
        <segment state="initial">
          <source>Roaming registry and data</source>
          <target>Roaming registry and data</target>
        </segment>
      </unit>
      <unit id="422">
        <segment state="initial">
          <source>App-V 5 is able to provide a near-native experience when roaming, depending on how the application being used is written.</source>
          <target>App-V 5 is able to provide a near-native experience when roaming, depending on how the application being used is written.</target>
        </segment>
      </unit>
      <unit id="423">
        <segment state="initial">
          <source>By default, App-V roams AppData that is stored in the roaming location, based on the roaming configuration of the operating system.</source>
          <target>By default, App-V roams AppData that is stored in the roaming location, based on the roaming configuration of the operating system.</target>
        </segment>
      </unit>
      <unit id="424">
        <segment state="initial">
          <source>Other locations for storage of file-based data do not roam from computer to computer, since they are in locations that are not roamed.</source>
          <target>Other locations for storage of file-based data do not roam from computer to computer, since they are in locations that are not roamed.</target>
        </segment>
      </unit>
      <unit id="425">
        <segment state="initial">
          <source>Roaming requirements and user catalog data storage</source>
          <target>Roaming requirements and user catalog data storage</target>
        </segment>
      </unit>
      <unit id="426">
        <segment state="initial">
          <source>App-V stores data, which represents the state of the user’s catalog, in the form of:</source>
          <target>App-V stores data, which represents the state of the user’s catalog, in the form of:</target>
        </segment>
      </unit>
      <unit id="427">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>Files under %appdata%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client<ph dataRef="id4" id="ph4" />Catalog</source>
          <target>Files under %appdata%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client<ph dataRef="id4" id="ph4" />Catalog</target>
        </segment>
      </unit>
      <unit id="428">
        <segment state="initial">
          <source>Registry settings under</source>
          <target>Registry settings under</target>
        </segment>
      </unit>
      <unit id="429">
        <segment state="initial">
          <source>Together, these files and registry settings represent the user’s catalog, so either both must be roamed, or neither must be roamed for a given user.</source>
          <target>Together, these files and registry settings represent the user’s catalog, so either both must be roamed, or neither must be roamed for a given user.</target>
        </segment>
      </unit>
      <unit id="430">
        <segment state="initial">
          <source>App-V does not support roaming %AppData%, but not roaming the user’s profile (registry), or vice versa.</source>
          <target>App-V does not support roaming %AppData%, but not roaming the user’s profile (registry), or vice versa.</target>
        </segment>
      </unit>
      <unit id="431">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="432">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`HKEY_CURRENT_USER`</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Repair-AppvClientPackage</pc> cmdlet does not repair the publishing state of packages, where the user’s App-V state under <ph dataRef="id3" id="ph1" /> is missing or mismatched with the data in %appdata%.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Repair-AppvClientPackage</pc> cmdlet does not repair the publishing state of packages, where the user’s App-V state under <ph dataRef="id3" id="ph1" /> is missing or mismatched with the data in %appdata%.</target>
        </segment>
      </unit>
      <unit id="433">
        <segment state="initial">
          <source>Registry-based data</source>
          <target>Registry-based data</target>
        </segment>
      </unit>
      <unit id="434">
        <segment state="initial">
          <source>App-V registry roaming falls into two scenarios, as shown in the following table.</source>
          <target>App-V registry roaming falls into two scenarios, as shown in the following table.</target>
        </segment>
      </unit>
      <unit id="435">
        <segment state="initial">
          <source>Scenario</source>
          <target>Scenario</target>
        </segment>
      </unit>
      <unit id="436">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="437">
        <segment state="initial">
          <source>Applications that are run as standard users</source>
          <target>Applications that are run as standard users</target>
        </segment>
      </unit>
      <unit id="438">
        <segment state="initial">
          <source>When a standard user launches an App-V application, both HKLM and HKCU for App-V applications are stored in the HKCU hive on the machine.</source>
          <target>When a standard user launches an App-V application, both HKLM and HKCU for App-V applications are stored in the HKCU hive on the machine.</target>
        </segment>
      </unit>
      <unit id="439">
        <segment state="initial">
          <source>This presents as two distinct paths:</source>
          <target>This presents as two distinct paths:</target>
        </segment>
      </unit>
      <unit id="440">
        <originalData>
          <data id="id1">\{</data>
        </originalData>
        <segment state="initial">
          <source>HKLM: HKCU\SOFTWARE\Classes\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}\REGISTRY\MACHINE\SOFTWARE</source>
          <target>HKLM: HKCU\SOFTWARE\Classes\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}\REGISTRY\MACHINE\SOFTWARE</target>
        </segment>
      </unit>
      <unit id="441">
        <originalData>
          <data id="id1">\{</data>
          <data id="id2">\{</data>
        </originalData>
        <segment state="initial">
          <source>HKCU: HKCU\SOFTWARE\Microsoft\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}\REGISTRY\USER<ph dataRef="id2" id="ph2" />UserSID}\SOFTWARE</source>
          <target>HKCU: HKCU\SOFTWARE\Microsoft\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}\REGISTRY\USER<ph dataRef="id2" id="ph2" />UserSID}\SOFTWARE</target>
        </segment>
      </unit>
      <unit id="442">
        <segment state="initial">
          <source>The locations are enabled for roaming based on the operating system settings.</source>
          <target>The locations are enabled for roaming based on the operating system settings.</target>
        </segment>
      </unit>
      <unit id="443">
        <segment state="initial">
          <source>Applications that are run with elevation</source>
          <target>Applications that are run with elevation</target>
        </segment>
      </unit>
      <unit id="444">
        <segment state="initial">
          <source>When an application is launched with elevation:</source>
          <target>When an application is launched with elevation:</target>
        </segment>
      </unit>
      <unit id="445">
        <segment state="initial">
          <source>HKLM data is stored in the HKLM hive on the local computer</source>
          <target>HKLM data is stored in the HKLM hive on the local computer</target>
        </segment>
      </unit>
      <unit id="446">
        <segment state="initial">
          <source>HKCU data is stored in the User Registry location</source>
          <target>HKCU data is stored in the User Registry location</target>
        </segment>
      </unit>
      <unit id="447">
        <segment state="initial">
          <source>In this scenario, these settings are not roamed with normal operating system roaming configurations, and the resulting registry keys and values are stored in the following location:</source>
          <target>In this scenario, these settings are not roamed with normal operating system roaming configurations, and the resulting registry keys and values are stored in the following location:</target>
        </segment>
      </unit>
      <unit id="448">
        <originalData>
          <data id="id1">\{</data>
          <data id="id2">\{</data>
        </originalData>
        <segment state="initial">
          <source>HKLM\SOFTWARE\Microsoft\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}<ph dataRef="id2" id="ph2" />UserSID}\REGISTRY\MACHINE\SOFTWARE</source>
          <target>HKLM\SOFTWARE\Microsoft\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}<ph dataRef="id2" id="ph2" />UserSID}\REGISTRY\MACHINE\SOFTWARE</target>
        </segment>
      </unit>
      <unit id="449">
        <originalData>
          <data id="id1">\{</data>
          <data id="id2">\{</data>
        </originalData>
        <segment state="initial">
          <source>HKCU\SOFTWARE\Microsoft\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}\Registry\User<ph dataRef="id2" id="ph2" />UserSID}\SOFTWARE</source>
          <target>HKCU\SOFTWARE\Microsoft\AppV\Client\Packages<ph dataRef="id1" id="ph1" />PkgGUID}\Registry\User<ph dataRef="id2" id="ph2" />UserSID}\SOFTWARE</target>
        </segment>
      </unit>
      <unit id="450">
        <segment state="initial">
          <source>App-V and folder redirection</source>
          <target>App-V and folder redirection</target>
        </segment>
      </unit>
      <unit id="451">
        <segment state="initial">
          <source>App-V 5.1 supports folder redirection of the roaming AppData folder (%AppData%).</source>
          <target>App-V 5.1 supports folder redirection of the roaming AppData folder (%AppData%).</target>
        </segment>
      </unit>
      <unit id="452">
        <segment state="initial">
          <source>When the virtual environment is started, the roaming AppData state from the user’s roaming AppData directory is copied to the local cache.</source>
          <target>When the virtual environment is started, the roaming AppData state from the user’s roaming AppData directory is copied to the local cache.</target>
        </segment>
      </unit>
      <unit id="453">
        <segment state="initial">
          <source>Conversely, when the virtual environment is shut down, the local cache that is associated with a specific user’s roaming AppData is transferred to the actual location of that user’s roaming AppData directory.</source>
          <target>Conversely, when the virtual environment is shut down, the local cache that is associated with a specific user’s roaming AppData is transferred to the actual location of that user’s roaming AppData directory.</target>
        </segment>
      </unit>
      <unit id="454">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>A typical package has several locations mapped in the user’s backing store for settings in both AppData<ph dataRef="id1" id="ph1" />Local and AppData<ph dataRef="id2" id="ph2" />Roaming.</source>
          <target>A typical package has several locations mapped in the user’s backing store for settings in both AppData<ph dataRef="id1" id="ph1" />Local and AppData<ph dataRef="id2" id="ph2" />Roaming.</target>
        </segment>
      </unit>
      <unit id="455">
        <segment state="initial">
          <source>These locations are the Copy on Write locations that are stored per user in the user’s profile, and that are used to store changes made to the package VFS directories and to protect the default package VFS.</source>
          <target>These locations are the Copy on Write locations that are stored per user in the user’s profile, and that are used to store changes made to the package VFS directories and to protect the default package VFS.</target>
        </segment>
      </unit>
      <unit id="456">
        <segment state="initial">
          <source>The following table shows local and roaming locations, when folder redirection has not been implemented.</source>
          <target>The following table shows local and roaming locations, when folder redirection has not been implemented.</target>
        </segment>
      </unit>
      <unit id="457">
        <segment state="initial">
          <source>VFS directory in package</source>
          <target>VFS directory in package</target>
        </segment>
      </unit>
      <unit id="458">
        <segment state="initial">
          <source>Mapped location of backing store</source>
          <target>Mapped location of backing store</target>
        </segment>
      </unit>
      <unit id="459">
        <segment state="initial">
          <source>ProgramFilesX86</source>
          <target>ProgramFilesX86</target>
        </segment>
      </unit>
      <unit id="460">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\ProgramFilesX86</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\ProgramFilesX86</target>
        </segment>
      </unit>
      <unit id="461">
        <segment state="initial">
          <source>SystemX86</source>
          <target>SystemX86</target>
        </segment>
      </unit>
      <unit id="462">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\SystemX86</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\SystemX86</target>
        </segment>
      </unit>
      <unit id="463">
        <segment state="initial">
          <source>Windows</source>
          <target>Windows</target>
        </segment>
      </unit>
      <unit id="464">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\Windows</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\Windows</target>
        </segment>
      </unit>
      <unit id="465">
        <segment state="initial">
          <source>appv_ROOT</source>
          <target>appv_ROOT</target>
        </segment>
      </unit>
      <unit id="466">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\appv_ROOT</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\appv_ROOT</target>
        </segment>
      </unit>
      <unit id="467">
        <segment state="initial">
          <source>AppData</source>
          <target>AppData</target>
        </segment>
      </unit>
      <unit id="468">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Roaming<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\AppData</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Roaming<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\AppData</target>
        </segment>
      </unit>
      <unit id="469">
        <segment state="initial">
          <source>The following table shows local and roaming locations, when folder redirection has been implemented for %AppData%, and the location has been redirected (typically to a network location).</source>
          <target>The following table shows local and roaming locations, when folder redirection has been implemented for %AppData%, and the location has been redirected (typically to a network location).</target>
        </segment>
      </unit>
      <unit id="470">
        <segment state="initial">
          <source>VFS directory in package</source>
          <target>VFS directory in package</target>
        </segment>
      </unit>
      <unit id="471">
        <segment state="initial">
          <source>Mapped location of backing store</source>
          <target>Mapped location of backing store</target>
        </segment>
      </unit>
      <unit id="472">
        <segment state="initial">
          <source>ProgramFilesX86</source>
          <target>ProgramFilesX86</target>
        </segment>
      </unit>
      <unit id="473">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\ProgramFilesX86</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\ProgramFilesX86</target>
        </segment>
      </unit>
      <unit id="474">
        <segment state="initial">
          <source>SystemX86</source>
          <target>SystemX86</target>
        </segment>
      </unit>
      <unit id="475">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\SystemX86</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\SystemX86</target>
        </segment>
      </unit>
      <unit id="476">
        <segment state="initial">
          <source>Windows</source>
          <target>Windows</target>
        </segment>
      </unit>
      <unit id="477">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\Windows</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\Windows</target>
        </segment>
      </unit>
      <unit id="478">
        <segment state="initial">
          <source>appv_ROOT</source>
          <target>appv_ROOT</target>
        </segment>
      </unit>
      <unit id="479">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
          <data id="id3">\&amp;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\appv_ROOT</source>
          <target>C:\users\jsmith\AppData\<ph dataRef="id1" id="ph1" />Local<ph dataRef="id2" id="ph2" />\Microsoft\AppV\Client\VFS<ph dataRef="id3" id="ph3" />lt;GUID<ph dataRef="id4" id="ph4" />\appv_ROOT</target>
        </segment>
      </unit>
      <unit id="480">
        <segment state="initial">
          <source>AppData</source>
          <target>AppData</target>
        </segment>
      </unit>
      <unit id="481">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">\&amp;</data>
          <data id="id3">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Fileserver<ph dataRef="id1" id="ph1" />\users\jsmith\roaming\Microsoft\AppV\Client\VFS<ph dataRef="id2" id="ph2" />lt;GUID<ph dataRef="id3" id="ph3" />\AppData</source>
          <target>Fileserver<ph dataRef="id1" id="ph1" />\users\jsmith\roaming\Microsoft\AppV\Client\VFS<ph dataRef="id2" id="ph2" />lt;GUID<ph dataRef="id3" id="ph3" />\AppData</target>
        </segment>
      </unit>
      <unit id="482">
        <segment state="initial">
          <source>The current App-V Client VFS driver cannot write to network locations, so the App-V Client detects the presence of folder redirection and copies the data on the local drive during publishing and when the virtual environment starts.</source>
          <target>The current App-V Client VFS driver cannot write to network locations, so the App-V Client detects the presence of folder redirection and copies the data on the local drive during publishing and when the virtual environment starts.</target>
        </segment>
      </unit>
      <unit id="483">
        <segment state="initial">
          <source>After the user closes the App-V application and the App-V Client closes the virtual environment, the local storage of the VFS AppData is copied back to the network, enabling roaming to additional machines, where the process will be repeated.</source>
          <target>After the user closes the App-V application and the App-V Client closes the virtual environment, the local storage of the VFS AppData is copied back to the network, enabling roaming to additional machines, where the process will be repeated.</target>
        </segment>
      </unit>
      <unit id="484">
        <segment state="initial">
          <source>The detailed steps of the processes are:</source>
          <target>The detailed steps of the processes are:</target>
        </segment>
      </unit>
      <unit id="485">
        <segment state="initial">
          <source>During publishing or virtual environment startup, the App-V Client detects the location of the AppData directory.</source>
          <target>During publishing or virtual environment startup, the App-V Client detects the location of the AppData directory.</target>
        </segment>
      </unit>
      <unit id="486">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>If the roaming AppData path is local or ino AppData<ph dataRef="id1" id="ph1" />Roaming location is mapped, nothing happens.</source>
          <target>If the roaming AppData path is local or ino AppData<ph dataRef="id1" id="ph1" />Roaming location is mapped, nothing happens.</target>
        </segment>
      </unit>
      <unit id="487">
        <segment state="initial">
          <source>If the roaming AppData path is not local, the VFS AppData directory is mapped to the local AppData directory.</source>
          <target>If the roaming AppData path is not local, the VFS AppData directory is mapped to the local AppData directory.</target>
        </segment>
      </unit>
      <unit id="488">
        <segment state="initial">
          <source>This process solves the problem of a non-local %AppData% that is not supported by the App-V Client VFS driver.</source>
          <target>This process solves the problem of a non-local %AppData% that is not supported by the App-V Client VFS driver.</target>
        </segment>
      </unit>
      <unit id="489">
        <segment state="initial">
          <source>However, the data stored in this new location is not roamed with folder redirection.</source>
          <target>However, the data stored in this new location is not roamed with folder redirection.</target>
        </segment>
      </unit>
      <unit id="490">
        <segment state="initial">
          <source>All changes during the running of the application happen to the local AppData location and must be copied to the redirected location.</source>
          <target>All changes during the running of the application happen to the local AppData location and must be copied to the redirected location.</target>
        </segment>
      </unit>
      <unit id="491">
        <segment state="initial">
          <source>The detailed steps of this process are:</source>
          <target>The detailed steps of this process are:</target>
        </segment>
      </unit>
      <unit id="492">
        <segment state="initial">
          <source>App-V application is shut down, which shuts down the virtual environment.</source>
          <target>App-V application is shut down, which shuts down the virtual environment.</target>
        </segment>
      </unit>
      <unit id="493">
        <segment state="initial">
          <source>The local cache of the roaming AppData location is compressed and stored in a ZIP file.</source>
          <target>The local cache of the roaming AppData location is compressed and stored in a ZIP file.</target>
        </segment>
      </unit>
      <unit id="494">
        <segment state="initial">
          <source>A timestamp at the end of the ZIP packaging process is used to name the file.</source>
          <target>A timestamp at the end of the ZIP packaging process is used to name the file.</target>
        </segment>
      </unit>
      <unit id="495">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\&amp;lt;</data>
          <data id="id9">&amp;gt;\\</data>
        </originalData>
        <segment state="initial">
          <source>The timestamp is recorded in the registry: HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />Software<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />AppV<ph dataRef="id6" id="ph6" />Client<ph dataRef="id7" id="ph7" />Packages<ph dataRef="id8" id="ph8" />GUID<ph dataRef="id9" id="ph9" />AppDataTime as the last known AppData timestamp.</source>
          <target>The timestamp is recorded in the registry: HKEY<ph dataRef="id1" id="ph1" />CURRENT<ph dataRef="id2" id="ph2" />USER<ph dataRef="id3" id="ph3" />Software<ph dataRef="id4" id="ph4" />Microsoft<ph dataRef="id5" id="ph5" />AppV<ph dataRef="id6" id="ph6" />Client<ph dataRef="id7" id="ph7" />Packages<ph dataRef="id8" id="ph8" />GUID<ph dataRef="id9" id="ph9" />AppDataTime as the last known AppData timestamp.</target>
        </segment>
      </unit>
      <unit id="496">
        <segment state="initial">
          <source>The folder redirection process is called to evaluate and initiate the ZIP file uploaded to the roaming AppData directory.</source>
          <target>The folder redirection process is called to evaluate and initiate the ZIP file uploaded to the roaming AppData directory.</target>
        </segment>
      </unit>
      <unit id="497">
        <segment state="initial">
          <source>The timestamp is used to determine a “last writer wins” scenario if there is a conflict and is used to optimize the download of the data when the App-V application is published or the virtual environment is started.</source>
          <target>The timestamp is used to determine a “last writer wins” scenario if there is a conflict and is used to optimize the download of the data when the App-V application is published or the virtual environment is started.</target>
        </segment>
      </unit>
      <unit id="498">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>Folder redirection will make the data available from any other clients covered by the supporting policy and will initiate the process of storing the AppData<ph dataRef="id1" id="ph1" />Roaming data to the local AppData location on the client.</source>
          <target>Folder redirection will make the data available from any other clients covered by the supporting policy and will initiate the process of storing the AppData<ph dataRef="id1" id="ph1" />Roaming data to the local AppData location on the client.</target>
        </segment>
      </unit>
      <unit id="499">
        <segment state="initial">
          <source>The detailed processes are:</source>
          <target>The detailed processes are:</target>
        </segment>
      </unit>
      <unit id="500">
        <segment state="initial">
          <source>The user starts the virtual environment by starting an application.</source>
          <target>The user starts the virtual environment by starting an application.</target>
        </segment>
      </unit>
      <unit id="501">
        <segment state="initial">
          <source>The application’s virtual environment checks for the most recent time stamped ZIP file, if present.</source>
          <target>The application’s virtual environment checks for the most recent time stamped ZIP file, if present.</target>
        </segment>
      </unit>
      <unit id="502">
        <segment state="initial">
          <source>The registry is checked for the last known uploaded timestamp, if present.</source>
          <target>The registry is checked for the last known uploaded timestamp, if present.</target>
        </segment>
      </unit>
      <unit id="503">
        <segment state="initial">
          <source>The most recent ZIP file is downloaded unless the local last known upload timestamp is greater than or equal to the timestamp from the ZIP file.</source>
          <target>The most recent ZIP file is downloaded unless the local last known upload timestamp is greater than or equal to the timestamp from the ZIP file.</target>
        </segment>
      </unit>
      <unit id="504">
        <segment state="initial">
          <source>If the local last known upload timestamp is earlier than that of the most recent ZIP file in the roaming AppData location, the ZIP file is extracted to the local temp directory in the user’s profile.</source>
          <target>If the local last known upload timestamp is earlier than that of the most recent ZIP file in the roaming AppData location, the ZIP file is extracted to the local temp directory in the user’s profile.</target>
        </segment>
      </unit>
      <unit id="505">
        <segment state="initial">
          <source>After the ZIP file is successfully extracted, the local cache of the roaming AppData directory is renamed and the new data is moved into place.</source>
          <target>After the ZIP file is successfully extracted, the local cache of the roaming AppData directory is renamed and the new data is moved into place.</target>
        </segment>
      </unit>
      <unit id="506">
        <segment state="initial">
          <source>The renamed directory is deleted and the application opens with the most recently saved roaming AppData data.</source>
          <target>The renamed directory is deleted and the application opens with the most recently saved roaming AppData data.</target>
        </segment>
      </unit>
      <unit id="507">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>This completes the successful roaming of application settings that are present in AppData<ph dataRef="id1" id="ph1" />Roaming locations.</source>
          <target>This completes the successful roaming of application settings that are present in AppData<ph dataRef="id1" id="ph1" />Roaming locations.</target>
        </segment>
      </unit>
      <unit id="508">
        <segment state="initial">
          <source>The only other condition that must be addressed is a package repair operation.</source>
          <target>The only other condition that must be addressed is a package repair operation.</target>
        </segment>
      </unit>
      <unit id="509">
        <segment state="initial">
          <source>The details of the process are:</source>
          <target>The details of the process are:</target>
        </segment>
      </unit>
      <unit id="510">
        <segment state="initial">
          <source>During repair, detect if the path to the user’s roaming AppData directory is not local.</source>
          <target>During repair, detect if the path to the user’s roaming AppData directory is not local.</target>
        </segment>
      </unit>
      <unit id="511">
        <segment state="initial">
          <source>Map the non-local roaming AppData path targets are recreated the expected roaming and local AppData locations.</source>
          <target>Map the non-local roaming AppData path targets are recreated the expected roaming and local AppData locations.</target>
        </segment>
      </unit>
      <unit id="512">
        <segment state="initial">
          <source>Delete the timestamp stored in the registry, if present.</source>
          <target>Delete the timestamp stored in the registry, if present.</target>
        </segment>
      </unit>
      <unit id="513">
        <segment state="initial">
          <source>This process will re-create both the local and network locations for AppData and remove the registry record of the timestamp.</source>
          <target>This process will re-create both the local and network locations for AppData and remove the registry record of the timestamp.</target>
        </segment>
      </unit>
      <unit id="514">
        <segment state="initial">
          <source>App-V client application lifecycle management</source>
          <target>App-V client application lifecycle management</target>
        </segment>
      </unit>
      <unit id="515">
        <segment state="initial">
          <source>In an App-V Full Infrastructure, after applications are sequenced they are managed and published to users or computers via the App-V Management and Publishing servers.</source>
          <target>In an App-V Full Infrastructure, after applications are sequenced they are managed and published to users or computers via the App-V Management and Publishing servers.</target>
        </segment>
      </unit>
      <unit id="516">
        <segment state="initial">
          <source>This section details the operations that occur during the common App-V application lifecycle operations (Add, publishing, launch, upgrade, and removal) and the file and registry locations that are changed and modified from the App-V Client perspective.</source>
          <target>This section details the operations that occur during the common App-V application lifecycle operations (Add, publishing, launch, upgrade, and removal) and the file and registry locations that are changed and modified from the App-V Client perspective.</target>
        </segment>
      </unit>
      <unit id="517">
        <segment state="initial">
          <source>The App-V Client operations are performed as a series of PowerShell commands initiated on the computer running the App-V Client.</source>
          <target>The App-V Client operations are performed as a series of PowerShell commands initiated on the computer running the App-V Client.</target>
        </segment>
      </unit>
      <unit id="518">
        <segment state="initial">
          <source>This document focuses on App-V Full Infrastructure solutions.</source>
          <target>This document focuses on App-V Full Infrastructure solutions.</target>
        </segment>
      </unit>
      <unit id="519">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For specific information on App-V Integration with Configuration Manager 2012 visit: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392773</pc>.</source>
          <target>For specific information on App-V Integration with Configuration Manager 2012 visit: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392773</pc>.</target>
        </segment>
      </unit>
      <unit id="520">
        <segment state="initial">
          <source>The App-V application lifecycle tasks are triggered at user login (default), machine startup, or as background timed operations.</source>
          <target>The App-V application lifecycle tasks are triggered at user login (default), machine startup, or as background timed operations.</target>
        </segment>
      </unit>
      <unit id="521">
        <segment state="initial">
          <source>The settings for the App-V Client operations, including Publishing Servers, refresh intervals, package script enablement, and others, are configured during setup of the client or post-setup with PowerShell commands.</source>
          <target>The settings for the App-V Client operations, including Publishing Servers, refresh intervals, package script enablement, and others, are configured during setup of the client or post-setup with PowerShell commands.</target>
        </segment>
      </unit>
      <unit id="522">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](how-to-deploy-the-app-v-client-51gb18030.md)</data>
        </originalData>
        <segment state="initial">
          <source>See the How to Deploy the Client section on TechNet at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to Deploy the App-V Client</pc> or utilize the PowerShell:</source>
          <target>See the How to Deploy the Client section on TechNet at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">How to Deploy the App-V Client</pc> or utilize the PowerShell:</target>
        </segment>
      </unit>
      <unit id="523">
        <segment state="initial">
          <source>Publishing refresh</source>
          <target>Publishing refresh</target>
        </segment>
      </unit>
      <unit id="524">
        <segment state="initial">
          <source>The publishing refresh process is comprised of several smaller operations that are performed on the App-V Client.</source>
          <target>The publishing refresh process is comprised of several smaller operations that are performed on the App-V Client.</target>
        </segment>
      </unit>
      <unit id="525">
        <segment state="initial">
          <source>Since App-V is an application virtualization technology and not a task scheduling technology, the Windows Task Scheduler is utilized to enable the process at user logon, machine startup, and at scheduled intervals.</source>
          <target>Since App-V is an application virtualization technology and not a task scheduling technology, the Windows Task Scheduler is utilized to enable the process at user logon, machine startup, and at scheduled intervals.</target>
        </segment>
      </unit>
      <unit id="526">
        <segment state="initial">
          <source>The configuration of the client during setup listed above is the preferred method when distributing the client to a large group of computers with the correct settings.</source>
          <target>The configuration of the client during setup listed above is the preferred method when distributing the client to a large group of computers with the correct settings.</target>
        </segment>
      </unit>
      <unit id="527">
        <segment state="initial">
          <source>These client settings can be configured with the following PowerShell cmdlets:</source>
          <target>These client settings can be configured with the following PowerShell cmdlets:</target>
        </segment>
      </unit>
      <unit id="528">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add-AppVPublishingServer:</pc> Configures the client with an App-V Publishing Server that provides App-V packages.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add-AppVPublishingServer:</pc> Configures the client with an App-V Publishing Server that provides App-V packages.</target>
        </segment>
      </unit>
      <unit id="529">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set-AppVPublishingServer:</pc> Modifies the current settings for the App-V Publishing Server.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set-AppVPublishingServer:</pc> Modifies the current settings for the App-V Publishing Server.</target>
        </segment>
      </unit>
      <unit id="530">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set-AppVClientConfiguration:</pc> Modifies the currents settings for the App-V Client.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Set-AppVClientConfiguration:</pc> Modifies the currents settings for the App-V Client.</target>
        </segment>
      </unit>
      <unit id="531">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sync-AppVPublishingServer:</pc> Initiates an App-V Publishing Refresh process manually.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sync-AppVPublishingServer:</pc> Initiates an App-V Publishing Refresh process manually.</target>
        </segment>
      </unit>
      <unit id="532">
        <segment state="initial">
          <source>This is also utilized in the scheduled tasks created during configuration of the publishing server.</source>
          <target>This is also utilized in the scheduled tasks created during configuration of the publishing server.</target>
        </segment>
      </unit>
      <unit id="533">
        <segment state="initial">
          <source>The focus of the following sections is to detail the operations that occur during different phases of an App-V Publishing Refresh.</source>
          <target>The focus of the following sections is to detail the operations that occur during different phases of an App-V Publishing Refresh.</target>
        </segment>
      </unit>
      <unit id="534">
        <segment state="initial">
          <source>The topics include:</source>
          <target>The topics include:</target>
        </segment>
      </unit>
      <unit id="535">
        <segment state="initial">
          <source>Adding an App-V Package</source>
          <target>Adding an App-V Package</target>
        </segment>
      </unit>
      <unit id="536">
        <segment state="initial">
          <source>Publishing an App-V Package</source>
          <target>Publishing an App-V Package</target>
        </segment>
      </unit>
      <unit id="537">
        <segment state="initial">
          <source>Adding an App-V package</source>
          <target>Adding an App-V package</target>
        </segment>
      </unit>
      <unit id="538">
        <segment state="initial">
          <source>Adding an App-V package to the client is the first step of the publishing refresh process.</source>
          <target>Adding an App-V package to the client is the first step of the publishing refresh process.</target>
        </segment>
      </unit>
      <unit id="539">
        <originalData>
          <data id="id1">`Add-AppVClientPackage`</data>
        </originalData>
        <segment state="initial">
          <source>The end result is the same as the <ph dataRef="id1" id="ph1" /> cmdlet in PowerShell, except during the publishing refresh add process, the configured publishing server is contacted and passes a high-level list of applications back to the client to pull more detailed information and not a single package add operation.</source>
          <target>The end result is the same as the <ph dataRef="id1" id="ph1" /> cmdlet in PowerShell, except during the publishing refresh add process, the configured publishing server is contacted and passes a high-level list of applications back to the client to pull more detailed information and not a single package add operation.</target>
        </segment>
      </unit>
      <unit id="540">
        <segment state="initial">
          <source>The process continues by configuring the client for package or connection group additions or updates, then accesses the appv file.</source>
          <target>The process continues by configuring the client for package or connection group additions or updates, then accesses the appv file.</target>
        </segment>
      </unit>
      <unit id="541">
        <segment state="initial">
          <source>Next, the contents of the appv file are expanded and placed on the local operating system in the appropriate locations.</source>
          <target>Next, the contents of the appv file are expanded and placed on the local operating system in the appropriate locations.</target>
        </segment>
      </unit>
      <unit id="542">
        <segment state="initial">
          <source>The following is a detailed workflow of the process, assuming the package is configured for Fault Streaming.</source>
          <target>The following is a detailed workflow of the process, assuming the package is configured for Fault Streaming.</target>
        </segment>
      </unit>
      <unit id="543">
        <segment state="initial">
          <source>How to add an App-V package</source>
          <target>How to add an App-V package</target>
        </segment>
      </unit>
      <unit id="544">
        <segment state="initial">
          <source>Manual initiation via PowerShell or Task Sequence initiation of the Publishing Refresh process.</source>
          <target>Manual initiation via PowerShell or Task Sequence initiation of the Publishing Refresh process.</target>
        </segment>
      </unit>
      <unit id="545">
        <segment state="initial">
          <source>The App-V Client makes an HTTP connection and requests a list of applications based on the target.</source>
          <target>The App-V Client makes an HTTP connection and requests a list of applications based on the target.</target>
        </segment>
      </unit>
      <unit id="546">
        <segment state="initial">
          <source>The Publishing refresh process supports targeting machines or users.</source>
          <target>The Publishing refresh process supports targeting machines or users.</target>
        </segment>
      </unit>
      <unit id="547">
        <segment state="initial">
          <source>The App-V Publishing Server uses the identity of the initiating target, user or machine, and queries the database for a list of entitled applications.</source>
          <target>The App-V Publishing Server uses the identity of the initiating target, user or machine, and queries the database for a list of entitled applications.</target>
        </segment>
      </unit>
      <unit id="548">
        <segment state="initial">
          <source>The list of applications is provided as an XML response, which the client uses to send additional requests to the server for more information on a per package basis.</source>
          <target>The list of applications is provided as an XML response, which the client uses to send additional requests to the server for more information on a per package basis.</target>
        </segment>
      </unit>
      <unit id="549">
        <segment state="initial">
          <source>The Publishing Agent on the App-V Client performs all actions below serialized.</source>
          <target>The Publishing Agent on the App-V Client performs all actions below serialized.</target>
        </segment>
      </unit>
      <unit id="550">
        <segment state="initial">
          <source>Evaluate any connection groups that are unpublished or disabled, since package version updates that are part of the connection group cannot be processed.</source>
          <target>Evaluate any connection groups that are unpublished or disabled, since package version updates that are part of the connection group cannot be processed.</target>
        </segment>
      </unit>
      <unit id="551">
        <segment state="initial">
          <source>Configure the packages by identifying an Add or Update operations.</source>
          <target>Configure the packages by identifying an Add or Update operations.</target>
        </segment>
      </unit>
      <unit id="552">
        <segment state="initial">
          <source>The App-V Client utilizes the AppX API from Windows and accesses the appv file from the publishing server.</source>
          <target>The App-V Client utilizes the AppX API from Windows and accesses the appv file from the publishing server.</target>
        </segment>
      </unit>
      <unit id="553">
        <segment state="initial">
          <source>The package file is opened and the AppXManifest.xml and StreamMap.xml are downloaded to the Package Store.</source>
          <target>The package file is opened and the AppXManifest.xml and StreamMap.xml are downloaded to the Package Store.</target>
        </segment>
      </unit>
      <unit id="554">
        <segment state="initial">
          <source>Completely stream publishing block data defined in the StreamMap.xml.</source>
          <target>Completely stream publishing block data defined in the StreamMap.xml.</target>
        </segment>
      </unit>
      <unit id="555">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>Stores the publishing block data in the Package Store<ph dataRef="id1" id="ph1" />PkgGUID<ph dataRef="id2" id="ph2" />VerGUID<ph dataRef="id3" id="ph3" />Root.</source>
          <target>Stores the publishing block data in the Package Store<ph dataRef="id1" id="ph1" />PkgGUID<ph dataRef="id2" id="ph2" />VerGUID<ph dataRef="id3" id="ph3" />Root.</target>
        </segment>
      </unit>
      <unit id="556">
        <segment state="initial">
          <source>Icons: Targets of extension points.</source>
          <target>Icons: Targets of extension points.</target>
        </segment>
      </unit>
      <unit id="557">
        <segment state="initial">
          <source>Portable Executable Headers (PE Headers): Targets of extension points that contain the base information about the image need on disk, directly accessed or via file types.</source>
          <target>Portable Executable Headers (PE Headers): Targets of extension points that contain the base information about the image need on disk, directly accessed or via file types.</target>
        </segment>
      </unit>
      <unit id="558">
        <segment state="initial">
          <source>Scripts: Download scripts directory for use throughout the publishing process.</source>
          <target>Scripts: Download scripts directory for use throughout the publishing process.</target>
        </segment>
      </unit>
      <unit id="559">
        <segment state="initial">
          <source>Populate the Package store:</source>
          <target>Populate the Package store:</target>
        </segment>
      </unit>
      <unit id="560">
        <segment state="initial">
          <source>Create sparse files on disk that represent the extracted package for any directories listed.</source>
          <target>Create sparse files on disk that represent the extracted package for any directories listed.</target>
        </segment>
      </unit>
      <unit id="561">
        <segment state="initial">
          <source>Stage top level files and directories under root.</source>
          <target>Stage top level files and directories under root.</target>
        </segment>
      </unit>
      <unit id="562">
        <segment state="initial">
          <source>All other files are created when the directory is listed as sparse on disk and streamed on demand.</source>
          <target>All other files are created when the directory is listed as sparse on disk and streamed on demand.</target>
        </segment>
      </unit>
      <unit id="563">
        <segment state="initial">
          <source>Create the machine catalog entries.</source>
          <target>Create the machine catalog entries.</target>
        </segment>
      </unit>
      <unit id="564">
        <segment state="initial">
          <source>Create the Manifest.xml and DeploymentConfiguration.xml from the package files (if no DeploymentConfiguration.xml file in the package a placeholder is created).</source>
          <target>Create the Manifest.xml and DeploymentConfiguration.xml from the package files (if no DeploymentConfiguration.xml file in the package a placeholder is created).</target>
        </segment>
      </unit>
      <unit id="565">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
          <data id="id9">\\</data>
        </originalData>
        <segment state="initial">
          <source>Create location of the package store in the registry HKLM<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />Client<ph dataRef="id5" id="ph5" />Packages<ph dataRef="id6" id="ph6" />PkgGUID<ph dataRef="id7" id="ph7" />Versions<ph dataRef="id8" id="ph8" />VerGUID<ph dataRef="id9" id="ph9" />Catalog</source>
          <target>Create location of the package store in the registry HKLM<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />Client<ph dataRef="id5" id="ph5" />Packages<ph dataRef="id6" id="ph6" />PkgGUID<ph dataRef="id7" id="ph7" />Versions<ph dataRef="id8" id="ph8" />VerGUID<ph dataRef="id9" id="ph9" />Catalog</target>
        </segment>
      </unit>
      <unit id="566">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
        </originalData>
        <segment state="initial">
          <source>Create the Registry.dat file from the package store to %ProgramData%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client<ph dataRef="id4" id="ph4" />VReg<ph dataRef="id5" id="ph5" />{VersionGUID}.dat</source>
          <target>Create the Registry.dat file from the package store to %ProgramData%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client<ph dataRef="id4" id="ph4" />VReg<ph dataRef="id5" id="ph5" />{VersionGUID}.dat</target>
        </segment>
      </unit>
      <unit id="567">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>Register the package with the App-V Kernal Mode Driver HKLM<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Software<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />MAV</source>
          <target>Register the package with the App-V Kernal Mode Driver HKLM<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Software<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />MAV</target>
        </segment>
      </unit>
      <unit id="568">
        <segment state="initial">
          <source>Invoke scripting from the AppxManifest.xml or DeploymentConfig.xml file for Package Add timing.</source>
          <target>Invoke scripting from the AppxManifest.xml or DeploymentConfig.xml file for Package Add timing.</target>
        </segment>
      </unit>
      <unit id="569">
        <segment state="initial">
          <source>Configure Connection Groups by adding and enabling or disabling.</source>
          <target>Configure Connection Groups by adding and enabling or disabling.</target>
        </segment>
      </unit>
      <unit id="570">
        <segment state="initial">
          <source>Remove objects that are not published to the target (user or machine).</source>
          <target>Remove objects that are not published to the target (user or machine).</target>
        </segment>
      </unit>
      <unit id="571">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="572">
        <segment state="initial">
          <source>This will not perform a package deletion but rather remove integration points for the specific target (user or machine) and remove user catalog files (machine catalog files for globally published).</source>
          <target>This will not perform a package deletion but rather remove integration points for the specific target (user or machine) and remove user catalog files (machine catalog files for globally published).</target>
        </segment>
      </unit>
      <unit id="573">
        <segment state="initial">
          <source>Invoke background load mounting based on client configuration.</source>
          <target>Invoke background load mounting based on client configuration.</target>
        </segment>
      </unit>
      <unit id="574">
        <segment state="initial">
          <source>Packages that already have publishing information for the machine or user are immediately restored.</source>
          <target>Packages that already have publishing information for the machine or user are immediately restored.</target>
        </segment>
      </unit>
      <unit id="575">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="576">
        <segment state="initial">
          <source>This condition occurs as a product of removal without unpublishing with background addition of the package.</source>
          <target>This condition occurs as a product of removal without unpublishing with background addition of the package.</target>
        </segment>
      </unit>
      <unit id="577">
        <segment state="initial">
          <source>This completes an App-V package add of the publishing refresh process.</source>
          <target>This completes an App-V package add of the publishing refresh process.</target>
        </segment>
      </unit>
      <unit id="578">
        <segment state="initial">
          <source>The next step is publishing the package to the specific target (machine or user).</source>
          <target>The next step is publishing the package to the specific target (machine or user).</target>
        </segment>
      </unit>
      <unit id="579">
        <segment state="initial">
          <source>package add file and registry data</source>
          <target>package add file and registry data</target>
        </segment>
      </unit>
      <unit id="580">
        <segment state="initial">
          <source>Publishing an App-V package</source>
          <target>Publishing an App-V package</target>
        </segment>
      </unit>
      <unit id="581">
        <segment state="initial">
          <source>During the Publishing Refresh operation, the specific publishing operation (Publish-AppVClientPackage) adds entries to the user catalog, maps entitlement to the user, identifies the local store, and finishes by completing any integration steps.</source>
          <target>During the Publishing Refresh operation, the specific publishing operation (Publish-AppVClientPackage) adds entries to the user catalog, maps entitlement to the user, identifies the local store, and finishes by completing any integration steps.</target>
        </segment>
      </unit>
      <unit id="582">
        <segment state="initial">
          <source>The following are the detailed steps.</source>
          <target>The following are the detailed steps.</target>
        </segment>
      </unit>
      <unit id="583">
        <segment state="initial">
          <source>How to publish and App-V package</source>
          <target>How to publish and App-V package</target>
        </segment>
      </unit>
      <unit id="584">
        <segment state="initial">
          <source>Package entries are added to the user catalog</source>
          <target>Package entries are added to the user catalog</target>
        </segment>
      </unit>
      <unit id="585">
        <segment state="initial">
          <source>User targeted packages: the UserDeploymentConfiguration.xml and UserManifest.xml are placed on the machine in the User Catalog</source>
          <target>User targeted packages: the UserDeploymentConfiguration.xml and UserManifest.xml are placed on the machine in the User Catalog</target>
        </segment>
      </unit>
      <unit id="586">
        <segment state="initial">
          <source>Machine targeted (global) packages: the UserDeploymentConfiguration.xml is placed in the Machine Catalog</source>
          <target>Machine targeted (global) packages: the UserDeploymentConfiguration.xml is placed in the Machine Catalog</target>
        </segment>
      </unit>
      <unit id="587">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>Register the package with the kernel mode driver for the user at HKLM<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />MAV</source>
          <target>Register the package with the kernel mode driver for the user at HKLM<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />MAV</target>
        </segment>
      </unit>
      <unit id="588">
        <segment state="initial">
          <source>Perform integration tasks.</source>
          <target>Perform integration tasks.</target>
        </segment>
      </unit>
      <unit id="589">
        <segment state="initial">
          <source>Create extension points.</source>
          <target>Create extension points.</target>
        </segment>
      </unit>
      <unit id="590">
        <segment state="initial">
          <source>Store backup information in the user’s registry and roaming profile (Shortcut Backups).</source>
          <target>Store backup information in the user’s registry and roaming profile (Shortcut Backups).</target>
        </segment>
      </unit>
      <unit id="591">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="592">
        <segment state="initial">
          <source>This enables restore extension points if the package is unpublished.</source>
          <target>This enables restore extension points if the package is unpublished.</target>
        </segment>
      </unit>
      <unit id="593">
        <segment state="initial">
          <source>Run scripts targeted for publishing timing.</source>
          <target>Run scripts targeted for publishing timing.</target>
        </segment>
      </unit>
      <unit id="594">
        <segment state="initial">
          <source>Publishing an App-V Package that is part of a Connection Group is very similar to the above process.</source>
          <target>Publishing an App-V Package that is part of a Connection Group is very similar to the above process.</target>
        </segment>
      </unit>
      <unit id="595">
        <segment state="initial">
          <source>For connection groups, the path that stores the specific catalog information includes PackageGroups as a child of the Catalog Directory.</source>
          <target>For connection groups, the path that stores the specific catalog information includes PackageGroups as a child of the Catalog Directory.</target>
        </segment>
      </unit>
      <unit id="596">
        <segment state="initial">
          <source>Review the machine and users catalog information above for details.</source>
          <target>Review the machine and users catalog information above for details.</target>
        </segment>
      </unit>
      <unit id="597">
        <segment state="initial">
          <source>package add file and registry data - global</source>
          <target>package add file and registry data - global</target>
        </segment>
      </unit>
      <unit id="598">
        <segment state="initial">
          <source>Application launch</source>
          <target>Application launch</target>
        </segment>
      </unit>
      <unit id="599">
        <segment state="initial">
          <source>After the Publishing Refresh process, the user launches and subsequently re-launches an App-V application.</source>
          <target>After the Publishing Refresh process, the user launches and subsequently re-launches an App-V application.</target>
        </segment>
      </unit>
      <unit id="600">
        <segment state="initial">
          <source>The process is very simple and optimized to launch quickly with a minimum of network traffic.</source>
          <target>The process is very simple and optimized to launch quickly with a minimum of network traffic.</target>
        </segment>
      </unit>
      <unit id="601">
        <segment state="initial">
          <source>The App-V Client checks the path to the user catalog for files created during publishing.</source>
          <target>The App-V Client checks the path to the user catalog for files created during publishing.</target>
        </segment>
      </unit>
      <unit id="602">
        <segment state="initial">
          <source>After rights to launch the package are established, the App-V Client creates a virtual environment, begins streaming any necessary data, and applies the appropriate manifest and deployment configuration files during virtual environment creation.</source>
          <target>After rights to launch the package are established, the App-V Client creates a virtual environment, begins streaming any necessary data, and applies the appropriate manifest and deployment configuration files during virtual environment creation.</target>
        </segment>
      </unit>
      <unit id="603">
        <segment state="initial">
          <source>With the virtual environment created and configured for the specific package and application, the application starts.</source>
          <target>With the virtual environment created and configured for the specific package and application, the application starts.</target>
        </segment>
      </unit>
      <unit id="604">
        <segment state="initial">
          <source>How to launch App-V applications</source>
          <target>How to launch App-V applications</target>
        </segment>
      </unit>
      <unit id="605">
        <segment state="initial">
          <source>User launches the application by clicking on a shortcut or file type invocation.</source>
          <target>User launches the application by clicking on a shortcut or file type invocation.</target>
        </segment>
      </unit>
      <unit id="606">
        <segment state="initial">
          <source>The App-V Client verifies existence in the User Catalog for the following files</source>
          <target>The App-V Client verifies existence in the User Catalog for the following files</target>
        </segment>
      </unit>
      <unit id="607">
        <segment state="initial">
          <source>UserDeploymentConfiguration.xml</source>
          <target>UserDeploymentConfiguration.xml</target>
        </segment>
      </unit>
      <unit id="608">
        <segment state="initial">
          <source>UserManifest.xml</source>
          <target>UserManifest.xml</target>
        </segment>
      </unit>
      <unit id="609">
        <segment state="initial">
          <source>If the files are present, the application is entitled for that specific user and the application will start the process for launch.</source>
          <target>If the files are present, the application is entitled for that specific user and the application will start the process for launch.</target>
        </segment>
      </unit>
      <unit id="610">
        <segment state="initial">
          <source>There is no network traffic at this point.</source>
          <target>There is no network traffic at this point.</target>
        </segment>
      </unit>
      <unit id="611">
        <segment state="initial">
          <source>Next, the App-V Client checks that the path for the package registered for the App-V Client service is found in the registry.</source>
          <target>Next, the App-V Client checks that the path for the package registered for the App-V Client service is found in the registry.</target>
        </segment>
      </unit>
      <unit id="612">
        <segment state="initial">
          <source>Upon finding the path to the package store, the virtual environment is created.</source>
          <target>Upon finding the path to the package store, the virtual environment is created.</target>
        </segment>
      </unit>
      <unit id="613">
        <segment state="initial">
          <source>If this is the first launch, the Primary Feature Block downloads if present.</source>
          <target>If this is the first launch, the Primary Feature Block downloads if present.</target>
        </segment>
      </unit>
      <unit id="614">
        <segment state="initial">
          <source>After downloading, the App-V Client service consumes the manifest and deployment configuration files to configure the virtual environment and all App-V subsystems are loaded.</source>
          <target>After downloading, the App-V Client service consumes the manifest and deployment configuration files to configure the virtual environment and all App-V subsystems are loaded.</target>
        </segment>
      </unit>
      <unit id="615">
        <segment state="initial">
          <source>The Application launches.</source>
          <target>The Application launches.</target>
        </segment>
      </unit>
      <unit id="616">
        <segment state="initial">
          <source>For any missing files in the package store (sparse files), App-V will stream fault the files on an as needed basis.</source>
          <target>For any missing files in the package store (sparse files), App-V will stream fault the files on an as needed basis.</target>
        </segment>
      </unit>
      <unit id="617">
        <segment state="initial">
          <source>package add file and registry data - stream</source>
          <target>package add file and registry data - stream</target>
        </segment>
      </unit>
      <unit id="618">
        <segment state="initial">
          <source>Upgrading an App-V package</source>
          <target>Upgrading an App-V package</target>
        </segment>
      </unit>
      <unit id="619">
        <segment state="initial">
          <source>The App-V 5 package upgrade process differs from the older versions of App-V.</source>
          <target>The App-V 5 package upgrade process differs from the older versions of App-V.</target>
        </segment>
      </unit>
      <unit id="620">
        <segment state="initial">
          <source>App-V supports multiple versions of the same package on a machine entitled to different users.</source>
          <target>App-V supports multiple versions of the same package on a machine entitled to different users.</target>
        </segment>
      </unit>
      <unit id="621">
        <segment state="initial">
          <source>Package versions can be added at any time as the package store and catalogs are updated with the new resources.</source>
          <target>Package versions can be added at any time as the package store and catalogs are updated with the new resources.</target>
        </segment>
      </unit>
      <unit id="622">
        <segment state="initial">
          <source>The only process specific to the addition of new version resources is storage optimization.</source>
          <target>The only process specific to the addition of new version resources is storage optimization.</target>
        </segment>
      </unit>
      <unit id="623">
        <segment state="initial">
          <source>During an upgrade, only the new files are added to the new version store location and hard links are created for unchanged files.</source>
          <target>During an upgrade, only the new files are added to the new version store location and hard links are created for unchanged files.</target>
        </segment>
      </unit>
      <unit id="624">
        <segment state="initial">
          <source>This reduces the overall storage by only presenting the file on one disk location and then projecting it into all folders with a file location entry on the disk.</source>
          <target>This reduces the overall storage by only presenting the file on one disk location and then projecting it into all folders with a file location entry on the disk.</target>
        </segment>
      </unit>
      <unit id="625">
        <segment state="initial">
          <source>The specific details of upgrading an App-V Package are as follows:</source>
          <target>The specific details of upgrading an App-V Package are as follows:</target>
        </segment>
      </unit>
      <unit id="626">
        <segment state="initial">
          <source>How to upgrade an App-V package</source>
          <target>How to upgrade an App-V package</target>
        </segment>
      </unit>
      <unit id="627">
        <segment state="initial">
          <source>The App-V Client performs a Publishing Refresh and discovers a newer version of an App-V Package.</source>
          <target>The App-V Client performs a Publishing Refresh and discovers a newer version of an App-V Package.</target>
        </segment>
      </unit>
      <unit id="628">
        <segment state="initial">
          <source>Package entries are added to the appropriate catalog for the new version</source>
          <target>Package entries are added to the appropriate catalog for the new version</target>
        </segment>
      </unit>
      <unit id="629">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\\</data>
        </originalData>
        <segment state="initial">
          <source>User targeted packages: the UserDeploymentConfiguration.xml and UserManifest.xml are placed on the machine in the user catalog at appdata<ph dataRef="id1" id="ph1" />roaming<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />Client<ph dataRef="id5" id="ph5" />Catalog<ph dataRef="id6" id="ph6" />Packages<ph dataRef="id7" id="ph7" />PkgGUID<ph dataRef="id8" id="ph8" />VerGUID</source>
          <target>User targeted packages: the UserDeploymentConfiguration.xml and UserManifest.xml are placed on the machine in the user catalog at appdata<ph dataRef="id1" id="ph1" />roaming<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />Client<ph dataRef="id5" id="ph5" />Catalog<ph dataRef="id6" id="ph6" />Packages<ph dataRef="id7" id="ph7" />PkgGUID<ph dataRef="id8" id="ph8" />VerGUID</target>
        </segment>
      </unit>
      <unit id="630">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
        </originalData>
        <segment state="initial">
          <source>Machine targeted (global) packages: the UserDeploymentConfiguration.xml is placed in the machine catalog at %programdata%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client<ph dataRef="id4" id="ph4" />Catalog<ph dataRef="id5" id="ph5" />Packages<ph dataRef="id6" id="ph6" />PkgGUID<ph dataRef="id7" id="ph7" />VerGUID</source>
          <target>Machine targeted (global) packages: the UserDeploymentConfiguration.xml is placed in the machine catalog at %programdata%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client<ph dataRef="id4" id="ph4" />Catalog<ph dataRef="id5" id="ph5" />Packages<ph dataRef="id6" id="ph6" />PkgGUID<ph dataRef="id7" id="ph7" />VerGUID</target>
        </segment>
      </unit>
      <unit id="631">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>Register the package with the kernel mode driver for the user at HKLM<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />MAV</source>
          <target>Register the package with the kernel mode driver for the user at HKLM<ph dataRef="id1" id="ph1" />Software<ph dataRef="id2" id="ph2" />Microsoft<ph dataRef="id3" id="ph3" />AppV<ph dataRef="id4" id="ph4" />MAV</target>
        </segment>
      </unit>
      <unit id="632">
        <segment state="initial">
          <source>Perform integration tasks.</source>
          <target>Perform integration tasks.</target>
        </segment>
      </unit>
      <unit id="633">
        <segment state="initial">
          <source>Integrate extensions points (EP) from the Manifest and Dynamic Configuration files.</source>
          <target>Integrate extensions points (EP) from the Manifest and Dynamic Configuration files.</target>
        </segment>
      </unit>
      <unit id="634">
        <segment state="initial">
          <source>File based EP data is stored in the AppData folder utilizing Junction Points from the package store.</source>
          <target>File based EP data is stored in the AppData folder utilizing Junction Points from the package store.</target>
        </segment>
      </unit>
      <unit id="635">
        <segment state="initial">
          <source>Version 1 EPs already exist when a new version becomes available.</source>
          <target>Version 1 EPs already exist when a new version becomes available.</target>
        </segment>
      </unit>
      <unit id="636">
        <segment state="initial">
          <source>The extension points are switched to the Version 2 location in machine or user catalogs for any newer or updated extension points.</source>
          <target>The extension points are switched to the Version 2 location in machine or user catalogs for any newer or updated extension points.</target>
        </segment>
      </unit>
      <unit id="637">
        <segment state="initial">
          <source>Run scripts targeted for publishing timing.</source>
          <target>Run scripts targeted for publishing timing.</target>
        </segment>
      </unit>
      <unit id="638">
        <segment state="initial">
          <source>Install Side by Side assemblies as required.</source>
          <target>Install Side by Side assemblies as required.</target>
        </segment>
      </unit>
      <unit id="639">
        <segment state="initial">
          <source>Upgrading an in-use App-V package</source>
          <target>Upgrading an in-use App-V package</target>
        </segment>
      </unit>
      <unit id="640">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Starting in App-V 5 SP2</pc>: If you try to upgrade a package that is in use by an end user, the upgrade task is placed in a pending state.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Starting in App-V 5 SP2</pc>: If you try to upgrade a package that is in use by an end user, the upgrade task is placed in a pending state.</target>
        </segment>
      </unit>
      <unit id="641">
        <segment state="initial">
          <source>The upgrade will run later, according to the following rules:</source>
          <target>The upgrade will run later, according to the following rules:</target>
        </segment>
      </unit>
      <unit id="642">
        <segment state="initial">
          <source>Task type</source>
          <target>Task type</target>
        </segment>
      </unit>
      <unit id="643">
        <segment state="initial">
          <source>Applicable rule</source>
          <target>Applicable rule</target>
        </segment>
      </unit>
      <unit id="644">
        <segment state="initial">
          <source>User-based task, e.g., publishing a package to a user</source>
          <target>User-based task, e.g., publishing a package to a user</target>
        </segment>
      </unit>
      <unit id="645">
        <segment state="initial">
          <source>The pending task will be performed after the user logs off and then logs back on.</source>
          <target>The pending task will be performed after the user logs off and then logs back on.</target>
        </segment>
      </unit>
      <unit id="646">
        <segment state="initial">
          <source>Globally based task, e.g., enabling a connection group globally</source>
          <target>Globally based task, e.g., enabling a connection group globally</target>
        </segment>
      </unit>
      <unit id="647">
        <segment state="initial">
          <source>The pending task will be performed when the computer is shut down and then restarted.</source>
          <target>The pending task will be performed when the computer is shut down and then restarted.</target>
        </segment>
      </unit>
      <unit id="648">
        <segment state="initial">
          <source>When a task is placed in a pending state, the App-V client also generates a registry key for the pending task, as follows:</source>
          <target>When a task is placed in a pending state, the App-V client also generates a registry key for the pending task, as follows:</target>
        </segment>
      </unit>
      <unit id="649">
        <segment state="initial">
          <source>User-based or globally based task</source>
          <target>User-based or globally based task</target>
        </segment>
      </unit>
      <unit id="650">
        <segment state="initial">
          <source>Where the registry key is generated</source>
          <target>Where the registry key is generated</target>
        </segment>
      </unit>
      <unit id="651">
        <segment state="initial">
          <source>User-based tasks</source>
          <target>User-based tasks</target>
        </segment>
      </unit>
      <unit id="652">
        <segment state="initial">
          <source>KEY_CURRENT_USER\Software\Microsoft\AppV\Client\PendingTasks</source>
          <target>KEY_CURRENT_USER\Software\Microsoft\AppV\Client\PendingTasks</target>
        </segment>
      </unit>
      <unit id="653">
        <segment state="initial">
          <source>Globally based tasks</source>
          <target>Globally based tasks</target>
        </segment>
      </unit>
      <unit id="654">
        <segment state="initial">
          <source>HKEY_LOCAL_MACHINE\Software\Microsoft\AppV\Client\PendingTasks</source>
          <target>HKEY_LOCAL_MACHINE\Software\Microsoft\AppV\Client\PendingTasks</target>
        </segment>
      </unit>
      <unit id="655">
        <segment state="initial">
          <source>The following operations must be completed before users can use the newer version of the package:</source>
          <target>The following operations must be completed before users can use the newer version of the package:</target>
        </segment>
      </unit>
      <unit id="656">
        <segment state="initial">
          <source>Task</source>
          <target>Task</target>
        </segment>
      </unit>
      <unit id="657">
        <segment state="initial">
          <source>Details</source>
          <target>Details</target>
        </segment>
      </unit>
      <unit id="658">
        <segment state="initial">
          <source>Add the package to the computer</source>
          <target>Add the package to the computer</target>
        </segment>
      </unit>
      <unit id="659">
        <segment state="initial">
          <source>This task is computer specific and you can perform it at any time by completing the steps in the Package Add section above.</source>
          <target>This task is computer specific and you can perform it at any time by completing the steps in the Package Add section above.</target>
        </segment>
      </unit>
      <unit id="660">
        <segment state="initial">
          <source>Publish the package</source>
          <target>Publish the package</target>
        </segment>
      </unit>
      <unit id="661">
        <segment state="initial">
          <source>See the Package Publishing section above for steps.</source>
          <target>See the Package Publishing section above for steps.</target>
        </segment>
      </unit>
      <unit id="662">
        <segment state="initial">
          <source>This process requires that you update extension points on the system.</source>
          <target>This process requires that you update extension points on the system.</target>
        </segment>
      </unit>
      <unit id="663">
        <segment state="initial">
          <source>End users cannot be using the application when you complete this task.</source>
          <target>End users cannot be using the application when you complete this task.</target>
        </segment>
      </unit>
      <unit id="664">
        <segment state="initial">
          <source>Use the following example scenarios as a guide for updating packages.</source>
          <target>Use the following example scenarios as a guide for updating packages.</target>
        </segment>
      </unit>
      <unit id="665">
        <segment state="initial">
          <source>Scenario</source>
          <target>Scenario</target>
        </segment>
      </unit>
      <unit id="666">
        <segment state="initial">
          <source>Requirements</source>
          <target>Requirements</target>
        </segment>
      </unit>
      <unit id="667">
        <segment state="initial">
          <source>App-V package is not in use when you try to upgrade</source>
          <target>App-V package is not in use when you try to upgrade</target>
        </segment>
      </unit>
      <unit id="668">
        <segment state="initial">
          <source>None of the following components of the package can be in use: virtual application, COM server, or shell extensions.</source>
          <target>None of the following components of the package can be in use: virtual application, COM server, or shell extensions.</target>
        </segment>
      </unit>
      <unit id="669">
        <segment state="initial">
          <source>The administrator publishes a newer version of the package and the upgrade works the next time a component or application inside the package is launched.</source>
          <target>The administrator publishes a newer version of the package and the upgrade works the next time a component or application inside the package is launched.</target>
        </segment>
      </unit>
      <unit id="670">
        <segment state="initial">
          <source>The new version of the package is streamed and run.</source>
          <target>The new version of the package is streamed and run.</target>
        </segment>
      </unit>
      <unit id="671">
        <segment state="initial">
          <source>Nothing has changed in this scenario in App-V 5 SP2 from previous releases of App-V 5.</source>
          <target>Nothing has changed in this scenario in App-V 5 SP2 from previous releases of App-V 5.</target>
        </segment>
      </unit>
      <unit id="672">
        <segment state="initial">
          <source>App-V package is in use when the administrator publishes a newer version of the package</source>
          <target>App-V package is in use when the administrator publishes a newer version of the package</target>
        </segment>
      </unit>
      <unit id="673">
        <segment state="initial">
          <source>The upgrade operation is set to pending by the App-V Client, which means that it is queued and carried out later when the package is not in use.</source>
          <target>The upgrade operation is set to pending by the App-V Client, which means that it is queued and carried out later when the package is not in use.</target>
        </segment>
      </unit>
      <unit id="674">
        <segment state="initial">
          <source>If the package application is in use, the user shuts down the virtual application, after which the upgrade can occur.</source>
          <target>If the package application is in use, the user shuts down the virtual application, after which the upgrade can occur.</target>
        </segment>
      </unit>
      <unit id="675">
        <segment state="initial">
          <source>If the package has shell extensions (Office 2013), which are permanently loaded by Windows Explorer, the user cannot be logged in.</source>
          <target>If the package has shell extensions (Office 2013), which are permanently loaded by Windows Explorer, the user cannot be logged in.</target>
        </segment>
      </unit>
      <unit id="676">
        <segment state="initial">
          <source>Users must log off and the log back in to initiate the App-V package upgrade.</source>
          <target>Users must log off and the log back in to initiate the App-V package upgrade.</target>
        </segment>
      </unit>
      <unit id="677">
        <segment state="initial">
          <source>Global vs user publishing</source>
          <target>Global vs user publishing</target>
        </segment>
      </unit>
      <unit id="678">
        <segment state="initial">
          <source>App-V Packages can be published in one of two ways; User which entitles an App-V package to a specific user or group of users and Global which entitles the App-V package to the entire machine for all users of the machine.</source>
          <target>App-V Packages can be published in one of two ways; User which entitles an App-V package to a specific user or group of users and Global which entitles the App-V package to the entire machine for all users of the machine.</target>
        </segment>
      </unit>
      <unit id="679">
        <segment state="initial">
          <source>Once a package upgrade has been pended and the App-V package is not in use, consider the two types of publishing:</source>
          <target>Once a package upgrade has been pended and the App-V package is not in use, consider the two types of publishing:</target>
        </segment>
      </unit>
      <unit id="680">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Globally published</pc>: the application is published to a machine; all users on that machine can use it.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Globally published</pc>: the application is published to a machine; all users on that machine can use it.</target>
        </segment>
      </unit>
      <unit id="681">
        <segment state="initial">
          <source>The upgrade will happen when the App-V Client Service starts, which effectively means a machine restart.</source>
          <target>The upgrade will happen when the App-V Client Service starts, which effectively means a machine restart.</target>
        </segment>
      </unit>
      <unit id="682">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User published</pc>: the application is published to a user.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User published</pc>: the application is published to a user.</target>
        </segment>
      </unit>
      <unit id="683">
        <segment state="initial">
          <source>If there are multiple users on the machine, the application can be published to a subset of the users.</source>
          <target>If there are multiple users on the machine, the application can be published to a subset of the users.</target>
        </segment>
      </unit>
      <unit id="684">
        <segment state="initial">
          <source>The upgrade will happen when the user logs in or when it is published again (periodically, ConfigMgr Policy refresh and evaluation, or an App-V periodic publishing/refresh, or explicitly via PowerShell commands).</source>
          <target>The upgrade will happen when the user logs in or when it is published again (periodically, ConfigMgr Policy refresh and evaluation, or an App-V periodic publishing/refresh, or explicitly via PowerShell commands).</target>
        </segment>
      </unit>
      <unit id="685">
        <segment state="initial">
          <source>Removing an App-V package</source>
          <target>Removing an App-V package</target>
        </segment>
      </unit>
      <unit id="686">
        <segment state="initial">
          <source>Removing App-V applications in a Full Infrastructure is an unpublish operation, and does not perform a package removal.</source>
          <target>Removing App-V applications in a Full Infrastructure is an unpublish operation, and does not perform a package removal.</target>
        </segment>
      </unit>
      <unit id="687">
        <segment state="initial">
          <source>The process is the same as the publish process above, but instead of adding the removal process reverses the changes that have been made for App-V Packages.</source>
          <target>The process is the same as the publish process above, but instead of adding the removal process reverses the changes that have been made for App-V Packages.</target>
        </segment>
      </unit>
      <unit id="688">
        <segment state="initial">
          <source>Repairing an App-V package</source>
          <target>Repairing an App-V package</target>
        </segment>
      </unit>
      <unit id="689">
        <segment state="initial">
          <source>The repair operation is very simple but may affect many locations on the machine.</source>
          <target>The repair operation is very simple but may affect many locations on the machine.</target>
        </segment>
      </unit>
      <unit id="690">
        <segment state="initial">
          <source>The previously mentioned Copy on Write (COW) locations are removed, and extension points are de-integrated and then re-integrated.</source>
          <target>The previously mentioned Copy on Write (COW) locations are removed, and extension points are de-integrated and then re-integrated.</target>
        </segment>
      </unit>
      <unit id="691">
        <segment state="initial">
          <source>Please review the COW data placement locations by reviewing where they are registered in the registry.</source>
          <target>Please review the COW data placement locations by reviewing where they are registered in the registry.</target>
        </segment>
      </unit>
      <unit id="692">
        <segment state="initial">
          <source>This operation is done automatically and there is no administrative control other than initiating a Repair operation from the App-V Client Console or via PowerShell (Repair-AppVClientPackage).</source>
          <target>This operation is done automatically and there is no administrative control other than initiating a Repair operation from the App-V Client Console or via PowerShell (Repair-AppVClientPackage).</target>
        </segment>
      </unit>
      <unit id="693">
        <segment state="initial">
          <source>Integration of App-V packages</source>
          <target>Integration of App-V packages</target>
        </segment>
      </unit>
      <unit id="694">
        <segment state="initial">
          <source>The App-V Client and package architecture provides specific integration with the local operating system during the addition and publishing of packages.</source>
          <target>The App-V Client and package architecture provides specific integration with the local operating system during the addition and publishing of packages.</target>
        </segment>
      </unit>
      <unit id="695">
        <segment state="initial">
          <source>Three files define the integration or extension points for an App-V Package:</source>
          <target>Three files define the integration or extension points for an App-V Package:</target>
        </segment>
      </unit>
      <unit id="696">
        <segment state="initial">
          <source>AppXManifest.xml: Stored inside of the package with fallback copies stored in the package store and the user profile.</source>
          <target>AppXManifest.xml: Stored inside of the package with fallback copies stored in the package store and the user profile.</target>
        </segment>
      </unit>
      <unit id="697">
        <segment state="initial">
          <source>Contains the options created during the sequencing process.</source>
          <target>Contains the options created during the sequencing process.</target>
        </segment>
      </unit>
      <unit id="698">
        <segment state="initial">
          <source>DeploymentConfig.xml: Provides configuration information of computer and user based integration extension points.</source>
          <target>DeploymentConfig.xml: Provides configuration information of computer and user based integration extension points.</target>
        </segment>
      </unit>
      <unit id="699">
        <segment state="initial">
          <source>UserConfig.xml: A subset of the Deploymentconfig.xml that only provides user- based configurations and only targets user-based extension points.</source>
          <target>UserConfig.xml: A subset of the Deploymentconfig.xml that only provides user- based configurations and only targets user-based extension points.</target>
        </segment>
      </unit>
      <unit id="700">
        <segment state="initial">
          <source>Rules of integration</source>
          <target>Rules of integration</target>
        </segment>
      </unit>
      <unit id="701">
        <segment state="initial">
          <source>When App-V applications are published to a computer with the App-V Client, some specific actions take place as described in the list below:</source>
          <target>When App-V applications are published to a computer with the App-V Client, some specific actions take place as described in the list below:</target>
        </segment>
      </unit>
      <unit id="702">
        <segment state="initial">
          <source>Global Publishing: Shortcuts are stored in the All Users profile location and other extension points are stored in the registry in the HKLM hive.</source>
          <target>Global Publishing: Shortcuts are stored in the All Users profile location and other extension points are stored in the registry in the HKLM hive.</target>
        </segment>
      </unit>
      <unit id="703">
        <segment state="initial">
          <source>User Publishing: Shortcuts are stored in the current user account profile and other extension points are stored in the registry in the HKCU hive.</source>
          <target>User Publishing: Shortcuts are stored in the current user account profile and other extension points are stored in the registry in the HKCU hive.</target>
        </segment>
      </unit>
      <unit id="704">
        <segment state="initial">
          <source>Backup and Restore: Existing native application data and registry (such as FTA registrations) are backed up during publishing.</source>
          <target>Backup and Restore: Existing native application data and registry (such as FTA registrations) are backed up during publishing.</target>
        </segment>
      </unit>
      <unit id="705">
        <segment state="initial">
          <source>App-V packages are given ownership based on the last integrated package where the ownership is passed to the newest published App-V application.</source>
          <target>App-V packages are given ownership based on the last integrated package where the ownership is passed to the newest published App-V application.</target>
        </segment>
      </unit>
      <unit id="706">
        <segment state="initial">
          <source>Ownership transfers from one App-V package to another when the owning App-V package is unpublished.</source>
          <target>Ownership transfers from one App-V package to another when the owning App-V package is unpublished.</target>
        </segment>
      </unit>
      <unit id="707">
        <segment state="initial">
          <source>This will not initiate a restore of the data or registry.</source>
          <target>This will not initiate a restore of the data or registry.</target>
        </segment>
      </unit>
      <unit id="708">
        <segment state="initial">
          <source>Restore the backed up data when the last package is unpublished or removed on a per extension point basis.</source>
          <target>Restore the backed up data when the last package is unpublished or removed on a per extension point basis.</target>
        </segment>
      </unit>
      <unit id="709">
        <segment state="initial">
          <source>Extension points</source>
          <target>Extension points</target>
        </segment>
      </unit>
      <unit id="710">
        <segment state="initial">
          <source>The App-V publishing files (manifest and dynamic configuration) provide several extension points that enable the application to integrate with the local operating system.</source>
          <target>The App-V publishing files (manifest and dynamic configuration) provide several extension points that enable the application to integrate with the local operating system.</target>
        </segment>
      </unit>
      <unit id="711">
        <segment state="initial">
          <source>These extension points perform typical application installation tasks, such as placing shortcuts, creating file type associations, and registering components.</source>
          <target>These extension points perform typical application installation tasks, such as placing shortcuts, creating file type associations, and registering components.</target>
        </segment>
      </unit>
      <unit id="712">
        <segment state="initial">
          <source>As these are virtualized applications that are not installed in the same manner a traditional application, there are some differences.</source>
          <target>As these are virtualized applications that are not installed in the same manner a traditional application, there are some differences.</target>
        </segment>
      </unit>
      <unit id="713">
        <segment state="initial">
          <source>The following is a list of extension points covered in this section:</source>
          <target>The following is a list of extension points covered in this section:</target>
        </segment>
      </unit>
      <unit id="714">
        <segment state="initial">
          <source>Shortcuts</source>
          <target>Shortcuts</target>
        </segment>
      </unit>
      <unit id="715">
        <segment state="initial">
          <source>File Type Associations</source>
          <target>File Type Associations</target>
        </segment>
      </unit>
      <unit id="716">
        <segment state="initial">
          <source>Shell Extensions</source>
          <target>Shell Extensions</target>
        </segment>
      </unit>
      <unit id="717">
        <segment state="initial">
          <source>COM</source>
          <target>COM</target>
        </segment>
      </unit>
      <unit id="718">
        <segment state="initial">
          <source>Software Clients</source>
          <target>Software Clients</target>
        </segment>
      </unit>
      <unit id="719">
        <segment state="initial">
          <source>Application capabilities</source>
          <target>Application capabilities</target>
        </segment>
      </unit>
      <unit id="720">
        <segment state="initial">
          <source>URL Protocol Handler</source>
          <target>URL Protocol Handler</target>
        </segment>
      </unit>
      <unit id="721">
        <segment state="initial">
          <source>AppPath</source>
          <target>AppPath</target>
        </segment>
      </unit>
      <unit id="722">
        <segment state="initial">
          <source>Virtual Application</source>
          <target>Virtual Application</target>
        </segment>
      </unit>
      <unit id="723">
        <segment state="initial">
          <source>Shortcuts</source>
          <target>Shortcuts</target>
        </segment>
      </unit>
      <unit id="724">
        <segment state="initial">
          <source>The short cut is one of the basic elements of integration with the OS and is the interface for direct user launch of an App-V application.</source>
          <target>The short cut is one of the basic elements of integration with the OS and is the interface for direct user launch of an App-V application.</target>
        </segment>
      </unit>
      <unit id="725">
        <segment state="initial">
          <source>During the publishing and unpublishing of App-V applications.</source>
          <target>During the publishing and unpublishing of App-V applications.</target>
        </segment>
      </unit>
      <unit id="726">
        <segment state="initial">
          <source>From the package manifest and dynamic configuration XML files, the path to a specific application executable can be found in a section similar to the following:</source>
          <target>From the package manifest and dynamic configuration XML files, the path to a specific application executable can be found in a section similar to the following:</target>
        </segment>
      </unit>
      <unit id="727">
        <segment state="initial">
          <source>As mentioned previously, the App-V shortcuts are placed by default in the user’s profile based on the refresh operation.</source>
          <target>As mentioned previously, the App-V shortcuts are placed by default in the user’s profile based on the refresh operation.</target>
        </segment>
      </unit>
      <unit id="728">
        <segment state="initial">
          <source>Global refresh places shortcuts in the All Users profile and user refresh stores them in the specific user’s profile.</source>
          <target>Global refresh places shortcuts in the All Users profile and user refresh stores them in the specific user’s profile.</target>
        </segment>
      </unit>
      <unit id="729">
        <segment state="initial">
          <source>The actual executable is stored in the Package Store.</source>
          <target>The actual executable is stored in the Package Store.</target>
        </segment>
      </unit>
      <unit id="730">
        <segment state="initial">
          <source>The location of the ICO file is a tokenized location in the App-V package.</source>
          <target>The location of the ICO file is a tokenized location in the App-V package.</target>
        </segment>
      </unit>
      <unit id="731">
        <segment state="initial">
          <source>File type associations</source>
          <target>File type associations</target>
        </segment>
      </unit>
      <unit id="732">
        <segment state="initial">
          <source>The App-V Client manages the local operating system File Type Associations during publishing, which enables users to use file type invocations or to open a file with a specifically registered extension (.docx) to start an App-V application.</source>
          <target>The App-V Client manages the local operating system File Type Associations during publishing, which enables users to use file type invocations or to open a file with a specifically registered extension (.docx) to start an App-V application.</target>
        </segment>
      </unit>
      <unit id="733">
        <segment state="initial">
          <source>File type associations are present in the manifest and dynamic configuration files as represented in the example below:</source>
          <target>File type associations are present in the manifest and dynamic configuration files as represented in the example below:</target>
        </segment>
      </unit>
      <unit id="734">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="735">
        <segment state="initial">
          <source>In this example:</source>
          <target>In this example:</target>
        </segment>
      </unit>
      <unit id="736">
        <segment state="initial">
          <source>is the extension</source>
          <target>is the extension</target>
        </segment>
      </unit>
      <unit id="737">
        <segment state="initial">
          <source>is the ProgId value (which points to the adjoining ProgId)</source>
          <target>is the ProgId value (which points to the adjoining ProgId)</target>
        </segment>
      </unit>
      <unit id="738">
        <segment state="initial">
          <source>is the command line, which points to the application executable</source>
          <target>is the command line, which points to the application executable</target>
        </segment>
      </unit>
      <unit id="739">
        <segment state="initial">
          <source>Shell extensions</source>
          <target>Shell extensions</target>
        </segment>
      </unit>
      <unit id="740">
        <segment state="initial">
          <source>Shell extensions are embedded in the package automatically during the sequencing process.</source>
          <target>Shell extensions are embedded in the package automatically during the sequencing process.</target>
        </segment>
      </unit>
      <unit id="741">
        <segment state="initial">
          <source>When the package is published globally, the shell extension gives users the same functionality as if the application were locally installed.</source>
          <target>When the package is published globally, the shell extension gives users the same functionality as if the application were locally installed.</target>
        </segment>
      </unit>
      <unit id="742">
        <segment state="initial">
          <source>The application requires no additional setup or configuration on the client to enable the shell extension functionality.</source>
          <target>The application requires no additional setup or configuration on the client to enable the shell extension functionality.</target>
        </segment>
      </unit>
      <unit id="743">
        <segment state="initial">
          <source>Requirements for using shell extensions:</source>
          <target>Requirements for using shell extensions:</target>
        </segment>
      </unit>
      <unit id="744">
        <segment state="initial">
          <source>Packages that contain embedded shell extensions must be published globally.</source>
          <target>Packages that contain embedded shell extensions must be published globally.</target>
        </segment>
      </unit>
      <unit id="745">
        <segment state="initial">
          <source>The “bitness” of the application, Sequencer, and App-V client must match, or the shell extensions won’t work.</source>
          <target>The “bitness” of the application, Sequencer, and App-V client must match, or the shell extensions won’t work.</target>
        </segment>
      </unit>
      <unit id="746">
        <segment state="initial">
          <source>For example:</source>
          <target>For example:</target>
        </segment>
      </unit>
      <unit id="747">
        <segment state="initial">
          <source>The version of the application is 64-bit.</source>
          <target>The version of the application is 64-bit.</target>
        </segment>
      </unit>
      <unit id="748">
        <segment state="initial">
          <source>The Sequencer is running on a 64-bit computer.</source>
          <target>The Sequencer is running on a 64-bit computer.</target>
        </segment>
      </unit>
      <unit id="749">
        <segment state="initial">
          <source>The package is being delivered to a 64-bit App-V client computer.</source>
          <target>The package is being delivered to a 64-bit App-V client computer.</target>
        </segment>
      </unit>
      <unit id="750">
        <segment state="initial">
          <source>The following table displays the supported shell extensions.</source>
          <target>The following table displays the supported shell extensions.</target>
        </segment>
      </unit>
      <unit id="751">
        <segment state="initial">
          <source>Handler</source>
          <target>Handler</target>
        </segment>
      </unit>
      <unit id="752">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="753">
        <segment state="initial">
          <source>Context menu handler</source>
          <target>Context menu handler</target>
        </segment>
      </unit>
      <unit id="754">
        <segment state="initial">
          <source>Adds menu items to the context menu.</source>
          <target>Adds menu items to the context menu.</target>
        </segment>
      </unit>
      <unit id="755">
        <segment state="initial">
          <source>It is called before the context menu is displayed.</source>
          <target>It is called before the context menu is displayed.</target>
        </segment>
      </unit>
      <unit id="756">
        <segment state="initial">
          <source>Drag-and-drop handler</source>
          <target>Drag-and-drop handler</target>
        </segment>
      </unit>
      <unit id="757">
        <segment state="initial">
          <source>Controls the action upon right-click drag-and-drop and modifies the context menu that appears.</source>
          <target>Controls the action upon right-click drag-and-drop and modifies the context menu that appears.</target>
        </segment>
      </unit>
      <unit id="758">
        <segment state="initial">
          <source>Drop target handler</source>
          <target>Drop target handler</target>
        </segment>
      </unit>
      <unit id="759">
        <segment state="initial">
          <source>Controls the action after a data object is dragged-and-dropped over a drop target such as a file.</source>
          <target>Controls the action after a data object is dragged-and-dropped over a drop target such as a file.</target>
        </segment>
      </unit>
      <unit id="760">
        <segment state="initial">
          <source>Data object handler</source>
          <target>Data object handler</target>
        </segment>
      </unit>
      <unit id="761">
        <segment state="initial">
          <source>Controls the action after a file is copied to the clipboard or dragged-and-dropped over a drop target.</source>
          <target>Controls the action after a file is copied to the clipboard or dragged-and-dropped over a drop target.</target>
        </segment>
      </unit>
      <unit id="762">
        <segment state="initial">
          <source>It can provide additional clipboard formats to the drop target.</source>
          <target>It can provide additional clipboard formats to the drop target.</target>
        </segment>
      </unit>
      <unit id="763">
        <segment state="initial">
          <source>Property sheet handler</source>
          <target>Property sheet handler</target>
        </segment>
      </unit>
      <unit id="764">
        <segment state="initial">
          <source>Replaces or adds pages to the property sheet dialog box of an object.</source>
          <target>Replaces or adds pages to the property sheet dialog box of an object.</target>
        </segment>
      </unit>
      <unit id="765">
        <segment state="initial">
          <source>Infotip handler</source>
          <target>Infotip handler</target>
        </segment>
      </unit>
      <unit id="766">
        <segment state="initial">
          <source>Allows retrieving flags and infotip information for an item and displaying it inside a popup tooltip upon mouse- hover.</source>
          <target>Allows retrieving flags and infotip information for an item and displaying it inside a popup tooltip upon mouse- hover.</target>
        </segment>
      </unit>
      <unit id="767">
        <segment state="initial">
          <source>Column handler</source>
          <target>Column handler</target>
        </segment>
      </unit>
      <unit id="768">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Allows creating and displaying custom columns in Windows Explorer <ph dataRef="id1" id="ph1" />Details view<ph dataRef="id2" id="ph2" />.</source>
          <target>Allows creating and displaying custom columns in Windows Explorer <ph dataRef="id1" id="ph1" />Details view<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="769">
        <segment state="initial">
          <source>It can be used to extend sorting and grouping.</source>
          <target>It can be used to extend sorting and grouping.</target>
        </segment>
      </unit>
      <unit id="770">
        <segment state="initial">
          <source>Preview handler</source>
          <target>Preview handler</target>
        </segment>
      </unit>
      <unit id="771">
        <segment state="initial">
          <source>Enables a preview of a file to be displayed in the Windows Explorer Preview Pane.</source>
          <target>Enables a preview of a file to be displayed in the Windows Explorer Preview Pane.</target>
        </segment>
      </unit>
      <unit id="772">
        <segment state="initial">
          <source>COM</source>
          <target>COM</target>
        </segment>
      </unit>
      <unit id="773">
        <segment state="initial">
          <source>The App-V Client supports publishing applications with support for COM integration and virtualization.</source>
          <target>The App-V Client supports publishing applications with support for COM integration and virtualization.</target>
        </segment>
      </unit>
      <unit id="774">
        <segment state="initial">
          <source>COM integration allows the App-V Client to register COM objects on the local operating system and virtualization of the objects.</source>
          <target>COM integration allows the App-V Client to register COM objects on the local operating system and virtualization of the objects.</target>
        </segment>
      </unit>
      <unit id="775">
        <segment state="initial">
          <source>For the purposes of this document, the integration of COM objects requires additional detail.</source>
          <target>For the purposes of this document, the integration of COM objects requires additional detail.</target>
        </segment>
      </unit>
      <unit id="776">
        <segment state="initial">
          <source>App-V supports registering COM objects from the package to the local operating system with two process types: Out-of-process and in-process.</source>
          <target>App-V supports registering COM objects from the package to the local operating system with two process types: Out-of-process and in-process.</target>
        </segment>
      </unit>
      <unit id="777">
        <segment state="initial">
          <source>Registering COM objects is accomplished with one or a combination of multiple modes of operation for a specific App-V package that includes off, Isolated, and Integrated.</source>
          <target>Registering COM objects is accomplished with one or a combination of multiple modes of operation for a specific App-V package that includes off, Isolated, and Integrated.</target>
        </segment>
      </unit>
      <unit id="778">
        <segment state="initial">
          <source>The integrated mode is configured for either the out-of-process or in-process type.</source>
          <target>The integrated mode is configured for either the out-of-process or in-process type.</target>
        </segment>
      </unit>
      <unit id="779">
        <segment state="initial">
          <source>Configuration of COM modes and types is accomplished with dynamic configuration files (deploymentconfig.xml or userconfig.xml).</source>
          <target>Configuration of COM modes and types is accomplished with dynamic configuration files (deploymentconfig.xml or userconfig.xml).</target>
        </segment>
      </unit>
      <unit id="780">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Details on App-V integration are available at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392834</pc>.</source>
          <target>Details on App-V integration are available at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392834</pc>.</target>
        </segment>
      </unit>
      <unit id="781">
        <segment state="initial">
          <source>Software clients and application capabilities</source>
          <target>Software clients and application capabilities</target>
        </segment>
      </unit>
      <unit id="782">
        <segment state="initial">
          <source>App-V supports specific software clients and application capabilities extension points that enable virtualized applications to be registered with the software client of the operating system.</source>
          <target>App-V supports specific software clients and application capabilities extension points that enable virtualized applications to be registered with the software client of the operating system.</target>
        </segment>
      </unit>
      <unit id="783">
        <segment state="initial">
          <source>This enables users to select default programs for operations like email, instant messaging, and media player.</source>
          <target>This enables users to select default programs for operations like email, instant messaging, and media player.</target>
        </segment>
      </unit>
      <unit id="784">
        <segment state="initial">
          <source>This operation is performed in the control panel with the Set Program Access and Computer Defaults, and configured during sequencing in the manifest or dynamic configuration files.</source>
          <target>This operation is performed in the control panel with the Set Program Access and Computer Defaults, and configured during sequencing in the manifest or dynamic configuration files.</target>
        </segment>
      </unit>
      <unit id="785">
        <segment state="initial">
          <source>Application capabilities are only supported when the App-V applications are published globally.</source>
          <target>Application capabilities are only supported when the App-V applications are published globally.</target>
        </segment>
      </unit>
      <unit id="786">
        <segment state="initial">
          <source>Example of software client registration of an App-V based mail client.</source>
          <target>Example of software client registration of an App-V based mail client.</target>
        </segment>
      </unit>
      <unit id="787">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="788">
        <segment state="initial">
          <source>In this example:</source>
          <target>In this example:</target>
        </segment>
      </unit>
      <unit id="789">
        <segment state="initial">
          <source>is the overall Software Clients setting to integrate Email clients</source>
          <target>is the overall Software Clients setting to integrate Email clients</target>
        </segment>
      </unit>
      <unit id="790">
        <segment state="initial">
          <source>is the flag to set a particular Email client as the default Email client</source>
          <target>is the flag to set a particular Email client as the default Email client</target>
        </segment>
      </unit>
      <unit id="791">
        <segment state="initial">
          <source>is the MAPI dll registration</source>
          <target>is the MAPI dll registration</target>
        </segment>
      </unit>
      <unit id="792">
        <segment state="initial">
          <source>URL Protocol handler</source>
          <target>URL Protocol handler</target>
        </segment>
      </unit>
      <unit id="793">
        <segment state="initial">
          <source>Applications do not always specifically called virtualized applications utilizing file type invocation.</source>
          <target>Applications do not always specifically called virtualized applications utilizing file type invocation.</target>
        </segment>
      </unit>
      <unit id="794">
        <segment state="initial">
          <source>For, example, in an application that supports embedding a mailto: link inside a document or web page, the user clicks on a mailto: link and expects to get their registered mail client.</source>
          <target>For, example, in an application that supports embedding a mailto: link inside a document or web page, the user clicks on a mailto: link and expects to get their registered mail client.</target>
        </segment>
      </unit>
      <unit id="795">
        <segment state="initial">
          <source>App-V supports URL Protocol handlers that can be registered on a per-package basis with the local operating system.</source>
          <target>App-V supports URL Protocol handlers that can be registered on a per-package basis with the local operating system.</target>
        </segment>
      </unit>
      <unit id="796">
        <segment state="initial">
          <source>During sequencing, the URL protocol handlers are automatically added to the package.</source>
          <target>During sequencing, the URL protocol handlers are automatically added to the package.</target>
        </segment>
      </unit>
      <unit id="797">
        <segment state="initial">
          <source>For situations where there is more than one application that could register the specific URL Protocol handler, the dynamic configuration files can be utilized to modify the behavior and suppress or disable this feature for an application that should not be the primary application launched.</source>
          <target>For situations where there is more than one application that could register the specific URL Protocol handler, the dynamic configuration files can be utilized to modify the behavior and suppress or disable this feature for an application that should not be the primary application launched.</target>
        </segment>
      </unit>
      <unit id="798">
        <segment state="initial">
          <source>AppPath</source>
          <target>AppPath</target>
        </segment>
      </unit>
      <unit id="799">
        <segment state="initial">
          <source>The AppPath extension point supports calling App-V applications directly from the operating system.</source>
          <target>The AppPath extension point supports calling App-V applications directly from the operating system.</target>
        </segment>
      </unit>
      <unit id="800">
        <segment state="initial">
          <source>This is typically accomplished from the Run or Start Screen, depending on the operating system, which enables administrators to provide access to App-V applications from operating system commands or scripts without calling the specific path to the executable.</source>
          <target>This is typically accomplished from the Run or Start Screen, depending on the operating system, which enables administrators to provide access to App-V applications from operating system commands or scripts without calling the specific path to the executable.</target>
        </segment>
      </unit>
      <unit id="801">
        <segment state="initial">
          <source>It therefore avoids modifying the system path environment variable on all systems, as it is accomplished during publishing.</source>
          <target>It therefore avoids modifying the system path environment variable on all systems, as it is accomplished during publishing.</target>
        </segment>
      </unit>
      <unit id="802">
        <segment state="initial">
          <source>The AppPath extension point is configured either in the manifest or in the dynamic configuration files and is stored in the registry on the local machine during publishing for the user.</source>
          <target>The AppPath extension point is configured either in the manifest or in the dynamic configuration files and is stored in the registry on the local machine during publishing for the user.</target>
        </segment>
      </unit>
      <unit id="803">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For additional information on AppPath review: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392835</pc>.</source>
          <target>For additional information on AppPath review: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkId=392835</pc>.</target>
        </segment>
      </unit>
      <unit id="804">
        <segment state="initial">
          <source>Virtual application</source>
          <target>Virtual application</target>
        </segment>
      </unit>
      <unit id="805">
        <segment state="initial">
          <source>This subsystem provides a list of applications captured during sequencing which is usually consumed by other App-V components.</source>
          <target>This subsystem provides a list of applications captured during sequencing which is usually consumed by other App-V components.</target>
        </segment>
      </unit>
      <unit id="806">
        <segment state="initial">
          <source>Integration of extension points belonging to a particular application can be disabled using dynamic configuration files.</source>
          <target>Integration of extension points belonging to a particular application can be disabled using dynamic configuration files.</target>
        </segment>
      </unit>
      <unit id="807">
        <segment state="initial">
          <source>For example, if a package contains two applications, it is possible to disable all extension points belonging to one application, in order to allow only integration of extension points of other application.</source>
          <target>For example, if a package contains two applications, it is possible to disable all extension points belonging to one application, in order to allow only integration of extension points of other application.</target>
        </segment>
      </unit>
      <unit id="808">
        <segment state="initial">
          <source>Extension point rules</source>
          <target>Extension point rules</target>
        </segment>
      </unit>
      <unit id="809">
        <segment state="initial">
          <source>The extension points described above are integrated into the operating system based on how the packages has been published.</source>
          <target>The extension points described above are integrated into the operating system based on how the packages has been published.</target>
        </segment>
      </unit>
      <unit id="810">
        <segment state="initial">
          <source>Global publishing places extension points in public machine locations, where user publishing places extension points in user locations.</source>
          <target>Global publishing places extension points in public machine locations, where user publishing places extension points in user locations.</target>
        </segment>
      </unit>
      <unit id="811">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>For example a shortcut that is created on the desktop and published globally will result in the file data for the shortcut (%Public%<ph dataRef="id1" id="ph1" />Desktop) and the registry data (HKLM<ph dataRef="id2" id="ph2" />Software<ph dataRef="id3" id="ph3" />Classes).</source>
          <target>For example a shortcut that is created on the desktop and published globally will result in the file data for the shortcut (%Public%<ph dataRef="id1" id="ph1" />Desktop) and the registry data (HKLM<ph dataRef="id2" id="ph2" />Software<ph dataRef="id3" id="ph3" />Classes).</target>
        </segment>
      </unit>
      <unit id="812">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>The same shortcut would have file data (%UserProfile%<ph dataRef="id1" id="ph1" />Desktop) and registry data (HKCU<ph dataRef="id2" id="ph2" />Software<ph dataRef="id3" id="ph3" />Classes).</source>
          <target>The same shortcut would have file data (%UserProfile%<ph dataRef="id1" id="ph1" />Desktop) and registry data (HKCU<ph dataRef="id2" id="ph2" />Software<ph dataRef="id3" id="ph3" />Classes).</target>
        </segment>
      </unit>
      <unit id="813">
        <segment state="initial">
          <source>Extension points are not all published the same way, where some extension points will require global publishing and others require sequencing on the specific operating system and architecture where they are delivered.</source>
          <target>Extension points are not all published the same way, where some extension points will require global publishing and others require sequencing on the specific operating system and architecture where they are delivered.</target>
        </segment>
      </unit>
      <unit id="814">
        <segment state="initial">
          <source>Below is a table that describes these two key rules.</source>
          <target>Below is a table that describes these two key rules.</target>
        </segment>
      </unit>
      <unit id="815">
        <segment state="initial">
          <source>Virtual Extension</source>
          <target>Virtual Extension</target>
        </segment>
      </unit>
      <unit id="816">
        <segment state="initial">
          <source>Requires target OS Sequencing</source>
          <target>Requires target OS Sequencing</target>
        </segment>
      </unit>
      <unit id="817">
        <segment state="initial">
          <source>Requires Global Publishing</source>
          <target>Requires Global Publishing</target>
        </segment>
      </unit>
      <unit id="818">
        <segment state="initial">
          <source>Shortcut</source>
          <target>Shortcut</target>
        </segment>
      </unit>
      <unit id="819">
        <segment state="initial">
          <source>File Type Association</source>
          <target>File Type Association</target>
        </segment>
      </unit>
      <unit id="820">
        <segment state="initial">
          <source>URL Protocols</source>
          <target>URL Protocols</target>
        </segment>
      </unit>
      <unit id="821">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="822">
        <segment state="initial">
          <source>AppPaths</source>
          <target>AppPaths</target>
        </segment>
      </unit>
      <unit id="823">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="824">
        <segment state="initial">
          <source>COM Mode</source>
          <target>COM Mode</target>
        </segment>
      </unit>
      <unit id="825">
        <segment state="initial">
          <source>Software Client</source>
          <target>Software Client</target>
        </segment>
      </unit>
      <unit id="826">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="827">
        <segment state="initial">
          <source>Application Capabilities</source>
          <target>Application Capabilities</target>
        </segment>
      </unit>
      <unit id="828">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="829">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="830">
        <segment state="initial">
          <source>Context Menu Handler</source>
          <target>Context Menu Handler</target>
        </segment>
      </unit>
      <unit id="831">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="832">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="833">
        <segment state="initial">
          <source>Drag-and-drop Handler</source>
          <target>Drag-and-drop Handler</target>
        </segment>
      </unit>
      <unit id="834">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="835">
        <segment state="initial">
          <source>Data Object Handler</source>
          <target>Data Object Handler</target>
        </segment>
      </unit>
      <unit id="836">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="837">
        <segment state="initial">
          <source>Property Sheet Handler</source>
          <target>Property Sheet Handler</target>
        </segment>
      </unit>
      <unit id="838">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="839">
        <segment state="initial">
          <source>Infotip Handler</source>
          <target>Infotip Handler</target>
        </segment>
      </unit>
      <unit id="840">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="841">
        <segment state="initial">
          <source>Column Handler</source>
          <target>Column Handler</target>
        </segment>
      </unit>
      <unit id="842">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="843">
        <segment state="initial">
          <source>Shell Extensions</source>
          <target>Shell Extensions</target>
        </segment>
      </unit>
      <unit id="844">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="845">
        <segment state="initial">
          <source>Browser Helper Object</source>
          <target>Browser Helper Object</target>
        </segment>
      </unit>
      <unit id="846">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="847">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="848">
        <segment state="initial">
          <source>Active X Object</source>
          <target>Active X Object</target>
        </segment>
      </unit>
      <unit id="849">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="850">
        <segment state="initial">
          <source>X</source>
          <target>X</target>
        </segment>
      </unit>
      <unit id="851">
        <segment state="initial">
          <source>Dynamic configuration processing</source>
          <target>Dynamic configuration processing</target>
        </segment>
      </unit>
      <unit id="852">
        <segment state="initial">
          <source>Deploying App-V packages to one machine or user is very simple.</source>
          <target>Deploying App-V packages to one machine or user is very simple.</target>
        </segment>
      </unit>
      <unit id="853">
        <segment state="initial">
          <source>However, as organizations deploy AppV applications across business lines and geographic and political boundaries, the ability to sequence an application one time with one set of settings becomes impossible.</source>
          <target>However, as organizations deploy AppV applications across business lines and geographic and political boundaries, the ability to sequence an application one time with one set of settings becomes impossible.</target>
        </segment>
      </unit>
      <unit id="854">
        <segment state="initial">
          <source>App-V was designed for this scenario, as it captures specific settings and configurations during sequencing in the Manifest file, but also supports modification with Dynamic Configuration files.</source>
          <target>App-V was designed for this scenario, as it captures specific settings and configurations during sequencing in the Manifest file, but also supports modification with Dynamic Configuration files.</target>
        </segment>
      </unit>
      <unit id="855">
        <segment state="initial">
          <source>App-V dynamic configuration allows for specifying a policy for a package either at the machine level or at the user level.</source>
          <target>App-V dynamic configuration allows for specifying a policy for a package either at the machine level or at the user level.</target>
        </segment>
      </unit>
      <unit id="856">
        <segment state="initial">
          <source>The Dynamic Configuration files enable sequencing engineers to modify the configuration of a package, post-sequencing, to address the needs of individual groups of users or machines.</source>
          <target>The Dynamic Configuration files enable sequencing engineers to modify the configuration of a package, post-sequencing, to address the needs of individual groups of users or machines.</target>
        </segment>
      </unit>
      <unit id="857">
        <segment state="initial">
          <source>In some instances it may be necessary to make modifications to the application to provide proper functionality within the App-V environment.</source>
          <target>In some instances it may be necessary to make modifications to the application to provide proper functionality within the App-V environment.</target>
        </segment>
      </unit>
      <unit id="858">
        <originalData>
          <data id="id1">\_\*</data>
        </originalData>
        <segment state="initial">
          <source>For example, it may be necessary to make modifications to the <ph dataRef="id1" id="ph1" />config.xml files to allow certain actions to be performed at a specified time during the execution of the application, like disabling a mailto extension to prevent a virtualized application from overwriting that extension from another application.</source>
          <target>For example, it may be necessary to make modifications to the <ph dataRef="id1" id="ph1" />config.xml files to allow certain actions to be performed at a specified time during the execution of the application, like disabling a mailto extension to prevent a virtualized application from overwriting that extension from another application.</target>
        </segment>
      </unit>
      <unit id="859">
        <segment state="initial">
          <source>App-V Packages contain the Manifest file inside of the appv package file, which is representative of sequencing operations and is the policy of choice unless Dynamic Configuration files are assigned to a specific package.</source>
          <target>App-V Packages contain the Manifest file inside of the appv package file, which is representative of sequencing operations and is the policy of choice unless Dynamic Configuration files are assigned to a specific package.</target>
        </segment>
      </unit>
      <unit id="860">
        <segment state="initial">
          <source>Post-sequencing, the Dynamic Configuration files can be modified to allow the publishing of an application to different desktops or users with different extension points.</source>
          <target>Post-sequencing, the Dynamic Configuration files can be modified to allow the publishing of an application to different desktops or users with different extension points.</target>
        </segment>
      </unit>
      <unit id="861">
        <segment state="initial">
          <source>The two Dynamic Configuration Files are the Dynamic Deployment Configuration (DDC) and Dynamic User Configuration (DUC) files.</source>
          <target>The two Dynamic Configuration Files are the Dynamic Deployment Configuration (DDC) and Dynamic User Configuration (DUC) files.</target>
        </segment>
      </unit>
      <unit id="862">
        <segment state="initial">
          <source>This section focuses on the combination of the manifest and dynamic configuration files.</source>
          <target>This section focuses on the combination of the manifest and dynamic configuration files.</target>
        </segment>
      </unit>
      <unit id="863">
        <segment state="initial">
          <source>Example for dynamic configuration files</source>
          <target>Example for dynamic configuration files</target>
        </segment>
      </unit>
      <unit id="864">
        <segment state="initial">
          <source>The example below shows the combination of the Manifest, Deployment Configuration and User Configuration files after publishing and during normal operation.</source>
          <target>The example below shows the combination of the Manifest, Deployment Configuration and User Configuration files after publishing and during normal operation.</target>
        </segment>
      </unit>
      <unit id="865">
        <segment state="initial">
          <source>These examples are abbreviated examples of each of the files.</source>
          <target>These examples are abbreviated examples of each of the files.</target>
        </segment>
      </unit>
      <unit id="866">
        <segment state="initial">
          <source>The purpose is show the combination of the files only and not to be a complete description of the specific categories available in each of the files.</source>
          <target>The purpose is show the combination of the files only and not to be a complete description of the specific categories available in each of the files.</target>
        </segment>
      </unit>
      <unit id="867">
        <originalData>
          <data id="id1">&lt;</data>
          <data id="id2">&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For more information review the App-V 5 Sequencing Guide at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkID=269810</pc></source>
          <target>For more information review the App-V 5 Sequencing Guide at: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">http://go.microsoft.com/fwlink/?LinkID=269810</pc></target>
        </segment>
      </unit>
      <unit id="868">
        <segment state="initial">
          <source>Manifest</source>
          <target>Manifest</target>
        </segment>
      </unit>
      <unit id="869">
        <segment state="initial">
          <source>Deployment Configuration</source>
          <target>Deployment Configuration</target>
        </segment>
      </unit>
      <unit id="870">
        <segment state="initial">
          <source>User Configuration</source>
          <target>User Configuration</target>
        </segment>
      </unit>
      <unit id="871">
        <segment state="initial">
          <source>Side-by-side assemblies</source>
          <target>Side-by-side assemblies</target>
        </segment>
      </unit>
      <unit id="872">
        <segment state="initial">
          <source>App-V supports the automatic packaging of side-by-side (SxS) assemblies during sequencing and deployment on the client during virtual application publishing.</source>
          <target>App-V supports the automatic packaging of side-by-side (SxS) assemblies during sequencing and deployment on the client during virtual application publishing.</target>
        </segment>
      </unit>
      <unit id="873">
        <segment state="initial">
          <source>App-V 5 SP2 supports capturing SxS assemblies during sequencing for assemblies not present on the sequencing machine.</source>
          <target>App-V 5 SP2 supports capturing SxS assemblies during sequencing for assemblies not present on the sequencing machine.</target>
        </segment>
      </unit>
      <unit id="874">
        <segment state="initial">
          <source>And for assemblies consisting of Visual C++ (Version 8 and newer) and/or MSXML run-time, the Sequencer will automatically detect and capture these dependencies even if they were not installed during monitoring.</source>
          <target>And for assemblies consisting of Visual C++ (Version 8 and newer) and/or MSXML run-time, the Sequencer will automatically detect and capture these dependencies even if they were not installed during monitoring.</target>
        </segment>
      </unit>
      <unit id="875">
        <segment state="initial">
          <source>The Side by Side assemblies feature removes the limitations of previous versions of App-V, where the App-V Sequencer did not capture assemblies already present on the sequencing workstation, and privatizing the assemblies which limited to one bit version per package.</source>
          <target>The Side by Side assemblies feature removes the limitations of previous versions of App-V, where the App-V Sequencer did not capture assemblies already present on the sequencing workstation, and privatizing the assemblies which limited to one bit version per package.</target>
        </segment>
      </unit>
      <unit id="876">
        <segment state="initial">
          <source>This behavior resulted in deployed App-V applications to clients missing the required SxS assemblies, causing application launch failures.</source>
          <target>This behavior resulted in deployed App-V applications to clients missing the required SxS assemblies, causing application launch failures.</target>
        </segment>
      </unit>
      <unit id="877">
        <segment state="initial">
          <source>This forced the packaging process to document and then ensure that all assemblies required for packages were locally installed on the user’s client operating system to ensure support for the virtual applications.</source>
          <target>This forced the packaging process to document and then ensure that all assemblies required for packages were locally installed on the user’s client operating system to ensure support for the virtual applications.</target>
        </segment>
      </unit>
      <unit id="878">
        <segment state="initial">
          <source>Based on the number of assemblies and the lack of application documentation for the required dependencies, this task was both a management and implementation challenge.</source>
          <target>Based on the number of assemblies and the lack of application documentation for the required dependencies, this task was both a management and implementation challenge.</target>
        </segment>
      </unit>
      <unit id="879">
        <segment state="initial">
          <source>Side by Side Assembly support in App-V has the following features.</source>
          <target>Side by Side Assembly support in App-V has the following features.</target>
        </segment>
      </unit>
      <unit id="880">
        <segment state="initial">
          <source>Automatic captures of SxS assembly during Sequencing, regardless of whether the assembly was already installed on the sequencing workstation.</source>
          <target>Automatic captures of SxS assembly during Sequencing, regardless of whether the assembly was already installed on the sequencing workstation.</target>
        </segment>
      </unit>
      <unit id="881">
        <segment state="initial">
          <source>The App-V Client automatically installs required SxS assemblies to the client computer at publishing time when they are not present.</source>
          <target>The App-V Client automatically installs required SxS assemblies to the client computer at publishing time when they are not present.</target>
        </segment>
      </unit>
      <unit id="882">
        <segment state="initial">
          <source>The Sequencer reports the VC run-time dependency in Sequencer reporting mechanism.</source>
          <target>The Sequencer reports the VC run-time dependency in Sequencer reporting mechanism.</target>
        </segment>
      </unit>
      <unit id="883">
        <segment state="initial">
          <source>The Sequencer allows opting to not package the assemblies that are already installed on the Sequencer, supporting scenarios where the assemblies have previously been installed on the target computers.</source>
          <target>The Sequencer allows opting to not package the assemblies that are already installed on the Sequencer, supporting scenarios where the assemblies have previously been installed on the target computers.</target>
        </segment>
      </unit>
      <unit id="884">
        <segment state="initial">
          <source>Automatic publishing of SxS assemblies</source>
          <target>Automatic publishing of SxS assemblies</target>
        </segment>
      </unit>
      <unit id="885">
        <segment state="initial">
          <source>During publishing of an App-V package with SxS assemblies the App-V Client will check for the presence of the assembly on the machine.</source>
          <target>During publishing of an App-V package with SxS assemblies the App-V Client will check for the presence of the assembly on the machine.</target>
        </segment>
      </unit>
      <unit id="886">
        <segment state="initial">
          <source>If the assembly does not exist, the client will deploy the assembly to the machine.</source>
          <target>If the assembly does not exist, the client will deploy the assembly to the machine.</target>
        </segment>
      </unit>
      <unit id="887">
        <segment state="initial">
          <source>Packages that are part of connection groups will rely on the Side by Side assembly installations that are part of the base packages, as the connection group does not contain any information about assembly installation.</source>
          <target>Packages that are part of connection groups will rely on the Side by Side assembly installations that are part of the base packages, as the connection group does not contain any information about assembly installation.</target>
        </segment>
      </unit>
      <unit id="888">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="889">
        <segment state="initial">
          <source>UnPublishing or removing a package with an assembly does not remove the assemblies for that package.</source>
          <target>UnPublishing or removing a package with an assembly does not remove the assemblies for that package.</target>
        </segment>
      </unit>
      <unit id="890">
        <segment state="initial">
          <source>Client logging</source>
          <target>Client logging</target>
        </segment>
      </unit>
      <unit id="891">
        <segment state="initial">
          <source>The App-V client logs information to the Windows Event log in standard ETW format.</source>
          <target>The App-V client logs information to the Windows Event log in standard ETW format.</target>
        </segment>
      </unit>
      <unit id="892">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>The specific App-V events can be found in the event viewer, under Applications and Services Logs<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client.</source>
          <target>The specific App-V events can be found in the event viewer, under Applications and Services Logs<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />AppV<ph dataRef="id3" id="ph3" />Client.</target>
        </segment>
      </unit>
      <unit id="893">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="894">
        <segment state="initial">
          <source>In App-V 5.0 SP3, some logs were consolidated and moved to the following location:</source>
          <target>In App-V 5.0 SP3, some logs were consolidated and moved to the following location:</target>
        </segment>
      </unit>
      <unit id="895">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](about-app-v-50-sp3.md#bkmk-event-logs-moved)</data>
        </originalData>
        <segment state="initial">
          <source>For a list of the moved logs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">About App-V 5.0 SP3</pc>.</source>
          <target>For a list of the moved logs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">About App-V 5.0 SP3</pc>.</target>
        </segment>
      </unit>
      <unit id="896">
        <segment state="initial">
          <source>There are three specific categories of events recorded described below.</source>
          <target>There are three specific categories of events recorded described below.</target>
        </segment>
      </unit>
      <unit id="897">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Admin</pc>: Logs events for configurations being applied to the App-V Client, and contains the primary warnings and errors.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Admin</pc>: Logs events for configurations being applied to the App-V Client, and contains the primary warnings and errors.</target>
        </segment>
      </unit>
      <unit id="898">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operational</pc>: Logs the general App-V execution and usage of individual components creating an audit log of the App-V operations that have been completed on the App-V Client.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Operational</pc>: Logs the general App-V execution and usage of individual components creating an audit log of the App-V operations that have been completed on the App-V Client.</target>
        </segment>
      </unit>
      <unit id="899">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Virtual Application</pc>: Logs virtual application launches and use of virtualization subsystems.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Virtual Application</pc>: Logs virtual application launches and use of virtualization subsystems.</target>
        </segment>
      </unit>
      <unit id="900">
        <segment state="initial">
          <source>Got a suggestion for App-V?</source>
          <target>Got a suggestion for App-V?</target>
        </segment>
      </unit>
      <unit id="901">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://appv.uservoice.com/forums/280448-microsoft-application-virtualization)</data>
        </originalData>
        <segment state="initial">
          <source>Add or vote on suggestions <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</source>
          <target>Add or vote on suggestions <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</target>
        </segment>
      </unit>
      <unit id="902">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://social.technet.microsoft.com/Forums/home?forum=mdopappv)</data>
        </originalData>
        <segment state="initial">
          <source>For App-V issues, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App-V TechNet Forum</pc>.</source>
          <target>For App-V issues, use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App-V TechNet Forum</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>