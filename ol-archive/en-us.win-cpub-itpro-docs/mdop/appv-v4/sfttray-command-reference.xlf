<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">mdop\appv-v4\sfttray-command-reference.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">5cb8f1946576f577e57297dcfb277c328aff2d06</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>SFTTRAY Command Reference</source>
          <target>SFTTRAY Command Reference</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>SFTTRAY Command Reference</source>
          <target>SFTTRAY Command Reference</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>SFTTRAY Command Reference</source>
          <target>SFTTRAY Command Reference</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>The Microsoft Application Virtualization (App-V) Client Tray application, sfttray.exe, is the main user interface element of the App-V Client that users will interact with during normal use.</source>
          <target>The Microsoft Application Virtualization (App-V) Client Tray application, sfttray.exe, is the main user interface element of the App-V Client that users will interact with during normal use.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>This program controls the streaming and starting of all virtual applications and is accessed by right-clicking the icon displayed in the notification area to display the menu of client functions.</source>
          <target>This program controls the streaming and starting of all virtual applications and is accessed by right-clicking the icon displayed in the notification area to display the menu of client functions.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>The menu enables the user to load applications, start a publishing refresh, cancel a request, or change the client to offline mode.</source>
          <target>The menu enables the user to load applications, start a publishing refresh, cancel a request, or change the client to offline mode.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The user can also close the Application Virtualization Client Tray application and all active applications by clicking <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Exit</pc>.</source>
          <target>The user can also close the Application Virtualization Client Tray application and all active applications by clicking <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Exit</pc>.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>By default, the icon is displayed whenever a virtual application is started, although you can control this behavior by using SFTTRAY commands.</source>
          <target>By default, the icon is displayed whenever a virtual application is started, although you can control this behavior by using SFTTRAY commands.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>The Application Virtualization Client Tray application also displays a progress bar for each application that is started, as well as status messages about active applications.</source>
          <target>The Application Virtualization Client Tray application also displays a progress bar for each application that is started, as well as status messages about active applications.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Clicking the progress bar displays a message that allows you to cancel the loading or starting of an application.</source>
          <target>Clicking the progress bar displays a message that allows you to cancel the loading or starting of an application.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>SFTTRAY Commands</source>
          <target>SFTTRAY Commands</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The list of commands and command-line switches can be displayed by running the following command from a command window.</source>
          <target>The list of commands and command-line switches can be displayed by running the following command from a command window.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>There is only one Application Virtualization Client Tray instance for each user context, so if you start a new SFTTRAY command, it will be passed to the program that is already running.</source>
          <target>There is only one Application Virtualization Client Tray instance for each user context, so if you start a new SFTTRAY command, it will be passed to the program that is already running.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Command Usage</source>
          <target>Command Usage</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Command-Line Switches</source>
          <target>Command-Line Switches</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>The SFTTRAY command-line switches are described in the following table.</source>
          <target>The SFTTRAY command-line switches are described in the following table.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Switch</source>
          <target>Switch</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>/HIDE</source>
          <target>/HIDE</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Hides the SFTTRAY icon in the Windows notification area.</source>
          <target>Hides the SFTTRAY icon in the Windows notification area.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>/SHOW</source>
          <target>/SHOW</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Displays the SFTTRAY icon in the Windows notification area.</source>
          <target>Displays the SFTTRAY icon in the Windows notification area.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>/QUIET</source>
          <target>/QUIET</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Supports unattended usage by preventing errors from displaying message boxes that require user acknowledgement.</source>
          <target>Supports unattended usage by preventing errors from displaying message boxes that require user acknowledgement.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/EXE <ph dataRef="id1" id="ph1" />alternate-exe</source>
          <target>/EXE <ph dataRef="id1" id="ph1" />alternate-exe</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Used with /LAUNCH to specify that an executable program is to be started in the virtual environment when a virtual application is started in place of the target file specified in the OSD.</source>
          <target>Used with /LAUNCH to specify that an executable program is to be started in the virtual environment when a virtual application is started in place of the target file specified in the OSD.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>For example, use “SFTTRAY.EXE /EXE REGEDIT.EXE /LAUNCH <ph dataRef="id1" id="ph1" />app<ph dataRef="id2" id="ph2" />” to enable you to examine the registry of the virtual environment in which the application is running.</source>
          <target>For example, use “SFTTRAY.EXE /EXE REGEDIT.EXE /LAUNCH <ph dataRef="id1" id="ph1" />app<ph dataRef="id2" id="ph2" />” to enable you to examine the registry of the virtual environment in which the application is running.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>/LAUNCH <ph dataRef="id1" id="ph1" />app<ph dataRef="id2" id="ph2" /> [<ph dataRef="id3" id="ph3" />args<ph dataRef="id4" id="ph4" />]</source>
          <target>/LAUNCH <ph dataRef="id1" id="ph1" />app<ph dataRef="id2" id="ph2" /> [<ph dataRef="id3" id="ph3" />args<ph dataRef="id4" id="ph4" />]</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Starts a virtual application.</source>
          <target>Starts a virtual application.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Specify the name and version of an application or the path to an OSD file.</source>
          <target>Specify the name and version of an application or the path to an OSD file.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Optionally, command-line arguments can be passed to the virtual application.</source>
          <target>Optionally, command-line arguments can be passed to the virtual application.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Use the command “SFTMIME.EXE /QUERY OBJ:APP /SHORT” to obtain a list of the names and versions of available virtual applications.</source>
          <target>Use the command “SFTMIME.EXE /QUERY OBJ:APP /SHORT” to obtain a list of the names and versions of available virtual applications.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>/LOAD</source>
          <target>/LOAD</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Loads or imports a virtual application.</source>
          <target>Loads or imports a virtual application.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>/LOADALL</source>
          <target>/LOADALL</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Loads all applications into cache.</source>
          <target>Loads all applications into cache.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>/REFRESHALL</source>
          <target>/REFRESHALL</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Starts a publishing refresh for all applications.</source>
          <target>Starts a publishing refresh for all applications.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/LAUNCHRESULT <ph dataRef="id1" id="ph1" />UNIQUE ID</source>
          <target>/LAUNCHRESULT <ph dataRef="id1" id="ph1" />UNIQUE ID</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Returns the launch result code to the process that launches sfttray.exe by using a global event and a memory mapped file that are based on the specified root name for the UNIQUE ID.¹</source>
          <target>Returns the launch result code to the process that launches sfttray.exe by using a global event and a memory mapped file that are based on the specified root name for the UNIQUE ID.¹</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>/SFTFILE <ph dataRef="id1" id="ph1" />sft</source>
          <target>/SFTFILE <ph dataRef="id1" id="ph1" />sft</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Optional switch used with /LOAD to specify the path to the application’s SFT file.</source>
          <target>Optional switch used with /LOAD to specify the path to the application’s SFT file.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>If specified, the application is imported rather than loaded.</source>
          <target>If specified, the application is imported rather than loaded.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>/EXIT</source>
          <target>/EXIT</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Closes the SFTTRAY program and all active virtual applications and removes the icon from the Windows notification area.</source>
          <target>Closes the SFTTRAY program and all active virtual applications and removes the icon from the Windows notification area.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>¹ The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/LAUNCHRESULT</pc> command line parameter provides a means for the process that launches sfttray.exe to specify the root name for a global event and a memory mapped file that are used to return the launch result code to the process.</source>
          <target>¹ The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">/LAUNCHRESULT</pc> command line parameter provides a means for the process that launches sfttray.exe to specify the root name for a global event and a memory mapped file that are used to return the launch result code to the process.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>The unique identifier name should start with “SFT-” to prevent the event name from getting virtualized when the launching process is invoked within a virtual environment.</source>
          <target>The unique identifier name should start with “SFT-” to prevent the event name from getting virtualized when the launching process is invoked within a virtual environment.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>The memory mapped region will be 64 bits in size.</source>
          <target>The memory mapped region will be 64 bits in size.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
          <data id="id3">\_</data>
          <data id="id4">&amp;lt;</data>
          <data id="id5">&amp;gt;</data>
          <data id="id6">\_</data>
          <data id="id7">&amp;lt;</data>
          <data id="id8">&amp;gt;</data>
          <data id="id9">\_</data>
        </originalData>
        <segment state="initial">
          <source>To use this parameter, the launching process creates an event with the name “<ph dataRef="id1" id="ph1" />UNIQUE ID<ph dataRef="id2" id="ph2" />-result<ph dataRef="id3" id="ph3" />event”, a memory mapped file with the name “<ph dataRef="id4" id="ph4" />UNIQUE ID<ph dataRef="id5" id="ph5" />-result<ph dataRef="id6" id="ph6" />value”, and optionally an event with the name “<ph dataRef="id7" id="ph7" />UNIQUE ID<ph dataRef="id8" id="ph8" />-shutdown<ph dataRef="id9" id="ph9" />event”, and then the launching process launches sfttray.exe and waits on the event to be signaled.</source>
          <target>To use this parameter, the launching process creates an event with the name “<ph dataRef="id1" id="ph1" />UNIQUE ID<ph dataRef="id2" id="ph2" />-result<ph dataRef="id3" id="ph3" />event”, a memory mapped file with the name “<ph dataRef="id4" id="ph4" />UNIQUE ID<ph dataRef="id5" id="ph5" />-result<ph dataRef="id6" id="ph6" />value”, and optionally an event with the name “<ph dataRef="id7" id="ph7" />UNIQUE ID<ph dataRef="id8" id="ph8" />-shutdown<ph dataRef="id9" id="ph9" />event”, and then the launching process launches sfttray.exe and waits on the event to be signaled.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
          <data id="id3">\_</data>
        </originalData>
        <segment state="initial">
          <source>After the event “<ph dataRef="id1" id="ph1" />UNIQUE ID<ph dataRef="id2" id="ph2" />-result<ph dataRef="id3" id="ph3" />event” is signaled, the launching process retrieves the 64-bit return code from the memory mapped region.</source>
          <target>After the event “<ph dataRef="id1" id="ph1" />UNIQUE ID<ph dataRef="id2" id="ph2" />-result<ph dataRef="id3" id="ph3" />event” is signaled, the launching process retrieves the 64-bit return code from the memory mapped region.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
          <data id="id3">\_</data>
        </originalData>
        <segment state="initial">
          <source>If the optional event “<ph dataRef="id1" id="ph1" />UNIQUE ID<ph dataRef="id2" id="ph2" />-shutdown<ph dataRef="id3" id="ph3" />event” exists when the virtual application exits, sfttray.exe opens and signals the event.</source>
          <target>If the optional event “<ph dataRef="id1" id="ph1" />UNIQUE ID<ph dataRef="id2" id="ph2" />-shutdown<ph dataRef="id3" id="ph3" />event” exists when the virtual application exits, sfttray.exe opens and signals the event.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>The launching process waits on this shutdown event if it needs to determine when the virtual application exits.</source>
          <target>The launching process waits on this shutdown event if it needs to determine when the virtual application exits.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>