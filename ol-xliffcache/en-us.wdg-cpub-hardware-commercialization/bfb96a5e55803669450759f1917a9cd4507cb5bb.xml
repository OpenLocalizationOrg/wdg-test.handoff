{"nodes":[{"content":"This function is used to retrieve the boot mode and optional profile name from the UEFI firmware.","pos":[35,132]},{"content":"EFI<ph id=\"ph1\">\\_</ph>BOOT<ph id=\"ph2\">\\_</ph>MODE<ph id=\"ph3\">\\_</ph>MGMT<ph id=\"ph4\">\\_</ph>PROTOCOL.GetBootModeInfo","pos":[241,288]},{"content":"EFI<ph id=\"ph1\">\\_</ph>BOOT<ph id=\"ph2\">\\_</ph>MODE<ph id=\"ph3\">\\_</ph>MGMT<ph id=\"ph4\">\\_</ph>PROTOCOL.GetBootModeInfo","pos":[297,344]},{"content":"This function is used to retrieve the boot mode and optional profile name from the UEFI firmware.","pos":[347,444]},{"pos":[841,851],"content":"Parameters"},{"content":"This","pos":[924,928]},{"content":"in<ph id=\"ph1\">\\]</ph> A pointer to the <bpt id=\"p1\">**</bpt>EFI<ph id=\"ph2\">\\_</ph>BOOT<ph id=\"ph3\">\\_</ph>MODE<ph id=\"ph4\">\\_</ph>MGMT<ph id=\"ph5\">\\_</ph>PROTOCOL<ept id=\"p1\">**</ept> instance.","pos":[934,1001]},{"content":"BootMode","pos":[1085,1093]},{"content":"out<ph id=\"ph1\">\\]</ph> A pointer to the enumeration that holds the boot mode of the device.","pos":[1099,1173]},{"content":"ProfileNameElements","pos":[1290,1309]},{"content":"in<ph id=\"ph1\">\\]</ph> <ph id=\"ph2\">\\[</ph>out<ph id=\"ph3\">\\]</ph> A pointer to a UINT32 value that receives the number of characters in the profile name.","pos":[1315,1415]},{"content":"ProfileName","pos":[1508,1519]},{"content":"out<ph id=\"ph1\">\\]</ph> A pointer to the name of the current profile.","pos":[1525,1576]},{"pos":[1677,1690],"content":"Return values"},{"content":"Returns one of the following status codes:","pos":[1693,1735]},{"content":"Return code","pos":[1739,1750]},{"content":"Description","pos":[1765,1776]},{"content":"EFI<ph id=\"ph1\">\\_</ph>SUCCESS","pos":[1929,1941]},{"content":"Success","pos":[1955,1962]},{"content":"EFI<ph id=\"ph1\">\\_</ph>NOT<ph id=\"ph2\">\\_</ph>FOUND","pos":[2024,2039]},{"content":"The boot mode data was not found.","pos":[2050,2083]},{"content":"EFI<ph id=\"ph1\">\\_</ph>VOLUME<ph id=\"ph2\">\\_</ph>CORRUPTED","pos":[2119,2141]},{"content":"A required storage partition is not initialized or is corrupted.","pos":[2145,2209]},{"content":"EFI<ph id=\"ph1\">\\_</ph>INVALID<ph id=\"ph2\">\\_</ph>PARAM","pos":[2214,2233]},{"content":"An invalid parameter was passed to the function.","pos":[2240,2288]},{"content":"EFI<ph id=\"ph1\">\\_</ph>BUFFER<ph id=\"ph2\">\\_</ph>TOO<ph id=\"ph3\">\\_</ph>SMALL","pos":[2309,2332]},{"content":"Not enough space in the provided buffer.","pos":[2335,2375]},{"pos":[2502,2514],"content":"Requirements"},{"pos":[2517,2543],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> User generated"},{"pos":[2581,2595],"content":"Related topics"},{"content":"Boot mode management UEFI protocol","pos":[2599,2633]}],"content":"---\nauthor: kpacquer\nDescription: 'This function is used to retrieve the boot mode and optional profile name from the UEFI firmware.'\nms.assetid: 389dab4d-9f74-4c33-9d02-9b6510581fd8\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: 'EFI\\_BOOT\\_MODE\\_MGMT\\_PROTOCOL.GetBootModeInfo'\n---\n\n# EFI\\_BOOT\\_MODE\\_MGMT\\_PROTOCOL.GetBootModeInfo\n\n\nThis function is used to retrieve the boot mode and optional profile name from the UEFI firmware.\n\n``` syntax\ntypedef EFI_STATUS\n(EFIAPI *EFI_GET_BOOT_MODE_INFO)(\n    IN  struct _EFI_BOOT_MODE_MGMT_PROTOCOL *This,\n    OUT EFI_OS_BOOT_MODE                    *BootMode,\n    IN OUT UINT32                           *ProfileNameElements,\n    OUT CHAR16                              *ProfileName\n    );\n```\n\n## <span id=\"Parameters\"></span><span id=\"parameters\"></span><span id=\"PARAMETERS\"></span>Parameters\n\n\n<span id=\"This\"></span><span id=\"this\"></span><span id=\"THIS\"></span>*This*  \n\\[in\\] A pointer to the **EFI\\_BOOT\\_MODE\\_MGMT\\_PROTOCOL** instance.\n\n<span id=\"BootMode\"></span><span id=\"bootmode\"></span><span id=\"BOOTMODE\"></span>*BootMode*  \n\\[out\\] A pointer to the enumeration that holds the boot mode of the device.\n\n<span id=\"ProfileNameElements\"></span><span id=\"profilenameelements\"></span><span id=\"PROFILENAMEELEMENTS\"></span>*ProfileNameElements*  \n\\[in\\] \\[out\\] A pointer to a UINT32 value that receives the number of characters in the profile name.\n\n<span id=\"ProfileName\"></span><span id=\"profilename\"></span><span id=\"PROFILENAME\"></span>*ProfileName*  \n\\[out\\] A pointer to the name of the current profile.\n\n## <span id=\"Return_values\"></span><span id=\"return_values\"></span><span id=\"RETURN_VALUES\"></span>Return values\n\n\nReturns one of the following status codes:\n\n| Return code             | Description                                                      |\n|-------------------------|------------------------------------------------------------------|\n| EFI\\_SUCCESS            | Success                                                          |\n| EFI\\_NOT\\_FOUND         | The boot mode data was not found.                                |\n| EFI\\_VOLUME\\_CORRUPTED  | A required storage partition is not initialized or is corrupted. |\n| EFI\\_INVALID\\_PARAM     | An invalid parameter was passed to the function.                 |\n| EFI\\_BUFFER\\_TOO\\_SMALL | Not enough space in the provided buffer.                         |\n\n \n\n## <span id=\"Requirements\"></span><span id=\"requirements\"></span><span id=\"REQUIREMENTS\"></span>Requirements\n\n\n**Header:** User generated\n\n## <span id=\"related_topics\"></span>Related topics\n\n\n[Boot mode management UEFI protocol](boot-mode-management-uefi-protocol.md)\n\n \n\n \n\n\n\n\n\n\n"}