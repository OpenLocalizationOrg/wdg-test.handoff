{"nodes":[{"content":"If you want to test Manufacturing Mode, you can enable it by using ffutool.exe or by using a BCD setting.","pos":[35,140]},{"content":"Enable or Disable Manufacturing Mode","pos":[248,284]},{"content":"Enable or Disable Manufacturing Mode","pos":[292,328]},{"content":"If you want to test Manufacturing Mode, you can enable it by using ffutool.exe or by using a BCD setting.","pos":[331,436]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  The recommended way to support manufacturing mode on shipping devices is to have the firmware support the Boot mode management UEFI protocol.","pos":[438,589]},{"content":"For more info on this protocol, see <bpt id=\"p1\">[</bpt>Boot mode management UEFI protocol<ept id=\"p1\">](boot-mode-management-uefi-protocol.md)</ept>.","pos":[590,702]},{"pos":[854,907],"content":"Enable or disable Manufacturing Mode with ffutool.exe"},{"content":"If the device supports the boot mode UEFI protocol, you can enable or disable Manufacturing Mode with ffutool.exe by using the <bpt id=\"p1\">**</bpt>setBootMode<ept id=\"p1\">**</ept> parameter.","pos":[910,1063]},{"content":"The syntax is as follows:","pos":[1064,1089]},{"pos":[1163,1308],"content":"<bpt id=\"p1\">*</bpt>boot mode<ept id=\"p1\">*</ept> -- an integer that corresponds to the boot mode documented in <bpt id=\"p2\">[</bpt>EFI<ph id=\"ph1\">\\_</ph>BOOT<ph id=\"ph2\">\\_</ph>MODE<ph id=\"ph3\">\\_</ph>INFO enumeration<ept id=\"p2\">](efi-boot-mode-info-enumeration.md)</ept>."},{"content":"<bpt id=\"p1\">*</bpt>profile name<ept id=\"p1\">*</ept> -- the name of the manufacturing profile to enable.","pos":[1313,1379]},{"content":"This is required when the boot mode is set to 1 and is ignored when the boot mode is set to 0.","pos":[1380,1474]},{"content":"The following example enables Manufacturing Mode and uses a manufacturing profile named CustomProfile:","pos":[1476,1578]},{"content":"The following example disables Manufacturing Mode, allowing the operating system to boot normally:","pos":[1637,1735]},{"pos":[1972,2016],"content":"Enable Manufacturing Mode with a BCD setting"},{"content":"You can use the MfgMode BCD setting to test Manufacturing Mode with your custom manufacturing profiles.","pos":[2019,2122]},{"content":"MfgMode is a string value that is set to the name of your custom manufacturing profile.","pos":[2123,2210]},{"content":"For example, you can start the device in Manufacturing Mode using the default manufacturing profile by running the following command on the device:","pos":[2212,2359]},{"content":"Or, you could start the device in Manufacturing Mode using a custom manufacturing profile named, CustomProfile, by doing the following:","pos":[2422,2557]},{"content":"You can also enable it on an offline device that is plugged in and is in USB mass storage mode.","pos":[2626,2721]},{"content":"For example:","pos":[2722,2734]},{"pos":[2839,2987],"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  If you're using an older version of bcdedit.exe, you might have to use <bpt id=\"p2\">**</bpt>custom:22000140<ept id=\"p2\">**</ept> instead of <bpt id=\"p3\">**</bpt>mfgmode<ept id=\"p3\">**</ept> as the BCD setting name."},{"pos":[3169,3208],"content":"Create a Manufacturing Mode BCD package"},{"content":"You can create a package that creates the MfgMode BCD entry and sets it to your custom manufacturing profile.","pos":[3211,3320]},{"content":"To do this, you must first create an XML file that references the BCD entry:","pos":[3321,3397]},{"content":"After that is created, you can reference it in a package XML file:","pos":[4115,4181]},{"content":"<bpt id=\"p1\">**</bpt>Note<ept id=\"p1\">**</ept>  There is a Partition attribute defining that these BCD entries need to apply to the EFIESP partition.","pos":[4580,4691]},{"content":"This should be updated to be the partition where the BCD store for your device resides.","pos":[4692,4779]},{"content":"If this is different from the partition where the main operating system resides, other operations such as adding files and registry keys to the main operating system partition cannot be done from the same package.","pos":[4780,4993]},{"content":"To create the package, you can use pkggen.exe (included with the Windows Driver Kit):","pos":[4998,5083]}],"content":"---\nauthor: kpacquer\nDescription: 'If you want to test Manufacturing Mode, you can enable it by using ffutool.exe or by using a BCD setting.'\nms.assetid: a5506896-0692-4256-a307-075da141ad44\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: Enable or Disable Manufacturing Mode\n---\n\n# Enable or Disable Manufacturing Mode\n\n\nIf you want to test Manufacturing Mode, you can enable it by using ffutool.exe or by using a BCD setting.\n\n**Note**  The recommended way to support manufacturing mode on shipping devices is to have the firmware support the Boot mode management UEFI protocol. For more info on this protocol, see [Boot mode management UEFI protocol](boot-mode-management-uefi-protocol.md).\n\n \n\n## <span id=\"enable_or_disable_manufacturing_mode_with_ffutool.exe\"></span><span id=\"ENABLE_OR_DISABLE_MANUFACTURING_MODE_WITH_FFUTOOL.EXE\"></span>Enable or disable Manufacturing Mode with ffutool.exe\n\n\nIf the device supports the boot mode UEFI protocol, you can enable or disable Manufacturing Mode with ffutool.exe by using the **setBootMode** parameter. The syntax is as follows:\n\n``` syntax\nffutool.exe -setBootMode <boot mode> <profile name>\n```\n\n-   *boot mode* -- an integer that corresponds to the boot mode documented in [EFI\\_BOOT\\_MODE\\_INFO enumeration](efi-boot-mode-info-enumeration.md).\n-   *profile name* -- the name of the manufacturing profile to enable. This is required when the boot mode is set to 1 and is ignored when the boot mode is set to 0.\n\nThe following example enables Manufacturing Mode and uses a manufacturing profile named CustomProfile:\n\n``` syntax\nffutool.exe -setBootMode 1 CustomProfile\n```\n\nThe following example disables Manufacturing Mode, allowing the operating system to boot normally:\n\n``` syntax\nffutool.exe -setBootMode 0\n```\n\n## <span id=\"Enable_Manufacturing_Mode_with_a_BCD_setting\"></span><span id=\"enable_manufacturing_mode_with_a_bcd_setting\"></span><span id=\"ENABLE_MANUFACTURING_MODE_WITH_A_BCD_SETTING\"></span>Enable Manufacturing Mode with a BCD setting\n\n\nYou can use the MfgMode BCD setting to test Manufacturing Mode with your custom manufacturing profiles. MfgMode is a string value that is set to the name of your custom manufacturing profile.\n\nFor example, you can start the device in Manufacturing Mode using the default manufacturing profile by running the following command on the device:\n\n``` syntax\nbcdedit.exe /set {default} mfgmode \"default\"\n```\n\nOr, you could start the device in Manufacturing Mode using a custom manufacturing profile named, CustomProfile, by doing the following:\n\n``` syntax\nbcdedit.exe /set {default} mfgmode \"CustomProfile\"\n```\n\nYou can also enable it on an offline device that is plugged in and is in USB mass storage mode. For example:\n\n``` syntax\nbcdedit.exe /store \"D:\\EFIESP\\efi\\Microsoft\\Boot\\BCD\" /set {default} mfgmode \"default\"\n```\n\n**Note**  If you're using an older version of bcdedit.exe, you might have to use **custom:22000140** instead of **mfgmode** as the BCD setting name.\n\n \n\n## <span id=\"Create_a_Manufacturing_Mode_BCD_package\"></span><span id=\"create_a_manufacturing_mode_bcd_package\"></span><span id=\"CREATE_A_MANUFACTURING_MODE_BCD_PACKAGE\"></span>Create a Manufacturing Mode BCD package\n\n\nYou can create a package that creates the MfgMode BCD entry and sets it to your custom manufacturing profile. To do this, you must first create an XML file that references the BCD entry:\n\n``` syntax\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<BootConfigurationDatabase xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns=\"http://schemas.microsoft.com/phone/2011/10/BootConfiguration\">\n  <Objects>\n\n    <!-- Global Settings Group -->\n    <Object SaveKeyToRegistry=\"false\">\n      <FriendlyName>Windows Loader</FriendlyName>\n      <Elements>\n\n        <Element>\n          <DataType>\n            <WellKnownType>Manufacturing Mode</WellKnownType>\n          </DataType>\n          <ValueType>\n            <StringValue>Default</StringValue>\n          </ValueType>\n        </Element>\n\n      </Elements>\n    </Object>\n\n  </Objects>\n</BootConfigurationDatabase>\n```\n\nAfter that is created, you can reference it in a package XML file:\n\n``` syntax\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Package xmlns=\"urn:Microsoft.WindowsPhone/PackageSchema.v8.00\"\n        Owner=\"Contoso\"\n        Component=\"MfgMode\"\n        SubComponent=\"ManufacturingModeBcd\"\n        ReleaseType=\"Production\"\n        Partition=\"EFIESP\"\n        OwnerType=\"OEM\">\n\n    <Components>\n        <BCDStore Source=\".\\exampleBcd.bcd.xml\"/>\n    </Components>\n</Package>\n```\n\n**Note**  There is a Partition attribute defining that these BCD entries need to apply to the EFIESP partition. This should be updated to be the partition where the BCD store for your device resides. If this is different from the partition where the main operating system resides, other operations such as adding files and registry keys to the main operating system partition cannot be done from the same package.\n\n \n\nTo create the package, you can use pkggen.exe (included with the Windows Driver Kit):\n\n``` syntax\npkggen.exe exampleBcd.pkg.xml /config:pkggen.cfg.xml\n```\n\n \n\n \n\n\n\n\n\n"}