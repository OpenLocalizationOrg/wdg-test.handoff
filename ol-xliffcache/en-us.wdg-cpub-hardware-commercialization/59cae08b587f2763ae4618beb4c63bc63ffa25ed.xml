{"nodes":[{"content":"Exercise 4 - Use MXA to Analyze Audio Glitches","pos":[11,57]},{"content":"In this lab, you’ll analyze audio glitches.","pos":[71,114]},{"content":"Exercise 4 - Use MXA to Analyze Audio Glitches","pos":[250,296]},{"content":"In this lab, you’ll analyze audio glitches.","pos":[299,342]},{"content":"Audio glitches are often caused by one of the following issues:","pos":[343,406]},{"content":"A Deferred Procedure Call (DPC) or an Interrupt Service Routine (ISR) that runs longer than 1 millisecond.","pos":[412,518]},{"content":"A driver or kernel thread that runs at dispatch level for 1 millisecond or longer.","pos":[524,606]},{"content":"Data cannot be read from the disk or the network isn’t fast enough because of high disk or network utilization.","pos":[612,723]},{"content":"The hardware or software decoder cannot decode and process the stream faster than real-time.","pos":[729,821]},{"content":"Step 1: Open the trace in MXA and drag the pertinent datasets into panels","pos":[826,899]},{"pos":[906,1029],"content":"Install <bpt id=\"p1\">**</bpt>Media eXperience Analyzer (MXA)<ept id=\"p1\">**</ept> which can be downloaded <bpt id=\"p2\">[</bpt>here<ept id=\"p2\">](https://go.microsoft.com/fwlink/?linkid=525711)</ept>."},{"pos":[1035,1109],"content":"Right-click on the <bpt id=\"p1\">**</bpt>Start<ept id=\"p1\">**</ept> menu and click on <bpt id=\"p2\">**</bpt>Command Prompt (Admin)<ept id=\"p2\">**</ept>."},{"pos":[1115,1166],"content":"Navigate to the folder where you installed <bpt id=\"p1\">**</bpt>MXA<ept id=\"p1\">**</ept>."},{"pos":[1172,1212],"content":"Set the <bpt id=\"p1\">**</bpt>MXA<ept id=\"p1\">**</ept> symbol paths on your PC."},{"pos":[1218,1409],"content":"Download <bpt id=\"p1\">**</bpt>AudioGlitches<ph id=\"ph1\">\\_</ph>ThreadsAtDispatchLevel.etl<ept id=\"p1\">**</ept> from <bpt id=\"p2\">[</bpt>here<ept id=\"p2\">](http://download.microsoft.com/download/9/6/0/96000C33-FB05-44B7-96A1-9C0CF5EE865B/AudioGlitches_ThreadsAtDispatchLevel.etl)</ept>."},{"pos":[1415,1513],"content":"Open the <bpt id=\"p1\">**</bpt>AudioGlitches<ph id=\"ph1\">\\_</ph>ThreadsAtDispatchLevel.etl<ept id=\"p1\">**</ept> trace file by typing the following command:"},{"pos":[1650,1791],"content":"For example, if you downloaded <bpt id=\"p1\">**</bpt>AudioGlitches<ph id=\"ph1\">\\_</ph>ThreadsAtDispatchLevel.etl<ept id=\"p1\">**</ept> to C:<ph id=\"ph2\">\\\\</ph>Performance<ph id=\"ph3\">\\\\</ph>Media, you would type the following command:"},{"pos":[1897,1991],"content":"On the <bpt id=\"p1\">**</bpt>MXA<ept id=\"p1\">**</ept> splash screen, press the <bpt id=\"p2\">**</bpt>Turn Symbols Off<ept id=\"p2\">**</ept> button to turn off symbol lookup."},{"content":"Once the trace is loaded, close any open panels that appear in the center of the application by pressing the small X next to the name of each panel.","pos":[2047,2195]},{"content":"Add 3 new panels.","pos":[2201,2218]},{"content":"Click <bpt id=\"p1\">**</bpt>View<ept id=\"p1\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p2\">**</bpt>New Panel<ept id=\"p2\">**</ept> or press <bpt id=\"p3\">**</bpt>CTRL+N<ept id=\"p3\">**</ept>.","pos":[2219,2273]},{"pos":[2279,2376],"content":"Drag and drop the <bpt id=\"p1\">**</bpt>Audio Glitches Classic<ept id=\"p1\">**</ept> dataset under the <bpt id=\"p2\">**</bpt>Media<ept id=\"p2\">**</ept> node into the top panel."},{"pos":[2382,2477],"content":"Drag and drop the <bpt id=\"p1\">**</bpt>Scheduler<ept id=\"p1\">**</ept> dataset under the <bpt id=\"p2\">**</bpt>CPU<ept id=\"p2\">**</ept> node into the 2nd panel from the top."},{"pos":[2483,2585],"content":"Drag and drop the <bpt id=\"p1\">**</bpt>Sampled Profiles<ept id=\"p1\">**</ept> dataset under the <bpt id=\"p2\">**</bpt>CPU<ept id=\"p2\">**</ept> node into the 3rd panel from the top."},{"content":"Filter the idle processes out of the view so that you can see the other thread activity more clearly.","pos":[2591,2692]},{"content":"In the dataset tree, expand the <bpt id=\"p1\">**</bpt>Scheduler<ept id=\"p1\">**</ept> dataset in the <bpt id=\"p2\">**</bpt>CPU<ept id=\"p2\">**</ept> node and click the <bpt id=\"p3\">**</bpt>Idle Threads<ept id=\"p3\">**</ept> node checkbox twice to deselect it.","pos":[2693,2833]},{"content":"Clicking the checkbox once highlights the data in the graph; clicking it twice deselects it.","pos":[2834,2926]},{"content":"Step 2: Identify the region of the trace where an audio glitch occurred","pos":[2931,3002]},{"content":"You can look at the audio engine data from the event trace log (.etl) files to see a visual timeline of when these glitches occurred and compare the timeline to other sets of data to look for patterns.","pos":[3005,3206]},{"pos":[3212,3346],"content":"Zoom in on an audio glitch by clicking and dragging the mouse over one of the bars in the <bpt id=\"p1\">**</bpt>Audio Glitches Classic<ept id=\"p1\">**</ept> panel at the top."},{"pos":[3352,3507],"content":"Notice that the <bpt id=\"p1\">**</bpt>iexplore.exe<ept id=\"p1\">**</ept> process in the <bpt id=\"p2\">**</bpt>Scheduler<ept id=\"p2\">**</ept> dataset in the 2nd panel was running for a long time (~20-35ms) just before the audio glitch."},{"pos":[3513,3706],"content":"Press escape to zoom out 100% then repeat the previous two steps to verify the pattern where the <bpt id=\"p1\">**</bpt>iexplore.exe<ept id=\"p1\">**</ept> process was running for long durations (~20-35 ms) prior to every audio glitch."},{"content":"To measure time within the panel, press the <bpt id=\"p1\">**</bpt>SHIFT<ept id=\"p1\">**</ept> key while you drag your mouse from one end of the <bpt id=\"p2\">**</bpt>iexplore.exe<ept id=\"p2\">**</ept> process bar to the other.","pos":[3712,3858]},{"content":"The tooltip over the mouse cursor shows you how many milliseconds you are measuring on the timeline.","pos":[3859,3959]},{"content":"In the <bpt id=\"p1\">**</bpt>MXA<ept id=\"p1\">**</ept> screenshot below, the process was running for about 35 milliseconds.","pos":[3960,4043]},{"content":"Step 3: Identify the cause of the delays in the pipeline","pos":[4098,4154]},{"content":"Before this audio glitch, the long-running <bpt id=\"p1\">**</bpt>iexplore.exe<ept id=\"p1\">**</ept> process was running on one of the cores.","pos":[4157,4257]},{"content":"To find out how the <bpt id=\"p1\">**</bpt>iexplore.exe<ept id=\"p1\">**</ept> thread is stalling the audio pipeline, you can look at the corresponding <bpt id=\"p2\">**</bpt>Sampled Profiles<ept id=\"p2\">**</ept> dataset in the <bpt id=\"p3\">**</bpt>CPU<ept id=\"p3\">**</ept> node.","pos":[4258,4417]},{"pos":[4423,4560],"content":"If the <bpt id=\"p1\">**</bpt>CallStack<ept id=\"p1\">**</ept> dataviewer is not visible in the <bpt id=\"p2\">**</bpt>MXA<ept id=\"p2\">**</ept> window, click <bpt id=\"p3\">**</bpt>View<ept id=\"p3\">**</ept> <ph id=\"ph1\">&amp;gt;</ph> <bpt id=\"p4\">**</bpt>Data Viewers<ept id=\"p4\">**</ept> <ph id=\"ph2\">&amp;gt;</ph> <bpt id=\"p5\">**</bpt>CallStack<ept id=\"p5\">**</ept> to open it."},{"pos":[4566,4727],"content":"In the <bpt id=\"p1\">**</bpt>Sampled Profiles<ept id=\"p1\">**</ept> panel (3rd from the top), hover over the sample profile events that match the same color of the long running <bpt id=\"p2\">**</bpt>iexplore.exe<ept id=\"p2\">**</ept> thread."},{"content":"The <bpt id=\"p1\">**</bpt>CallStack<ept id=\"p1\">**</ept> window shows the callstack for each sample.","pos":[4733,4794]},{"content":"Notice that a specific driver, <bpt id=\"p1\">**</bpt>ImageRAMONA.sys<ept id=\"p1\">**</ept>, is at the top of the <bpt id=\"p2\">**</bpt>CallStack<ept id=\"p2\">**</ept> when you hover over most of the samples in the core that <bpt id=\"p3\">**</bpt>iexplore.exe<ept id=\"p3\">**</ept> is running on.","pos":[4795,4970]},{"content":"Although the <bpt id=\"p1\">**</bpt>audiodg.exe<ept id=\"p1\">**</ept> thread is running at a higher priority (priority 22) than the <bpt id=\"p2\">**</bpt>iexplore.exe<ept id=\"p2\">**</ept> thread (priority 19), the <bpt id=\"p3\">**</bpt>iexplore.exe<ept id=\"p3\">**</ept> thread calls into a driver (<bpt id=\"p4\">**</bpt>ImageRAMONA.sys<ept id=\"p4\">**</ept>), which raises the IRQL level of the processor.","pos":[4976,5222]},{"content":"As a result, <bpt id=\"p1\">**</bpt>audiodg.exe<ept id=\"p1\">**</ept>, which is waiting on a DPC retained by the dispatcher doesn’t have a chance to run on its regular 10ms cadence, resulting in audio glitches.","pos":[5223,5392]},{"content":"Hold down the <bpt id=\"p1\">**</bpt>SHIFT<ept id=\"p1\">**</ept> key to freeze the <bpt id=\"p2\">**</bpt>CallStack<ept id=\"p2\">**</ept> and <bpt id=\"p3\">**</bpt>Properties Data Viewers<ept id=\"p3\">**</ept> and move your mouse to the <bpt id=\"p4\">**</bpt>CallStack<ept id=\"p4\">**</ept>.","pos":[5398,5527]},{"content":"Press <bpt id=\"p1\">**</bpt>Copy<ept id=\"p1\">**</ept>.","pos":[5528,5543]}],"content":"---\ntitle: Exercise 4 - Use MXA to Analyze Audio Glitches\ndescription: In this lab, you’ll analyze audio glitches.\nMSHAttr:\n- 'PreferredSiteName:MSDN'\n- 'PreferredLib:/library/windows/hardware'\nms.assetid: 79BE72BB-708D-4EA9-A0F0-59D93016A7C4\n---\n\n# Exercise 4 - Use MXA to Analyze Audio Glitches\n\n\nIn this lab, you’ll analyze audio glitches. Audio glitches are often caused by one of the following issues:\n\n-   A Deferred Procedure Call (DPC) or an Interrupt Service Routine (ISR) that runs longer than 1 millisecond.\n\n-   A driver or kernel thread that runs at dispatch level for 1 millisecond or longer.\n\n-   Data cannot be read from the disk or the network isn’t fast enough because of high disk or network utilization.\n\n-   The hardware or software decoder cannot decode and process the stream faster than real-time.\n\n## Step 1: Open the trace in MXA and drag the pertinent datasets into panels\n\n\n1.  Install **Media eXperience Analyzer (MXA)** which can be downloaded [here](https://go.microsoft.com/fwlink/?linkid=525711).\n\n2.  Right-click on the **Start** menu and click on **Command Prompt (Admin)**.\n\n3.  Navigate to the folder where you installed **MXA**.\n\n4.  Set the **MXA** symbol paths on your PC.\n\n5.  Download **AudioGlitches\\_ThreadsAtDispatchLevel.etl** from [here](http://download.microsoft.com/download/9/6/0/96000C33-FB05-44B7-96A1-9C0CF5EE865B/AudioGlitches_ThreadsAtDispatchLevel.etl).\n\n6.  Open the **AudioGlitches\\_ThreadsAtDispatchLevel.etl** trace file by typing the following command:\n\n    ``` syntax\n    xa.exe -i <AudioGlitches_ThreadsAtDispatchLevel.etl location>\\AudioGlitches_ThreadsAtDispatchLevel.etl\n    ```\n\n    For example, if you downloaded **AudioGlitches\\_ThreadsAtDispatchLevel.etl** to C:\\\\Performance\\\\Media, you would type the following command:\n\n    ``` syntax\n    xa.exe -i C:\\Performance\\Media\\AudioGlitches_ThreadsAtDispatchLevel.etl\n    ```\n\n7.  On the **MXA** splash screen, press the **Turn Symbols Off** button to turn off symbol lookup.\n\n    ![](images/optimizingwindowsdeviceslab4.png)\n\n8.  Once the trace is loaded, close any open panels that appear in the center of the application by pressing the small X next to the name of each panel.\n\n9.  Add 3 new panels. Click **View** &gt; **New Panel** or press **CTRL+N**.\n\n10. Drag and drop the **Audio Glitches Classic** dataset under the **Media** node into the top panel.\n\n11. Drag and drop the **Scheduler** dataset under the **CPU** node into the 2nd panel from the top.\n\n12. Drag and drop the **Sampled Profiles** dataset under the **CPU** node into the 3rd panel from the top.\n\n13. Filter the idle processes out of the view so that you can see the other thread activity more clearly. In the dataset tree, expand the **Scheduler** dataset in the **CPU** node and click the **Idle Threads** node checkbox twice to deselect it. Clicking the checkbox once highlights the data in the graph; clicking it twice deselects it.\n\n## Step 2: Identify the region of the trace where an audio glitch occurred\n\n\nYou can look at the audio engine data from the event trace log (.etl) files to see a visual timeline of when these glitches occurred and compare the timeline to other sets of data to look for patterns.\n\n1.  Zoom in on an audio glitch by clicking and dragging the mouse over one of the bars in the **Audio Glitches Classic** panel at the top.\n\n2.  Notice that the **iexplore.exe** process in the **Scheduler** dataset in the 2nd panel was running for a long time (~20-35ms) just before the audio glitch.\n\n3.  Press escape to zoom out 100% then repeat the previous two steps to verify the pattern where the **iexplore.exe** process was running for long durations (~20-35 ms) prior to every audio glitch.\n\n4.  To measure time within the panel, press the **SHIFT** key while you drag your mouse from one end of the **iexplore.exe** process bar to the other. The tooltip over the mouse cursor shows you how many milliseconds you are measuring on the timeline. In the **MXA** screenshot below, the process was running for about 35 milliseconds.\n\n    ![](images/optimizingwindowsdeviceslab5.png)\n\n## Step 3: Identify the cause of the delays in the pipeline\n\n\nBefore this audio glitch, the long-running **iexplore.exe** process was running on one of the cores. To find out how the **iexplore.exe** thread is stalling the audio pipeline, you can look at the corresponding **Sampled Profiles** dataset in the **CPU** node.\n\n1.  If the **CallStack** dataviewer is not visible in the **MXA** window, click **View** &gt; **Data Viewers** &gt; **CallStack** to open it.\n\n2.  In the **Sampled Profiles** panel (3rd from the top), hover over the sample profile events that match the same color of the long running **iexplore.exe** thread.\n\n3.  The **CallStack** window shows the callstack for each sample. Notice that a specific driver, **ImageRAMONA.sys**, is at the top of the **CallStack** when you hover over most of the samples in the core that **iexplore.exe** is running on.\n\n4.  Although the **audiodg.exe** thread is running at a higher priority (priority 22) than the **iexplore.exe** thread (priority 19), the **iexplore.exe** thread calls into a driver (**ImageRAMONA.sys**), which raises the IRQL level of the processor. As a result, **audiodg.exe**, which is waiting on a DPC retained by the dispatcher doesn’t have a chance to run on its regular 10ms cadence, resulting in audio glitches.\n\n5.  Hold down the **SHIFT** key to freeze the **CallStack** and **Properties Data Viewers** and move your mouse to the **CallStack**. Press **Copy**.\n\n![](images/optimizingwindowsdeviceslab6.png)\n\n \n\n \n\n\n\n\n\n\n"}