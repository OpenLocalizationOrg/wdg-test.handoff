<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\manufacture\desktop\configure-windows-system-assessment-test-scores.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">0e36dad1a917c02dea678a4767432bbdea1a10a2</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Configure Windows System Assessment Test Scores</source>
          <target>Configure Windows System Assessment Test Scores</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Configure Windows System Assessment Test Scores</source>
          <target>Configure Windows System Assessment Test Scores</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Configure Windows System Assessment Test Scores</source>
          <target>Configure Windows System Assessment Test Scores</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>The Windows® System Assessment Tests (WinSAT) are used to analyze the performance of several system components, including CPU, memory, disk, and graphics.</source>
          <target>The Windows® System Assessment Tests (WinSAT) are used to analyze the performance of several system components, including CPU, memory, disk, and graphics.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The WinSAT results are summarized in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Performance Information and Tools</pc> Control Panel item as Windows Experience Index (WEI) scores.</source>
          <target>The WinSAT results are summarized in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Performance Information and Tools</pc> Control Panel item as Windows Experience Index (WEI) scores.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>These scores show consumers the performance characteristics of their systems.</source>
          <target>These scores show consumers the performance characteristics of their systems.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>WinEI scores are no longer generated during OOBE, nor are prepop xml files used to create WinSAT formal files during OOBE.</source>
          <target>WinEI scores are no longer generated during OOBE, nor are prepop xml files used to create WinSAT formal files during OOBE.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>We recommended that you generate the WinSAT formal file on the system prior to shipping it to the end-users.</source>
          <target>We recommended that you generate the WinSAT formal file on the system prior to shipping it to the end-users.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>This allows WinSAT scores to be available as soon as end-user boots their systems, and allows the optimizations that depend on these results to be immediately available.</source>
          <target>This allows WinSAT scores to be available as soon as end-user boots their systems, and allows the optimizations that depend on these results to be immediately available.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Because the assessments are not run during the out-of-box experience, the WinSAT and WEI scores are no longer generated when a user finishes OOBE.</source>
          <target>Because the assessments are not run during the out-of-box experience, the WinSAT and WEI scores are no longer generated when a user finishes OOBE.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Instead, the scores can be generated at two other times, using other mechanisms besides prepopulating WinSAT on the system that will ship.</source>
          <target>Instead, the scores can be generated at two other times, using other mechanisms besides prepopulating WinSAT on the system that will ship.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>End users can explicitly request an assessment by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Re-run the assessment</pc> option in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Performance Information and Tools</pc> Control Panel item.</source>
          <target>End users can explicitly request an assessment by using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Re-run the assessment</pc> option in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Performance Information and Tools</pc> Control Panel item.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>When the system is idle, subsequent to the first boot, the remaining WinSAT assessments will run using the Maintenance Scheduler if they were not prepopulated.</source>
          <target>When the system is idle, subsequent to the first boot, the remaining WinSAT assessments will run using the Maintenance Scheduler if they were not prepopulated.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>To run WinSAT on a complete system</source>
          <target>To run WinSAT on a complete system</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">prepop</pc> option with the WinSAT command-line tool to run assessments against component systems.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">prepop</pc> option with the WinSAT command-line tool to run assessments against component systems.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>To run WinSAT per computer (for all systems):</source>
          <target>To run WinSAT per computer (for all systems):</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Install Windows 8 and boot to audit mode.</source>
          <target>Install Windows 8 and boot to audit mode.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=214469)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about audit mode, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit Mode Overview</pc>.</source>
          <target>For more information about audit mode, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit Mode Overview</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Add supplemental components, such as out-of-box drivers.</source>
          <target>Add supplemental components, such as out-of-box drivers.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc>.</source>
          <target>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc>.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>This will generate the WinSAT prepop .xml results files to the Datastore directory, located at:</source>
          <target>This will generate the WinSAT prepop .xml results files to the Datastore directory, located at:</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">\]</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
        </originalData>
        <segment state="initial">
          <source>Optional<ph dataRef="id1" id="ph1" /> If you plan to capture this installation to deploy onto other computers, run <pc dataRefEnd="id3" dataRefStart="id2" id="p1">sysprep /generalize /audit /shutdown</pc> and then capture the installation.</source>
          <target>Optional<ph dataRef="id1" id="ph1" /> If you plan to capture this installation to deploy onto other computers, run <pc dataRefEnd="id3" dataRefStart="id2" id="p1">sysprep /generalize /audit /shutdown</pc> and then capture the installation.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Deploy the image to a PC that you intend to ship, and boot it.</source>
          <target>Deploy the image to a PC that you intend to ship, and boot it.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Verify that Windows boots to audit mode, and then run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc>.</source>
          <target>Verify that Windows boots to audit mode, and then run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc>.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>This generates a WinSAT formal file from the matching prepop files, and ensures that the WinSAT formal file is available when the end-user boots the system the first time.</source>
          <target>This generates a WinSAT formal file from the matching prepop files, and ensures that the WinSAT formal file is available when the end-user boots the system the first time.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Windows scales some features based on the WinSAT formal file, and if this file is not present on the system, then the system might experience performance problems, including unnecessary storage device defragmentation, lack of optimized memory management and prefetching optimizations.</source>
          <target>Windows scales some features based on the WinSAT formal file, and if this file is not present on the system, then the system might experience performance problems, including unnecessary storage device defragmentation, lack of optimized memory management and prefetching optimizations.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To reduce the time a PC spends on the factory floor, we recommend using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> when you are creating your master Windows images.</source>
          <target>To reduce the time a PC spends on the factory floor, we recommend using <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> when you are creating your master Windows images.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>On the factory floor, you would only need to run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc>.</source>
          <target>On the factory floor, you would only need to run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>However, if you want to run both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT moobe</pc> on the factory floor, you can use <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WinSAT formal</pc> instead.</source>
          <target>However, if you want to run both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT moobe</pc> on the factory floor, you can use <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WinSAT formal</pc> instead.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>This option creates the same set of files as running both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT moobe</pc> and should be used in scenarios when you are not able to run <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WinSAT prepop</pc> on your master Windows images.</source>
          <target>This option creates the same set of files as running both <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT moobe</pc> and should be used in scenarios when you are not able to run <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WinSAT prepop</pc> on your master Windows images.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sysprep /oobe</pc> to configure Windows to boot to OOBE.</source>
          <target>Run the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sysprep /oobe</pc> to configure Windows to boot to OOBE.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Warning</source>
          <target>Warning</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Running <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sysprep /generalize</pc> after running <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT moobe</pc> will delete the results that <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WinSAT moobe</pc> created.</source>
          <target>Running <pc dataRefEnd="id2" dataRefStart="id1" id="p1">sysprep /generalize</pc> after running <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT moobe</pc> will delete the results that <pc dataRefEnd="id6" dataRefStart="id5" id="p3">WinSAT moobe</pc> created.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>We recommend that you run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT formal</pc> on the factory floor for each PC that you intend to ship to a customer.</source>
          <target>We recommend that you run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">WinSAT formal</pc> on the factory floor for each PC that you intend to ship to a customer.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The system is now ready to be shipped to a customer.</source>
          <target>The system is now ready to be shipped to a customer.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>The benefit of running all of the WinSAT assessments per computer image is that the customer’s computer always has a complete set of WinSAT results.</source>
          <target>The benefit of running all of the WinSAT assessments per computer image is that the customer’s computer always has a complete set of WinSAT results.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>It also has the most accurate WinSAT results.</source>
          <target>It also has the most accurate WinSAT results.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>In this use, accurate means that if the consumer used on-demand rating of a system, that system would get a rating equal to or greater than the rating that was prepopulated by WinSAT.</source>
          <target>In this use, accurate means that if the consumer used on-demand rating of a system, that system would get a rating equal to or greater than the rating that was prepopulated by WinSAT.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Pre-population is not meant to enable transferring WinSAT data among systems with very different capabilities, such as among laptops and desktops, because the data is not accurate across widely differing systems.</source>
          <target>Pre-population is not meant to enable transferring WinSAT data among systems with very different capabilities, such as among laptops and desktops, because the data is not accurate across widely differing systems.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Instead, it is meant to make it easier to re-use WinSAT data among similar systems; those systems that contain the same motherboard/chipset and similar CPU, video cards and disks.</source>
          <target>Instead, it is meant to make it easier to re-use WinSAT data among similar systems; those systems that contain the same motherboard/chipset and similar CPU, video cards and disks.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>The following procedure describes how to run WinSAT on selected configurations within a line of similar computers.</source>
          <target>The following procedure describes how to run WinSAT on selected configurations within a line of similar computers.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>This involves running the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> commands multiple times.</source>
          <target>This involves running the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc> commands multiple times.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>To run WinSAT for selective PC configurations and PC components</source>
          <target>To run WinSAT for selective PC configurations and PC components</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Identify the configurations that you intend to include in the PC, including video processors, memory, and storage devices.</source>
          <target>Identify the configurations that you intend to include in the PC, including video processors, memory, and storage devices.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Install Windows 8 and boot to audit mode.</source>
          <target>Install Windows 8 and boot to audit mode.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=214469)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about audit mode, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit Mode Overview</pc>.</source>
          <target>For more information about audit mode, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit Mode Overview</pc>.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Add supplemental components, such as out-of-box drivers.</source>
          <target>Add supplemental components, such as out-of-box drivers.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc>.</source>
          <target>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop</pc>.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sysprep /generalize /audit /reboot</pc>.</source>
          <target>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sysprep /generalize /audit /reboot</pc>.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>This will remove any non-prepop WinSAT .xml files.</source>
          <target>This will remove any non-prepop WinSAT .xml files.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">`%WINDIR%\performance\winsat\datastore`</data>
        </originalData>
        <segment state="initial">
          <source>Copy the resulting WinSAT prepop .xml files from <ph dataRef="id1" id="ph1" /> to the network share that you are using to store WinSAT results.</source>
          <target>Copy the resulting WinSAT prepop .xml files from <ph dataRef="id1" id="ph1" /> to the network share that you are using to store WinSAT results.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Upgrade one of the components.</source>
          <target>Upgrade one of the components.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>For example, increase the memory of one configuration in your set of computers.</source>
          <target>For example, increase the memory of one configuration in your set of computers.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop -mem</pc> test.</source>
          <target>Run <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop -mem</pc> test.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Using the tool this way ensures that only tests relevant to the specified component will run.</source>
          <target>Using the tool this way ensures that only tests relevant to the specified component will run.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>An additional .xml file is generated that shows the memory test results.</source>
          <target>An additional .xml file is generated that shows the memory test results.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Restore the original memory configuration, and upgrade a different component, such as the video card.</source>
          <target>Restore the original memory configuration, and upgrade a different component, such as the video card.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Because WinSAT results can be used with configurations of the same level or higher, if you revert to the base configuration, the test results are relevant to a broader range of computers.</source>
          <target>Because WinSAT results can be used with configurations of the same level or higher, if you revert to the base configuration, the test results are relevant to a broader range of computers.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Re-run the test using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop -graphics</pc> command.</source>
          <target>Re-run the test using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT prepop -graphics</pc> command.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Only tests relevant to the specified component run.</source>
          <target>Only tests relevant to the specified component run.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>An additional .xml file is generated for the Graphics results.</source>
          <target>An additional .xml file is generated for the Graphics results.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Store the new results files with the original .xml results files on your network share.</source>
          <target>Store the new results files with the original .xml results files on your network share.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">`%WINDIR%\performance\winsat\datastore`</data>
        </originalData>
        <segment state="initial">
          <source>To prepopulate the WinSAT results for a new computer with similar components, copy the .xml files from the network share to the target computer's WinSAT Datastore directory: <ph dataRef="id1" id="ph1" />.</source>
          <target>To prepopulate the WinSAT results for a new computer with similar components, copy the .xml files from the network share to the target computer's WinSAT Datastore directory: <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>You can copy the entire set of WinSAT prepop files from the network share to the local WinSAT directory.</source>
          <target>You can copy the entire set of WinSAT prepop files from the network share to the local WinSAT directory.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>WinSAT will find the correct set for the current computer.</source>
          <target>WinSAT will find the correct set for the current computer.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">`WinSAT moobe`</data>
        </originalData>
        <segment state="initial">
          <source>On the new computer run <ph dataRef="id1" id="ph1" />.</source>
          <target>On the new computer run <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>This generates a WinSAT formal file from the matching prepop files, and ensures that the WinSAT formal file is available when the end-user boots the system the first time.</source>
          <target>This generates a WinSAT formal file from the matching prepop files, and ensures that the WinSAT formal file is available when the end-user boots the system the first time.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Windows scales some features based on the WinSAT formal file, and if this file is not present on the system, then the system might experience performance problems, including unnecessary storage device defragmentation, lack of optimized memory management and prefetching optimizations.</source>
          <target>Windows scales some features based on the WinSAT formal file, and if this file is not present on the system, then the system might experience performance problems, including unnecessary storage device defragmentation, lack of optimized memory management and prefetching optimizations.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">`%WINDIR%\performance\winsat\datastore`</data>
        </originalData>
        <segment state="initial">
          <source>When running <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc> WinSAT examines the following directory for results files: <ph dataRef="id3" id="ph1" />.</source>
          <target>When running <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinSAT moobe</pc> WinSAT examines the following directory for results files: <ph dataRef="id3" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>If WinSAT does not discover a relevant set of .xml files, it will ignore the irrelevant files and treat the system as unrated.</source>
          <target>If WinSAT does not discover a relevant set of .xml files, it will ignore the irrelevant files and treat the system as unrated.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The DWM test will run immediately, and the other tests will run as a maintenance task, or when the end-user opts to run the tests from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Performance Information and Tools</pc> Control Panel item.</source>
          <target>The DWM test will run immediately, and the other tests will run as a maintenance task, or when the end-user opts to run the tests from the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Performance Information and Tools</pc> Control Panel item.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>If WinSAT finds a relevant set of prepop .xml files, it uses the files to generate a formal .xml file which will be available for use when the end-user boots the computer for the first time.</source>
          <target>If WinSAT finds a relevant set of prepop .xml files, it uses the files to generate a formal .xml file which will be available for use when the end-user boots the computer for the first time.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>This enables scaling of features and allows Windows to perform appropriate optimizations.</source>
          <target>This enables scaling of features and allows Windows to perform appropriate optimizations.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>WinSAT determines relevance by using hardware IDs.</source>
          <target>WinSAT determines relevance by using hardware IDs.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>This includes: CPUID, memory DIMM configuration, hard disk model and size, and video card PNP ID.</source>
          <target>This includes: CPUID, memory DIMM configuration, hard disk model and size, and video card PNP ID.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>If the relevant secondary assessment is not present, WinSAT will run both the primary and secondary assessments; for example, both CPU and memory.</source>
          <target>If the relevant secondary assessment is not present, WinSAT will run both the primary and secondary assessments; for example, both CPU and memory.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>The advantage of this second option, running on selective configurations, is that WinSAT assessments may be run on fewer configurations and copied to similar systems.</source>
          <target>The advantage of this second option, running on selective configurations, is that WinSAT assessments may be run on fewer configurations and copied to similar systems.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>The disadvantage is that if a set of WinSAT files is not relevant to the current system, those tests will be ignored and the system will be treated as unrated, and optimizations and feature scaling will not be performed when the end-user boots the computer.</source>
          <target>The disadvantage is that if a set of WinSAT files is not relevant to the current system, those tests will be ignored and the system will be treated as unrated, and optimizations and feature scaling will not be performed when the end-user boots the computer.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>WinSAT Prepop Command-line Options</source>
          <target>WinSAT Prepop Command-line Options</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>The syntax for prepopulation is as follows:</source>
          <target>The syntax for prepopulation is as follows:</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">`Winsat prepop`</data>
        </originalData>
        <segment state="initial">
          <source>The following command runs all WinSAT tests: <ph dataRef="id1" id="ph1" />.</source>
          <target>The following command runs all WinSAT tests: <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>You can prepopulate only one subsystem, such as DWM, subject to the following dependencies:</source>
          <target>You can prepopulate only one subsystem, such as DWM, subject to the following dependencies:</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>The DWM assessment can be run independently.</source>
          <target>The DWM assessment can be run independently.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>The disk assessment can be run independently.</source>
          <target>The disk assessment can be run independently.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>The CPU assessment requires that a relevant memory assessment is present.</source>
          <target>The CPU assessment requires that a relevant memory assessment is present.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>The memory assessment requires that a relevant CPU assessment is present.</source>
          <target>The memory assessment requires that a relevant CPU assessment is present.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>The graphics assessment requires that relevant CPU and memory assessments are present.</source>
          <target>The graphics assessment requires that relevant CPU and memory assessments are present.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>The syntax for moobe is as follows:</source>
          <target>The syntax for moobe is as follows:</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>The WinSAT file naming pattern is as follows:</source>
          <target>The WinSAT file naming pattern is as follows:</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">`%type%`</data>
          <data id="id2">`Prepop`</data>
        </originalData>
        <segment state="initial">
          <source>For Windows 8, there is a <ph dataRef="id1" id="ph1" /> identifier, <ph dataRef="id2" id="ph2" />.</source>
          <target>For Windows 8, there is a <ph dataRef="id1" id="ph1" /> identifier, <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>This identifies datastore files that are a result of prepopulation.</source>
          <target>This identifies datastore files that are a result of prepopulation.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>The naming pattern is:</source>
          <target>The naming pattern is:</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">`%IdentifierDerivedFromDate%`</data>
          <data id="id2">`0012-08-01 14.48.28`</data>
        </originalData>
        <segment state="initial">
          <source>Where <ph dataRef="id1" id="ph1" /> is year-month-day and time represented as, for example, <ph dataRef="id2" id="ph2" /> where the test was run on August 1, 2012 at 2:48:28 PM.</source>
          <target>Where <ph dataRef="id1" id="ph1" /> is year-month-day and time represented as, for example, <ph dataRef="id2" id="ph2" /> where the test was run on August 1, 2012 at 2:48:28 PM.</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>A WinSAT formal file created from running <pc dataRefEnd="id2" dataRefStart="id1" id="p1">winsat prepop</pc> followed by <pc dataRefEnd="id4" dataRefStart="id3" id="p2">winsat moobe</pc>; or from running <pc dataRefEnd="id6" dataRefStart="id5" id="p3">winsat formal</pc> uses the following naming pattern:</source>
          <target>A WinSAT formal file created from running <pc dataRefEnd="id2" dataRefStart="id1" id="p1">winsat prepop</pc> followed by <pc dataRefEnd="id4" dataRefStart="id3" id="p2">winsat moobe</pc>; or from running <pc dataRefEnd="id6" dataRefStart="id5" id="p3">winsat formal</pc> uses the following naming pattern:</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Windows Deployment Options</source>
          <target>Windows Deployment Options</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>