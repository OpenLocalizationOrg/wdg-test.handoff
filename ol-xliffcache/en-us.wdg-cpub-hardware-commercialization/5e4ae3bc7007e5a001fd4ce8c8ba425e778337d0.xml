{"nodes":[{"content":"This function supplies a boot mode and optional profile name to the firmware to use on subsequent boots.","pos":[35,139]},{"content":"EFI<ph id=\"ph1\">\\_</ph>BOOT<ph id=\"ph2\">\\_</ph>MODE<ph id=\"ph3\">\\_</ph>MGMT<ph id=\"ph4\">\\_</ph>PROTOCOL.SetBootModeInfo","pos":[248,295]},{"content":"EFI<ph id=\"ph1\">\\_</ph>BOOT<ph id=\"ph2\">\\_</ph>MODE<ph id=\"ph3\">\\_</ph>MGMT<ph id=\"ph4\">\\_</ph>PROTOCOL.SetBootModeInfo","pos":[304,351]},{"content":"This function supplies a boot mode and optional profile name to the firmware to use on subsequent boots.","pos":[354,458]},{"pos":[867,877],"content":"Parameters"},{"content":"This","pos":[950,954]},{"content":"in<ph id=\"ph1\">\\]</ph> A pointer to the <bpt id=\"p1\">**</bpt>EFI<ph id=\"ph2\">\\_</ph>BOOT<ph id=\"ph3\">\\_</ph>MODE<ph id=\"ph4\">\\_</ph>MGMT<ph id=\"ph5\">\\_</ph>PROTOCOL<ept id=\"p1\">**</ept> instance.","pos":[960,1027]},{"content":"BootMode","pos":[1111,1119]},{"content":"in<ph id=\"ph1\">\\]</ph> A pointer to the enumeration that holds the boot mode of the device.","pos":[1125,1198]},{"content":"ProfileNameElements","pos":[1315,1334]},{"content":"in<ph id=\"ph1\">\\]</ph> A pointer to a UINT32 value of the number of characters in the profile name to set.","pos":[1340,1428]},{"content":"ProfileName","pos":[1521,1532]},{"content":"in<ph id=\"ph1\">\\]</ph> A pointer to the name of the boot mode profile to set.","pos":[1538,1597]},{"pos":[1698,1711],"content":"Return values"},{"content":"Returns one of the following status codes:","pos":[1714,1756]},{"content":"Return code","pos":[1760,1771]},{"content":"Description","pos":[1785,1796]},{"content":"EFI<ph id=\"ph1\">\\_</ph>SUCCESS","pos":[1948,1960]},{"content":"Success","pos":[1973,1980]},{"content":"EFI<ph id=\"ph1\">\\_</ph>NOT<ph id=\"ph2\">\\_</ph>FOUND","pos":[2042,2057]},{"content":"The boot mode data was not found.","pos":[2067,2100]},{"content":"EFI<ph id=\"ph1\">\\_</ph>VOLUME<ph id=\"ph2\">\\_</ph>CORRUPTED","pos":[2136,2158]},{"content":"A required storage partition is not initialized or is corrupted.","pos":[2161,2225]},{"content":"EFI<ph id=\"ph1\">\\_</ph>INVALID<ph id=\"ph2\">\\_</ph>PARAM","pos":[2230,2249]},{"content":"An invalid parameter was passed to the function.","pos":[2255,2303]},{"content":"EFI<ph id=\"ph1\">\\_</ph>BAD<ph id=\"ph2\">\\_</ph>BUFFER<ph id=\"ph3\">\\_</ph>SIZE","pos":[2324,2346]},{"content":"The ProfileName name string is too long.","pos":[2349,2389]},{"pos":[2516,2528],"content":"Requirements"},{"pos":[2531,2557],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> User generated"},{"pos":[2595,2609],"content":"Related topics"},{"content":"Boot mode management UEFI protocol","pos":[2613,2647]}],"content":"---\nauthor: kpacquer\nDescription: 'This function supplies a boot mode and optional profile name to the firmware to use on subsequent boots.'\nms.assetid: b4cc9267-0237-41eb-bce3-ced8247c42b5\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: 'EFI\\_BOOT\\_MODE\\_MGMT\\_PROTOCOL.SetBootModeInfo'\n---\n\n# EFI\\_BOOT\\_MODE\\_MGMT\\_PROTOCOL.SetBootModeInfo\n\n\nThis function supplies a boot mode and optional profile name to the firmware to use on subsequent boots.\n\n``` syntax\ntypedef EFI_STATUS\n(EFIAPI *EFI_SET_BOOT_MODE_INFO)(\n    IN  struct _EFI_BOOT_MODE_MGMT_PROTOCOL *This,\n    IN EFI_OS_BOOT_MODE                    *BootMode,\n    IN UINT32                           *ProfileNameElements OPTIONAL,\n    IN CHAR16                              *ProfileName OPTIONAL\n    );\n```\n\n## <span id=\"Parameters\"></span><span id=\"parameters\"></span><span id=\"PARAMETERS\"></span>Parameters\n\n\n<span id=\"This\"></span><span id=\"this\"></span><span id=\"THIS\"></span>*This*  \n\\[in\\] A pointer to the **EFI\\_BOOT\\_MODE\\_MGMT\\_PROTOCOL** instance.\n\n<span id=\"BootMode\"></span><span id=\"bootmode\"></span><span id=\"BOOTMODE\"></span>*BootMode*  \n\\[in\\] A pointer to the enumeration that holds the boot mode of the device.\n\n<span id=\"ProfileNameElements\"></span><span id=\"profilenameelements\"></span><span id=\"PROFILENAMEELEMENTS\"></span>*ProfileNameElements*  \n\\[in\\] A pointer to a UINT32 value of the number of characters in the profile name to set.\n\n<span id=\"ProfileName\"></span><span id=\"profilename\"></span><span id=\"PROFILENAME\"></span>*ProfileName*  \n\\[in\\] A pointer to the name of the boot mode profile to set.\n\n## <span id=\"Return_values\"></span><span id=\"return_values\"></span><span id=\"RETURN_VALUES\"></span>Return values\n\n\nReturns one of the following status codes:\n\n| Return code            | Description                                                      |\n|------------------------|------------------------------------------------------------------|\n| EFI\\_SUCCESS           | Success                                                          |\n| EFI\\_NOT\\_FOUND        | The boot mode data was not found.                                |\n| EFI\\_VOLUME\\_CORRUPTED | A required storage partition is not initialized or is corrupted. |\n| EFI\\_INVALID\\_PARAM    | An invalid parameter was passed to the function.                 |\n| EFI\\_BAD\\_BUFFER\\_SIZE | The ProfileName name string is too long.                         |\n\n \n\n## <span id=\"Requirements\"></span><span id=\"requirements\"></span><span id=\"REQUIREMENTS\"></span>Requirements\n\n\n**Header:** User generated\n\n## <span id=\"related_topics\"></span>Related topics\n\n\n[Boot mode management UEFI protocol](boot-mode-management-uefi-protocol.md)\n\n \n\n \n\n\n\n\n\n\n"}