{"nodes":[{"content":"WlanMTEResetAdapter","pos":[34,53]},{"content":"WlanMTEResetAdapter","pos":[160,179]},{"content":"WlanMTEResetAdapter","pos":[187,206]},{"content":"Resets the Wi-Fi adapter.","pos":[209,234]},{"content":"The application can specify an optional callback and context handle to be invoked when the operation is complete.","pos":[235,348]},{"pos":[428,434],"content":"Syntax"},{"pos":[789,799],"content":"Parameters"},{"content":"hAdapter","pos":[884,892]},{"content":"in<ph id=\"ph1\">\\]</ph> The handle to the Wi-Fi adapter, obtained by calling <bpt id=\"p1\">[</bpt>WlanMTEOpenHandle<ept id=\"p1\">](wlanmteopenhandle.md)</ept>.","pos":[898,998]},{"content":"pDot11ResetRequest","pos":[1112,1130]},{"content":"in<ph id=\"ph1\">\\]</ph> Information about the reset request.","pos":[1136,1177]},{"content":"If the application requires the reset in order to update the MAC address, it should specify either <bpt id=\"p1\">**</bpt>dot11<ph id=\"ph1\">\\_</ph>reset<ph id=\"ph2\">\\_</ph>type<ph id=\"ph3\">\\_</ph>mac<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>dot11<ph id=\"ph4\">\\_</ph>reset<ph id=\"ph5\">\\_</ph>type<ph id=\"ph6\">\\_</ph>phy<ph id=\"ph7\">\\_</ph>and<ph id=\"ph8\">\\_</ph>mac<ept id=\"p2\">**</ept> in order for the updated MAC address to be written to the DPP.","pos":[1178,1408]},{"content":"Note that the MAC address change will only be valid when the device has booted in manufacturing mode.","pos":[1409,1510]},{"content":"ResetCallback","pos":[1609,1622]},{"content":"in, optional<ph id=\"ph1\">\\]</ph> The callback handler to be invoked on reset completion.","pos":[1628,1698]},{"content":"pvContext","pos":[1785,1794]},{"content":"in, optional<ph id=\"ph1\">\\]</ph> If the callback is specified, this context value is provided when the handler is called.","pos":[1800,1903]},{"pos":[1986,1993],"content":"Remarks"},{"content":"The callback function for Wi-Fi reset adapter notifications has the following prototype:","pos":[1996,2084]},{"pos":[2312,2324],"content":"Return Value"},{"content":"If the function succeeds, the return value is ERROR<ph id=\"ph1\">\\_</ph>SUCCESS.","pos":[2327,2388]},{"content":"If the function fails, the return value is one of the system error codes.","pos":[2390,2463]},{"content":"The following table lists the error codes that may be returned.","pos":[2464,2527]},{"content":"Error code","pos":[2645,2655]},{"content":"Description","pos":[2678,2689]},{"content":"ERROR_INVALID_PARAMETER","pos":[2755,2778]},{"content":"Returned when the <ph id=\"ph1\">&lt;em&gt;</ph>pDot11ResetRequest<ph id=\"ph2\">&lt;/em&gt;</ph> parameter is NULL or the <ph id=\"ph3\">&lt;em&gt;</ph>pDot11ResetRequest<ph id=\"ph4\">&lt;/em&gt;</ph> type is invalid.","pos":[2808,2923]},{"content":"ERROR_INVALID_HANDLE","pos":[2977,2997]},{"content":"Returned if the <ph id=\"ph1\">&lt;em&gt;</ph>hAdapter<ph id=\"ph2\">&lt;/em&gt;</ph> handle is invalid.","pos":[3027,3079]},{"pos":[3213,3225],"content":"Requirements"},{"pos":[3228,3249],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> wifimte.w"},{"pos":[3287,3301],"content":"Related topics"},{"content":"Wi-Fi manufacturing API","pos":[3305,3328]}],"content":"---\nauthor: kpacquer\nDescription: WlanMTEResetAdapter\nms.assetid: bb87f719-3277-4fcc-aa9f-94ff1dac34f1\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: WlanMTEResetAdapter\n---\n\n# WlanMTEResetAdapter\n\n\nResets the Wi-Fi adapter. The application can specify an optional callback and context handle to be invoked when the operation is complete.\n\n## <span id=\"Syntax\"></span><span id=\"syntax\"></span><span id=\"SYNTAX\"></span>Syntax\n\n\n``` syntax\nDWORD WlanMTEResetAdapter(\n    __in        HANDLE                  hAdapter,\n    __in        DOT11_RESET_REQUEST     *pDot11ResetRequest,\n    __in        WLAN_MTE_RESET_CALLBACK ResetCallback,\n    __in        PVOID                   pvContext\n);\n```\n\n## <span id=\"Parameters\"></span><span id=\"parameters\"></span><span id=\"PARAMETERS\"></span>Parameters\n\n\n<span id=\"hAdapter\"></span><span id=\"hadapter\"></span><span id=\"HADAPTER\"></span>*hAdapter*  \n\\[in\\] The handle to the Wi-Fi adapter, obtained by calling [WlanMTEOpenHandle](wlanmteopenhandle.md).\n\n<span id=\"pDot11ResetRequest\"></span><span id=\"pdot11resetrequest\"></span><span id=\"PDOT11RESETREQUEST\"></span>*pDot11ResetRequest*  \n\\[in\\] Information about the reset request. If the application requires the reset in order to update the MAC address, it should specify either **dot11\\_reset\\_type\\_mac** or **dot11\\_reset\\_type\\_phy\\_and\\_mac** in order for the updated MAC address to be written to the DPP. Note that the MAC address change will only be valid when the device has booted in manufacturing mode.\n\n<span id=\"ResetCallback\"></span><span id=\"resetcallback\"></span><span id=\"RESETCALLBACK\"></span>*ResetCallback*  \n\\[in, optional\\] The callback handler to be invoked on reset completion.\n\n<span id=\"pvContext\"></span><span id=\"pvcontext\"></span><span id=\"PVCONTEXT\"></span>*pvContext*  \n\\[in, optional\\] If the callback is specified, this context value is provided when the handler is called.\n\n## <span id=\"Remarks\"></span><span id=\"remarks\"></span><span id=\"REMARKS\"></span>Remarks\n\n\nThe callback function for Wi-Fi reset adapter notifications has the following prototype:\n\n``` syntax\ntypedef VOID (WINAPI *WLAN_MTE_RESET_CALLBACK)(\n    __in    DWORD   dwError,\n    __in    PVOID   pvContext\n    );\n```\n\n## <span id=\"Return_Value\"></span><span id=\"return_value\"></span><span id=\"RETURN_VALUE\"></span>Return Value\n\n\nIf the function succeeds, the return value is ERROR\\_SUCCESS.\n\nIf the function fails, the return value is one of the system error codes. The following table lists the error codes that may be returned.\n\n<table>\n<colgroup>\n<col width=\"50%\" />\n<col width=\"50%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">Error code</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td align=\"left\"><p>ERROR_INVALID_PARAMETER</p></td>\n<td align=\"left\"><p>Returned when the <em>pDot11ResetRequest</em> parameter is NULL or the <em>pDot11ResetRequest</em> type is invalid.</p></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"><p>ERROR_INVALID_HANDLE</p></td>\n<td align=\"left\"><p>Returned if the <em>hAdapter</em> handle is invalid.</p></td>\n</tr>\n</tbody>\n</table>\n\n \n\n## <span id=\"Requirements\"></span><span id=\"requirements\"></span><span id=\"REQUIREMENTS\"></span>Requirements\n\n\n**Header:** wifimte.w\n\n## <span id=\"related_topics\"></span>Related topics\n\n\n[Wi-Fi manufacturing API](wi-fi-manufacturing-api.md)\n\n \n\n \n\n\n\n\n\n\n"}