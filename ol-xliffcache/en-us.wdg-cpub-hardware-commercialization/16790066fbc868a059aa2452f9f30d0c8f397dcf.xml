{"nodes":[{"content":"WlanMTESleep","pos":[34,46]},{"content":"WlanMTESleep","pos":[153,165]},{"content":"WlanMTESleep","pos":[173,185]},{"content":"Requests that the driver to go to sleep either for a specified time interval, or indefinitely until an awake request is sent.","pos":[188,313]},{"pos":[393,399],"content":"Syntax"},{"pos":[671,681],"content":"Parameters"},{"content":"hAdapter","pos":[766,774]},{"content":"in<ph id=\"ph1\">\\]</ph> The handle to the Wi-Fi adapter, obtained by calling <bpt id=\"p1\">[</bpt>WlanMTEOpenHandle<ept id=\"p1\">](wlanmteopenhandle.md)</ept>.","pos":[780,880]},{"content":"uSleepTime","pos":[970,980]},{"content":"in<ph id=\"ph1\">\\]</ph> The time in milliseconds for the adapter to remain in sleep mode.","pos":[986,1056]},{"content":"If a value of −1 is specified, the adapter sleeps until a <bpt id=\"p1\">[</bpt>WlanMTEAwake<ept id=\"p1\">](wlanmteawake.md)</ept> request is sent.","pos":[1057,1163]},{"content":"pvContext","pos":[1250,1259]},{"content":"in<ph id=\"ph1\">\\]</ph> The context that uniquely identifies this request in the callback.","pos":[1265,1336]},{"pos":[1434,1446],"content":"Return Value"},{"content":"If the function succeeds, the return value is ERROR<ph id=\"ph1\">\\_</ph>SUCCESS.","pos":[1449,1510]},{"content":"If the function fails, the return value is one of the system error codes.","pos":[1512,1585]},{"content":"The following table lists one of the error codes that may be returned.","pos":[1586,1656]},{"content":"Error code","pos":[1774,1784]},{"content":"Description","pos":[1807,1818]},{"content":"ERROR_INVALID_PARAMETER","pos":[1884,1907]},{"content":"Returned if the <ph id=\"ph1\">&lt;em&gt;</ph>uSleepTime<ph id=\"ph2\">&lt;/em&gt;</ph> parameter is NULL.","pos":[1937,1991]},{"content":"ERROR_INVALID_HANDLE","pos":[2045,2065]},{"content":"Returned if the <ph id=\"ph1\">&lt;em&gt;</ph>hAdapter<ph id=\"ph2\">&lt;/em&gt;</ph> handle is invalid.","pos":[2095,2147]},{"content":"ERROR_OUTOFMEMORY","pos":[2200,2217]},{"content":"Returned when sufficient memory to perform the operation cannot be allocated.","pos":[2247,2324]},{"pos":[2443,2450],"content":"Remarks"},{"content":"During sleep mode, all radios are turned off and the Wi-Fi chip is powered off.","pos":[2453,2532]},{"content":"When the adapter reawakens, the application’s callback handler, if one was registered with <bpt id=\"p1\">[</bpt>WlanMTERegisterCallbackHandler<ept id=\"p1\">](wlanmteregistercallbackhandler.md)</ept>, is called with the <bpt id=\"p2\">**</bpt>dot11ManufacturingCallbackType<ept id=\"p2\">**</ept> set to <bpt id=\"p3\">**</bpt>dot11<ph id=\"ph1\">\\_</ph>manufacturing<ph id=\"ph2\">\\_</ph>callback<ph id=\"ph3\">\\_</ph>sleep<ph id=\"ph4\">\\_</ph>complete<ept id=\"p3\">**</ept> and the result of the sleep operation is included.","pos":[2533,2856]},{"pos":[2954,2966],"content":"Requirements"},{"pos":[2969,2990],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> wifimte.w"},{"pos":[3028,3042],"content":"Related topics"},{"content":"WlanMTEAwake","pos":[3046,3058]},{"content":"Wi-Fi manufacturing API","pos":[3079,3102]}],"content":"---\nauthor: kpacquer\nDescription: WlanMTESleep\nms.assetid: 36b6f1e4-15a3-4e2c-8afb-a455d945aede\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: WlanMTESleep\n---\n\n# WlanMTESleep\n\n\nRequests that the driver to go to sleep either for a specified time interval, or indefinitely until an awake request is sent.\n\n## <span id=\"Syntax\"></span><span id=\"syntax\"></span><span id=\"SYNTAX\"></span>Syntax\n\n\n``` syntax\nDWORD WlanMTESleep(\n    __in                    HANDLE  hAdapter,\n    __in                    ULONG   uSleepTime,\n    __in                    PVOID   pvContext\n);\n```\n\n## <span id=\"Parameters\"></span><span id=\"parameters\"></span><span id=\"PARAMETERS\"></span>Parameters\n\n\n<span id=\"hAdapter\"></span><span id=\"hadapter\"></span><span id=\"HADAPTER\"></span>*hAdapter*  \n\\[in\\] The handle to the Wi-Fi adapter, obtained by calling [WlanMTEOpenHandle](wlanmteopenhandle.md).\n\n<span id=\"uSleepTime\"></span><span id=\"usleeptime\"></span><span id=\"USLEEPTIME\"></span>*uSleepTime*  \n\\[in\\] The time in milliseconds for the adapter to remain in sleep mode. If a value of −1 is specified, the adapter sleeps until a [WlanMTEAwake](wlanmteawake.md) request is sent.\n\n<span id=\"pvContext\"></span><span id=\"pvcontext\"></span><span id=\"PVCONTEXT\"></span>*pvContext*  \n\\[in\\] The context that uniquely identifies this request in the callback.\n\n## <span id=\"Return_Value\"></span><span id=\"return_value\"></span><span id=\"RETURN_VALUE\"></span>Return Value\n\n\nIf the function succeeds, the return value is ERROR\\_SUCCESS.\n\nIf the function fails, the return value is one of the system error codes. The following table lists one of the error codes that may be returned.\n\n<table>\n<colgroup>\n<col width=\"50%\" />\n<col width=\"50%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">Error code</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td align=\"left\"><p>ERROR_INVALID_PARAMETER</p></td>\n<td align=\"left\"><p>Returned if the <em>uSleepTime</em> parameter is NULL.</p></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"><p>ERROR_INVALID_HANDLE</p></td>\n<td align=\"left\"><p>Returned if the <em>hAdapter</em> handle is invalid.</p></td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"><p>ERROR_OUTOFMEMORY</p></td>\n<td align=\"left\"><p>Returned when sufficient memory to perform the operation cannot be allocated.</p></td>\n</tr>\n</tbody>\n</table>\n\n \n\n## <span id=\"Remarks\"></span><span id=\"remarks\"></span><span id=\"REMARKS\"></span>Remarks\n\n\nDuring sleep mode, all radios are turned off and the Wi-Fi chip is powered off. When the adapter reawakens, the application’s callback handler, if one was registered with [WlanMTERegisterCallbackHandler](wlanmteregistercallbackhandler.md), is called with the **dot11ManufacturingCallbackType** set to **dot11\\_manufacturing\\_callback\\_sleep\\_complete** and the result of the sleep operation is included.\n\n## <span id=\"Requirements\"></span><span id=\"requirements\"></span><span id=\"REQUIREMENTS\"></span>Requirements\n\n\n**Header:** wifimte.w\n\n## <span id=\"related_topics\"></span>Related topics\n\n\n[WlanMTEAwake](wlanmteawake.md)\n\n[Wi-Fi manufacturing API](wi-fi-manufacturing-api.md)\n\n \n\n \n\n\n\n\n\n\n"}