<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\manufacture\desktop\windows-deployment-sample-scripts-sxs.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">153c31051707a5780036bcfd42f3f31013666ba9</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>The following scripts are used in the lab.</source>
          <target>The following scripts are used in the lab.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>It may be helpful to create these all at once, or to download the samples from the web.</source>
          <target>It may be helpful to create these all at once, or to download the samples from the web.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Sample scripts</source>
          <target>Sample scripts</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Sample scripts</source>
          <target>Sample scripts</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>The following scripts are used in the lab.</source>
          <target>The following scripts are used in the lab.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=800657)</data>
        </originalData>
        <segment state="initial">
          <source>It may be helpful to create these all at once, or to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">download the samples</pc> from the web.</source>
          <target>It may be helpful to create these all at once, or to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">download the samples</pc> from the web.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Image deployment scripts</source>
          <target>Image deployment scripts</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>The following scripts set up Windows devices by using an image file, and configure push-button reset features.</source>
          <target>The following scripts set up Windows devices by using an image file, and configure push-button reset features.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>CreatePartitions-(firmware).txt</source>
          <target>CreatePartitions-(firmware).txt</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Use these scripts together with DiskPart to format and set up the hard disk partitions for Windows, including recovery tools.</source>
          <target>Use these scripts together with DiskPart to format and set up the hard disk partitions for Windows, including recovery tools.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Adjust the partition sizes to fill the drive as necessary.</source>
          <target>Adjust the partition sizes to fill the drive as necessary.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreatePartitions-UEFI.txt</pc>:</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreatePartitions-UEFI.txt</pc>:</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Creates the System, MSR, Windows, and recovery tools partitions for UEFI-based PCs.</source>
          <target>Creates the System, MSR, Windows, and recovery tools partitions for UEFI-based PCs.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>This script temporarily assigns these drive letters: System=S, Windows=W, and Recovery=R.</source>
          <target>This script temporarily assigns these drive letters: System=S, Windows=W, and Recovery=R.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>The MSR partition doesn't get a letter.</source>
          <target>The MSR partition doesn't get a letter.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>The letter W is used to avoid potential drive letter conflicts.</source>
          <target>The letter W is used to avoid potential drive letter conflicts.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>After the device reboots, the Windows partition is assigned the letter C, and the other partitions don’t receive drive letters.</source>
          <target>After the device reboots, the Windows partition is assigned the letter C, and the other partitions don’t receive drive letters.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>The following diagram shows the resulting partition configuration:</source>
          <target>The following diagram shows the resulting partition configuration:</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>diagram of default partition layout: system, msr, windows, and recovery</source>
          <target>diagram of default partition layout: system, msr, windows, and recovery</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreatePartitions-BIOS.txt</pc>:</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CreatePartitions-BIOS.txt</pc>:</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Creates the System, Windows, and recovery tools partitions for BIOS-based PCs.</source>
          <target>Creates the System, Windows, and recovery tools partitions for BIOS-based PCs.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>This script temporarily assigns these drive letters: System=S, Windows=W, and Recovery=R.</source>
          <target>This script temporarily assigns these drive letters: System=S, Windows=W, and Recovery=R.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>The letter W is used to avoid potential drive letter conflicts.</source>
          <target>The letter W is used to avoid potential drive letter conflicts.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>After the device reboots, the Windows partition is assigned the letter C, and the other partitions don’t receive drive letters.</source>
          <target>After the device reboots, the Windows partition is assigned the letter C, and the other partitions don’t receive drive letters.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>The following diagram shows the resulting partition configuration:</source>
          <target>The following diagram shows the resulting partition configuration:</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>diagram of default partition layout: system, windows, and recovery</source>
          <target>diagram of default partition layout: system, windows, and recovery</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Hide the recovery partitions</source>
          <target>Hide the recovery partitions</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Use these scripts with DiskPart to hide the recovery partitions after they have been configured.</source>
          <target>Use these scripts with DiskPart to hide the recovery partitions after they have been configured.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HideRecoveryPartitions-UEFI.txt</pc>:</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HideRecoveryPartitions-UEFI.txt</pc>:</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>HideRecoveryPartitions-BIOS.txt:</source>
          <target>HideRecoveryPartitions-BIOS.txt:</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>ApplyImage.bat</source>
          <target>ApplyImage.bat</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Use this script to launch the other scripts that deploy Windows to a new device.</source>
          <target>Use this script to launch the other scripts that deploy Windows to a new device.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>ApplyRecovery.bat</source>
          <target>ApplyRecovery.bat</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Use this script to prepare the Windows recovery partition.</source>
          <target>Use this script to prepare the Windows recovery partition.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Walkthrough-Deploy.bat</source>
          <target>Walkthrough-Deploy.bat</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Use this script to launch the other scripts, deploying Windows to a new device.</source>
          <target>Use this script to launch the other scripts, deploying Windows to a new device.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Start layout (LayoutModification.xml)</source>
          <target>Start layout (LayoutModification.xml)</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>The Start tile layout in Windows 10 provides OEMs the ability to append tiles to the default Start layout to include Web links, secondary tiles, Windows apps, and Classic Windows applications.</source>
          <target>The Start tile layout in Windows 10 provides OEMs the ability to append tiles to the default Start layout to include Web links, secondary tiles, Windows apps, and Classic Windows applications.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>OEMs can use this layout to make it applicable to multiple regions or markets without duplicating a lot of the work.</source>
          <target>OEMs can use this layout to make it applicable to multiple regions or markets without duplicating a lot of the work.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>In addition, OEMs can add up to three default apps to the frequently used apps section in the system area, which delivers sytem-driven lists o the user including important or frequently accessed system locations and recently installed apps.</source>
          <target>In addition, OEMs can add up to three default apps to the frequently used apps section in the system area, which delivers sytem-driven lists o the user including important or frequently accessed system locations and recently installed apps.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>To take advantage of all these new features and have the most robust and complete Start customization experience for Windows 10, consider creating a LayoutModification.xml file.</source>
          <target>To take advantage of all these new features and have the most robust and complete Start customization experience for Windows 10, consider creating a LayoutModification.xml file.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>This file specifies how the OEM tiles should be laid out in Start.</source>
          <target>This file specifies how the OEM tiles should be laid out in Start.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/mt170651)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about how to customize the new Start layout, see the topic <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Customize the Windows 10 Start screen</pc> in the Windows 10 Partner Documentation.</source>
          <target>For more information about how to customize the new Start layout, see the topic <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Customize the Windows 10 Start screen</pc> in the Windows 10 Partner Documentation.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Sample <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LayoutModification.xml</pc>:</source>
          <target>Sample <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LayoutModification.xml</pc>:</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Start layout walkthrough</source>
          <target>Start layout walkthrough</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you don’t already have one, create a file called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LayoutModification.xml</pc>.</source>
          <target>If you don’t already have one, create a file called <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LayoutModification.xml</pc>.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If you need to specify whether the append groups must only be applied to specific regions, use the optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Region</pc> attribute in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequiredStartGroups</pc> element.</source>
          <target>If you need to specify whether the append groups must only be applied to specific regions, use the optional <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Region</pc> attribute in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">RequiredStartGroups</pc> element.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>The Region value must be equal to two-letter country/region codes.</source>
          <target>The Region value must be equal to two-letter country/region codes.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Use a pipe “|” delimiter if you need to specify multiple countries/regions.</source>
          <target>Use a pipe “|” delimiter if you need to specify multiple countries/regions.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Specify the tiles you want to add within an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppendGroup</pc>.</source>
          <target>Specify the tiles you want to add within an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppendGroup</pc>.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>OEMs can add a maximum of two <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppendGroup</pc>.</source>
          <target>OEMs can add a maximum of two <pc dataRefEnd="id2" dataRefStart="id1" id="p1">AppendGroup</pc>.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following example shows two groups called “Fabrikam Group 1” and “Fabrikam Group 2”, which contain tiles that will be applied if the device country/region matches what’s specified in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Region</pc> (in this case, the regions are Germany, Spain, France, United Kingdom, Italy, and United States).</source>
          <target>The following example shows two groups called “Fabrikam Group 1” and “Fabrikam Group 2”, which contain tiles that will be applied if the device country/region matches what’s specified in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Region</pc> (in this case, the regions are Germany, Spain, France, United Kingdom, Italy, and United States).</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Each group contains three tiles and the various elements you need to use depending on the tile that you want to pin to Start.</source>
          <target>Each group contains three tiles and the various elements you need to use depending on the tile that you want to pin to Start.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>The following example shows one group called “Fabrikam Group 1”, which will be applied if the device country/region doesn’t match any of the ones specified in the previous RequiredStartGroups.</source>
          <target>The following example shows one group called “Fabrikam Group 1”, which will be applied if the device country/region doesn’t match any of the ones specified in the previous RequiredStartGroups.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Keep the following in mind when creating your LayoutModification.xml file:</source>
          <target>Keep the following in mind when creating your LayoutModification.xml file:</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you are pinning a Classic Windows applications using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">start:DesktopApplicationTile</pc> tag and you don’t know the application’s application user model ID, you need to create a .lnk file in a legacy Start Menu directory before first boot.</source>
          <target>If you are pinning a Classic Windows applications using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">start:DesktopApplicationTile</pc> tag and you don’t know the application’s application user model ID, you need to create a .lnk file in a legacy Start Menu directory before first boot.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>If you use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">start:DesktopApplicationTile</pc> tag to pin a legacy .url shortcut to Start, you must create a .url file and add this file to a legacy Start Menu directory before first boot.</source>
          <target>If you use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">start:DesktopApplicationTile</pc> tag to pin a legacy .url shortcut to Start, you must create a .url file and add this file to a legacy Start Menu directory before first boot.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>For the above scenarios, you can use the following directories to put the .url or .lnk files:</source>
          <target>For the above scenarios, you can use the following directories to put the .url or .lnk files:</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>%APPDATA%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Windows<ph dataRef="id3" id="ph3" />Start Menu<ph dataRef="id4" id="ph4" />Programs</source>
          <target>%APPDATA%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Windows<ph dataRef="id3" id="ph3" />Start Menu<ph dataRef="id4" id="ph4" />Programs</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>%ALLUSERSPROFILE%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Windows<ph dataRef="id3" id="ph3" />Start Menu<ph dataRef="id4" id="ph4" />Programs</source>
          <target>%ALLUSERSPROFILE%<ph dataRef="id1" id="ph1" />Microsoft<ph dataRef="id2" id="ph2" />Windows<ph dataRef="id3" id="ph3" />Start Menu<ph dataRef="id4" id="ph4" />Programs</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Optionally, you can add up to 3 apps to the frequently used section of the system area.</source>
          <target>Optionally, you can add up to 3 apps to the frequently used section of the system area.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>The following example shows how to add the calculator app to the frequently used system area.</source>
          <target>The following example shows how to add the calculator app to the frequently used system area.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Save the LayoutModification.xml file.</source>
          <target>Save the LayoutModification.xml file.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Once you’ve created the LayoutModification.xml file, you’ll need to place this file in the correct system location using either Windows ICD or classic-style deployment.</source>
          <target>Once you’ve created the LayoutModification.xml file, you’ll need to place this file in the correct system location using either Windows ICD or classic-style deployment.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>For more information on how to do this, see:</source>
          <target>For more information on how to do this, see:</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Windows ICD - Lab 1, Step 7: Customize the Start layout</source>
          <target>Windows ICD - Lab 1, Step 7: Customize the Start layout</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Classic-style deployment - Lab 2a, Step 5: Add the files you need to modify the Start layout</source>
          <target>Classic-style deployment - Lab 2a, Step 5: Add the files you need to modify the Start layout</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>If you don’t create a LayoutModification.xml file and you continue to use the Start Unattend settings, the OS will use the Unattend answer file and take the first 12 SquareTiles or DesktoporSquareTiles settings specified in the Unattend file.</source>
          <target>If you don’t create a LayoutModification.xml file and you continue to use the Start Unattend settings, the OS will use the Unattend answer file and take the first 12 SquareTiles or DesktoporSquareTiles settings specified in the Unattend file.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>The system then places these tiles automatically within the newly-created groups at the end of Start—the first six tiles are placed in the first OEM group and the second set of six tiles are placed in the second OEM group.</source>
          <target>The system then places these tiles automatically within the newly-created groups at the end of Start—the first six tiles are placed in the first OEM group and the second set of six tiles are placed in the second OEM group.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>If OEMName is specified in the Unattend file, the value for this element is used to name the OEM groups that will be created.</source>
          <target>If OEMName is specified in the Unattend file, the value for this element is used to name the OEM groups that will be created.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Microphone settings (SpeechSetting.cmd)</source>
          <target>Microphone settings (SpeechSetting.cmd)</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Use this script to tune your device’s microphone to help maximize speech accuracy for features like Cortana.</source>
          <target>Use this script to tune your device’s microphone to help maximize speech accuracy for features like Cortana.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/dn957009)</data>
        </originalData>
        <segment state="initial">
          <source>To learn how to test for the appropriate values for your device, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana Device Test Setup</pc> in the Hardware WEG.</source>
          <target>To learn how to test for the appropriate values for your device, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Cortana Device Test Setup</pc> in the Hardware WEG.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SpeechSetting.cmd</pc>:</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SpeechSetting.cmd</pc>:</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Remove Windows apps</source>
          <target>Remove Windows apps</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>When you add language packs to an image, you’ll need to remove and reinstall each of your Windows apps to make sure they include the language assets.</source>
          <target>When you add language packs to an image, you’ll need to remove and reinstall each of your Windows apps to make sure they include the language assets.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Here's two scripts, one which can be used to remove the apps from an offline image, and another that can be used in audit mode to remove apps from a running image:</source>
          <target>Here's two scripts, one which can be used to remove the apps from an offline image, and another that can be used in audit mode to remove apps from a running image:</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
        </originalData>
        <segment state="initial">
          <source>Remove<ph dataRef="id1" id="ph1" />apps<ph dataRef="id2" id="ph2" />in<ph dataRef="id3" id="ph3" />offline<ph dataRef="id4" id="ph4" />image.cmd:</source>
          <target>Remove<ph dataRef="id1" id="ph1" />apps<ph dataRef="id2" id="ph2" />in<ph dataRef="id3" id="ph3" />offline<ph dataRef="id4" id="ph4" />image.cmd:</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">\#</data>
          <data id="id2">\#</data>
          <data id="id3">\#</data>
        </originalData>
        <segment state="initial">
          <source>This script assumes the file name is install.wim, that the script is being run from the same folder as install.wim, that the index being modified is <ph dataRef="id1" id="ph1" />1, and that there are no other Windows images in other index locations (<ph dataRef="id2" id="ph2" />2, <ph dataRef="id3" id="ph3" />3) that need to be preserved.</source>
          <target>This script assumes the file name is install.wim, that the script is being run from the same folder as install.wim, that the index being modified is <ph dataRef="id1" id="ph1" />1, and that there are no other Windows images in other index locations (<ph dataRef="id2" id="ph2" />2, <ph dataRef="id3" id="ph3" />3) that need to be preserved.</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
        </originalData>
        <segment state="initial">
          <source>Remove<ph dataRef="id1" id="ph1" />apps<ph dataRef="id2" id="ph2" />in<ph dataRef="id3" id="ph3" />audit<ph dataRef="id4" id="ph4" />mode.cmd</source>
          <target>Remove<ph dataRef="id1" id="ph1" />apps<ph dataRef="id2" id="ph2" />in<ph dataRef="id3" id="ph3" />audit<ph dataRef="id4" id="ph4" />mode.cmd</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>This script assumes you’re running in audit mode on the reference PC.</source>
          <target>This script assumes you’re running in audit mode on the reference PC.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>BootToAudit</source>
          <target>BootToAudit</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
        </originalData>
        <segment state="initial">
          <source>Add an answer file to the Windows image in C:<ph dataRef="id1" id="ph1" />mount<ph dataRef="id2" id="ph2" />windows<ph dataRef="id3" id="ph3" />Windows<ph dataRef="id4" id="ph4" />Panther<ph dataRef="id5" id="ph5" />unattend.xml to instruct it to boot into audit mode.</source>
          <target>Add an answer file to the Windows image in C:<ph dataRef="id1" id="ph1" />mount<ph dataRef="id2" id="ph2" />windows<ph dataRef="id3" id="ph3" />Windows<ph dataRef="id4" id="ph4" />Panther<ph dataRef="id5" id="ph5" />unattend.xml to instruct it to boot into audit mode.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>You can create this answer file in Windows System Image Manager.</source>
          <target>You can create this answer file in Windows System Image Manager.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>BootToAudit-x64:</source>
          <target>BootToAudit-x64:</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>BootToAudit-x86:</source>
          <target>BootToAudit-x86:</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Keeping Windows settings through a recovery</source>
          <target>Keeping Windows settings through a recovery</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Windows doesn't automatically save settings created through unattend.xml setup files, nor Windows Start Menu customizations created with LayoutModification.xml during a full-system reset, nor first-login info from oobe.xml.</source>
          <target>Windows doesn't automatically save settings created through unattend.xml setup files, nor Windows Start Menu customizations created with LayoutModification.xml during a full-system reset, nor first-login info from oobe.xml.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>To make sure your customizations are saved, that includes steps to put the unattend.xml, LayoutModification.xml, and oobe.xml files back into place.</source>
          <target>To make sure your customizations are saved, that includes steps to put the unattend.xml, LayoutModification.xml, and oobe.xml files back into place.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Here's some sample scripts that show how to retain these settings and put them back into the right spots.</source>
          <target>Here's some sample scripts that show how to retain these settings and put them back into the right spots.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>Save copies of unattend.xml, LayoutModification.xml, oobe.xml, plus these two text files, in C:<ph dataRef="id1" id="ph1" />Recovery<ph dataRef="id2" id="ph2" />OEM<ph dataRef="id3" id="ph3" />:</source>
          <target>Save copies of unattend.xml, LayoutModification.xml, oobe.xml, plus these two text files, in C:<ph dataRef="id1" id="ph1" />Recovery<ph dataRef="id2" id="ph2" />OEM<ph dataRef="id3" id="ph3" />:</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>ResetConfig.xml</source>
          <target>ResetConfig.xml</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>EnableCustomizationsAfterRecovery.cmd</source>
          <target>EnableCustomizationsAfterRecovery.cmd</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>For multilingual deployments, OOBE.xml uses a more complicated folder structure.</source>
          <target>For multilingual deployments, OOBE.xml uses a more complicated folder structure.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>It's OK to just copy the entire folder structure into C:<ph dataRef="id1" id="ph1" />Recovery<ph dataRef="id2" id="ph2" />OEM, and then modify the script to copy the entire folder:</source>
          <target>It's OK to just copy the entire folder structure into C:<ph dataRef="id1" id="ph1" />Recovery<ph dataRef="id2" id="ph2" />OEM, and then modify the script to copy the entire folder:</target>
        </segment>
      </unit>
      <unit id="196">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=618946)</data>
        </originalData>
        <segment state="initial">
          <source>To learn more about using extensibility points for push-button reset, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add a script to push-button reset features</pc>.</source>
          <target>To learn more about using extensibility points for push-button reset, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add a script to push-button reset features</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>