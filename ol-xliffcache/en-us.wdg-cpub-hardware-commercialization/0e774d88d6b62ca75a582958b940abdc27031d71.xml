{"nodes":[{"content":"Capture event trace logs on Windows 10 Mobile","pos":[11,56]},{"content":"Capture event trace logs on Windows 10 Mobile","pos":[70,115]},{"content":"Capture event trace logs on Windows 10 Mobile","pos":[251,296]},{"content":"Tracelog and Xperf are used to capture event trace logs on Windows 10 Mobile.","pos":[299,376]},{"content":"Important","pos":[380,389]},{"content":"To capture trace logs, the device image must be built with the appropriate type and packages.","pos":[394,487]},{"content":"This is done by modifying the OEMInput file to set the <bpt id=\"p1\">**</bpt>ReleaseType<ept id=\"p1\">**</ept> element to <bpt id=\"p2\">**</bpt>Test<ept id=\"p2\">**</ept>, and adding <bpt id=\"p3\">**</bpt>TESTINFRASTRUCTURE<ept id=\"p3\">**</ept> to the <bpt id=\"p4\">**</bpt>Features<ept id=\"p4\">**</ept> element.","pos":[488,642]},{"content":"Step 1: Install the Windows Performance Toolkit","pos":[650,697]},{"content":"The Windows Performance Toolkit (WPT) is required to process event trace logs with Xperf.","pos":[700,789]},{"content":"The WPT is part of the <bpt id=\"p1\">[</bpt>Windows Assessment and Deployment Kit (Windows ADK)<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=526803)</ept>.","pos":[790,916]},{"content":"Step 2: Install and configure TShell","pos":[921,957]},{"content":"TShell is required to run Tracelog.","pos":[960,995]},{"content":"Step 3: Verify device is connected","pos":[1000,1034]},{"content":"Verify the device is connected to TShell by running the command dird in the TShell command window.","pos":[1037,1135]},{"content":"Ensure a directory listing from the device is displayed.","pos":[1136,1192]},{"content":"If an error message is seen, ensure that TShell is configured correctly, and a device command prompt is shown above the regular command prompt in the TShell window similar to the following:","pos":[1193,1382]},{"content":"Step 4: Run Tracelog to start event trace logging","pos":[1422,1471]},{"content":"Using the TShell command window, run Tracelog with desired parameters to start event trace logging.","pos":[1474,1573]},{"content":"Two basic examples are below.","pos":[1574,1603]},{"content":"Important","pos":[1607,1616]},{"content":"On Windows 10 Mobile, Tracelog must place its logs within the C:<ph id=\"ph1\">\\\\</ph>data directory due to partition size restrictions.","pos":[1621,1737]},{"content":"Be sure to use the -f flag to configure Tracelog to use C:<ph id=\"ph1\">\\\\</ph>data.","pos":[1738,1803]},{"content":"For detailed Tracelog command line syntax, see <bpt id=\"p1\">[</bpt>Tracelog Command Syntax<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/hardware/ff553012.aspx)</ept>.","pos":[1808,1947]},{"content":"For additional examples, see <bpt id=\"p1\">[</bpt>Tracelog Examples<ept id=\"p1\">](http://msdn.microsoft.com/library/windows/hardware/ff553026.aspx)</ept>.","pos":[1948,2063]},{"content":"Example 1","pos":[2069,2078]},{"content":"The following command starts a session that enables tracing of process and thread create/deletes, kernel and user mode image load/unload events, DPC events, context switches, and CPU sample profiles.","pos":[2080,2279]},{"content":"Example 2","pos":[3502,3511]},{"content":"The following commands start a new session named \"MyPowerTrace\" and enable the Microsoft-Windows-Kernel-Power provider.","pos":[3513,3632]},{"content":"Step 5: Run scenarios or tests","pos":[5734,5764]},{"content":"Event trace logging is now enabled.","pos":[5767,5802]},{"content":"Run the scenarios or tests you want to analyze.","pos":[5803,5850]},{"content":"Step 6: Run Tracelog to flush the buffers and stop event trace logging","pos":[5855,5925]},{"content":"After the scenarios or tests are complete, use Tracelog to flush the buffers and stop event trace logging.","pos":[5928,6034]},{"content":"Example 1","pos":[6040,6049]},{"content":"The following commands flush and stop the \"MyTrace\" session.","pos":[6051,6111]},{"content":"Example 2","pos":[6194,6203]},{"content":"The following commands flush and stop the \"MyPowerTrace\" session.","pos":[6205,6270]},{"content":"Step 7: Run Xperf on the device","pos":[6362,6393]},{"content":"Run Xperf on the device to process the log.","pos":[6396,6439]},{"content":"Example 1","pos":[6445,6454]},{"content":"Example 2","pos":[6622,6631]},{"content":"Step 8: Copy trace log from device","pos":[6813,6847]},{"pos":[6850,6950],"content":"Copy the merged trace log from the phone by using the <bpt id=\"p1\">**</bpt>getd<ept id=\"p1\">**</ept> command in the TShell command window."},{"content":"Example 1","pos":[6956,6965]},{"content":"Example 2","pos":[7130,7139]},{"content":"You can also rename the file at copy time.","pos":[7310,7352]},{"content":"Step 9: Run Xperf on the desktop PC","pos":[7566,7601]},{"content":"Run Xperf on the desktop PC for additional processing.","pos":[7604,7658]},{"content":"On 32-bit operating systems, Xperf is installed in C:<ph id=\"ph1\">\\\\</ph>Program Files<ph id=\"ph2\">\\\\</ph>Windows Kits<ph id=\"ph3\">\\\\</ph>10<ph id=\"ph4\">\\\\</ph>Windows Performance Toolkit.","pos":[7659,7775]},{"content":"On 64-bit operating systems, it is installed in C:<ph id=\"ph1\">\\\\</ph>Program Files (x86)<ph id=\"ph2\">\\\\</ph>Windows Kits<ph id=\"ph3\">\\\\</ph>10<ph id=\"ph4\">\\\\</ph>Windows Performance Toolkit.","pos":[7776,7895]},{"content":"Example 1","pos":[7901,7910]},{"content":"Example 2","pos":[8100,8109]}],"content":"---\ntitle: Capture event trace logs on Windows 10 Mobile\ndescription: Capture event trace logs on Windows 10 Mobile\nMSHAttr:\n- 'PreferredSiteName:MSDN'\n- 'PreferredLib:/library/windows/hardware'\nms.assetid: 5a4a7408-3dd8-4322-91ce-73ab75135470\n---\n\n# Capture event trace logs on Windows 10 Mobile\n\n\nTracelog and Xperf are used to capture event trace logs on Windows 10 Mobile.\n\n**Important**  \nTo capture trace logs, the device image must be built with the appropriate type and packages. This is done by modifying the OEMInput file to set the **ReleaseType** element to **Test**, and adding **TESTINFRASTRUCTURE** to the **Features** element.\n\n \n\n## Step 1: Install the Windows Performance Toolkit\n\n\nThe Windows Performance Toolkit (WPT) is required to process event trace logs with Xperf. The WPT is part of the [Windows Assessment and Deployment Kit (Windows ADK)](http://go.microsoft.com/fwlink/p/?LinkId=526803).\n\n## Step 2: Install and configure TShell\n\n\nTShell is required to run Tracelog.\n\n## Step 3: Verify device is connected\n\n\nVerify the device is connected to TShell by running the command dird in the TShell command window. Ensure a directory listing from the device is displayed. If an error message is seen, ensure that TShell is configured correctly, and a device command prompt is shown above the regular command prompt in the TShell window similar to the following:\n\n``` syntax\nDEVICE C:\\\nPS C:\\>\n```\n\n## Step 4: Run Tracelog to start event trace logging\n\n\nUsing the TShell command window, run Tracelog with desired parameters to start event trace logging. Two basic examples are below.\n\n**Important**  \nOn Windows 10 Mobile, Tracelog must place its logs within the C:\\\\data directory due to partition size restrictions. Be sure to use the -f flag to configure Tracelog to use C:\\\\data.\n\n \n\nFor detailed Tracelog command line syntax, see [Tracelog Command Syntax](http://msdn.microsoft.com/library/windows/hardware/ff553012.aspx). For additional examples, see [Tracelog Examples](http://msdn.microsoft.com/library/windows/hardware/ff553026.aspx).\n\n### Example 1\n\nThe following command starts a session that enables tracing of process and thread create/deletes, kernel and user mode image load/unload events, DPC events, context switches, and CPU sample profiles.\n\n``` syntax\nDEVICE C:\\\nPS C:\\> cdd data\nDEVICE C:\\data\nPS C:\\> cmdd 'tracelog -start MyTrace -f c:\\data\\MyLog.etl -eflag PROC_THREAD+LOADER+DPC+CSWITCH+PROFILE'\n\nTurning On group: PROC_THREAD\nTurning On group: LOADER\nTurning On group: DPC\nTurning On group: CSWITCH\nTurning On group: PROFILE\nAdding GroupMask ExtItem\nLogger Started...\nOperation Status:       0L      The operation completed successfully.\n\nLogger Name:            MyTrace\nLogger Id:              0x14\nLogger Thread Id:       0000054C\nGuid:                   77eaa944-426b-11e1-86a3-fb317490c92a\nSession Security:       D:(A;;0x800;;;WD)\nBuffer Size:            8 Kb\nMaximum Buffers:        26\nMinimum Buffers:        4\nNumber of Buffers:      26\nFree Buffers:           0\nBuffers Written:        28\nEvents Lost:            177\nLog Buffers Lost:       0\nReal Time Buffers Lost: 0\nAgeLimit:               0\nReal Time Consumers:    0\nClockType:              PerfCounter\nLog Mode:               Sequential\nHybrid Shutdown:        Persist\nMaximum File Size:      not set\nBuffer Flush Timer:     not set\nEnabled tracing:        Process Thread ImageLoad CxtSwap Dpc Profile\nLog Filename:           c:\\data\\MyLog.etl\n\nExit Code : 0\n\nDEVICE C:\\data\nPS C:\\>\n```\n\n### Example 2\n\nThe following commands start a new session named \"MyPowerTrace\" and enable the Microsoft-Windows-Kernel-Power provider.\n\n``` syntax\nDEVICE C:\\\nPS C:\\> cdd data\nDEVICE C:\\data\nPS C:\\> cmdd 'tracelog -start MyPowerTrace -b 1024 -f C:\\data\\MyPowerLog.etl -eflags Process'\nTurning On group: PROCESS\nAdding GroupMask ExtItem\nLogger Started...\nOperation Status:       0L      The operation completed successfully.\n\nLogger Name:            MyPowerTrace\nLogger Id:              0x1d\nLogger Thread Id:       00000C38\nGuid:                   52dd9cee-926c-11e1-bc7e-0011beb0dbf4\nSession Security:       D:(A;;0x800;;;WD)\nBuffer Size:            1024 Kb\nMaximum Buffers:        26\nMinimum Buffers:        4\nNumber of Buffers:      4\nFree Buffers:           3\nBuffers Written:        1\nEvents Lost:            0\nLog Buffers Lost:       0\nReal Time Buffers Lost: 0\nAgeLimit:               0\nReal Time Consumers:    0\nClockType:              PerfCounter\nLog Mode:               Sequential\nHybrid Shutdown:        Persist\nMaximum File Size:      not set\nBuffer Flush Timer:     not set\nEnabled tracing:        Process\nLog Filename:           C:\\data\\MyPowerLog.etl\n\nExit Code : 0\n\nDEVICE C:\\data\nPS C:\\> cmdd 'tracelog -enable MyPowerTrace -guid #331C3B3A-2005-44C2-AC5E-77220C37D6B4'\nEnabling 331c3b3a-2005-44c2-ac5e-77220c37d6b4 (Flags = 0x00000000 Level = 0  ) to logger 29\nOperation Status:       0L      The operation completed successfully.\n\nLogger Name:            MyPowerTrace\nLogger Id:              0x1d\nLogger Thread Id:       00000C38\nGuid:                   52dd9cee-926c-11e1-bc7e-0011beb0dbf4\nSession Security:       D:(A;;0x800;;;WD)\nBuffer Size:            1024 Kb\nMaximum Buffers:        26\nMinimum Buffers:        4\nNumber of Buffers:      4\nFree Buffers:           2\nBuffers Written:        1\nEvents Lost:            0\nLog Buffers Lost:       0\nReal Time Buffers Lost: 0\nAgeLimit:               0\nReal Time Consumers:    0\nClockType:              PerfCounter\nLog Mode:               Sequential\nHybrid Shutdown:        Persist\nMaximum File Size:      not set\nBuffer Flush Timer:     not set\nEnabled tracing:        Process\nLog Filename:           C:\\data\\MyPowerLog.etl\n\nExit Code : 0\n\nDEVICE C:\\data\nPS C:\\>\n```\n\n## Step 5: Run scenarios or tests\n\n\nEvent trace logging is now enabled. Run the scenarios or tests you want to analyze.\n\n## Step 6: Run Tracelog to flush the buffers and stop event trace logging\n\n\nAfter the scenarios or tests are complete, use Tracelog to flush the buffers and stop event trace logging.\n\n### Example 1\n\nThe following commands flush and stop the \"MyTrace\" session.\n\n``` syntax\ncmdd 'tracelog -flush MyTrace'\ncmdd 'tracelog -stop MyTrace'\n```\n\n### Example 2\n\nThe following commands flush and stop the \"MyPowerTrace\" session.\n\n``` syntax\ncmdd 'tracelog -flush MyPowerTrace'\ncmdd 'tracelog -stop MyPowerTrace'\n```\n\n## Step 7: Run Xperf on the device\n\n\nRun Xperf on the device to process the log.\n\n### Example 1\n\n``` syntax\nDEVICE C:\\data\nPS C:\\> cmdd 'xperf -merge MyLog.etl c:\\data\\MyLogOut.etl'\nMerged Etl: c:\\data\\MyLogOut.etl\n\nExit Code : 0\n\nDEVICE C:\\data\nPS C:\\>\n```\n\n### Example 2\n\n``` syntax\nDEVICE C:\\data\nPS C:\\> cmdd 'xperf -merge MyPowerLog.etl c:\\data\\MyPowerLogOut.etl'\nMerged Etl: c:\\data\\MyPowerLogOut.etl\n\nExit Code : 0\n\nDEVICE C:\\data\nPS C:\\>\n```\n\n## Step 8: Copy trace log from device\n\n\nCopy the merged trace log from the phone by using the **getd** command in the TShell command window.\n\n### Example 1\n\n``` syntax\nDEVICE C:\\data\nPS C:\\> getd MyLogOut.etl C:\\Users\\username\\Documents\nC:\\data\\MyLogOut.etl\n1 file(s) copied from device.\nDEVICE C:\\data\nPS C:\\>\n```\n\n### Example 2\n\n``` syntax\nDEVICE C:\\data\nPS C:\\> getd MyPowerLogOut.etl C:\\Users\\username\\Documents\nC:\\data\\MyPowerLogOut.etl\n1 file(s) copied from device.\nDEVICE C:\\data\nPS C:\\>\n```\n\nYou can also rename the file at copy time.\n\n``` syntax\nDEVICE C:\\\nPS C:\\> cdd data\nDEVICE C:\\\nPS C:\\> getd C:\\data\\MyPowerLogOut.etl C:\\Users\\username\\Documents\\NewName.etl\nC:\\data\\MyPowerLogOut.etl\n1 file(s) copied from device.\nDEVICE C:\\\nPS C:\\>\n```\n\n## Step 9: Run Xperf on the desktop PC\n\n\nRun Xperf on the desktop PC for additional processing. On 32-bit operating systems, Xperf is installed in C:\\\\Program Files\\\\Windows Kits\\\\10\\\\Windows Performance Toolkit. On 64-bit operating systems, it is installed in C:\\\\Program Files (x86)\\\\Windows Kits\\\\10\\\\Windows Performance Toolkit.\n\n### Example 1\n\n``` syntax\nC:\\>cd Users\\username\\Documents\nC:\\Users\\username\\Documents>xperf -i d:\\MyLogOut.etl -o MyLogCSV.csv -tle\n[1/2]    100.0%\n[2/2]    100.0%\n\nC:\\Users\\username\\Documents>\n```\n\n### Example 2\n\n``` syntax\nC:\\>cd Users\\username\\Documents\nC:\\Users\\username\\Documents>xperf -i MyPowerLogOut.etl -o MyPowerLogCSV.csv -tle \n[1/2]    100.0%\n[2/2]    100.0%\n\nC:\\Users\\username\\Documents>\n```\n\n \n\n \n\n\n\n\n\n\n"}