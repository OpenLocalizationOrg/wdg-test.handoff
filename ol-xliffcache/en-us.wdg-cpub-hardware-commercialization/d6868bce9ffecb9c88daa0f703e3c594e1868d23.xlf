<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\profile-wta.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">d6868bce9ffecb9c88daa0f703e3c594e1868d23</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>profile</source>
          <target>profile</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>profile</source>
          <target>profile</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>profile</source>
          <target>profile</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>This action produces a text file that summarizes metrics for profiles.</source>
          <target>This action produces a text file that summarizes metrics for profiles.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Options</source>
          <target>Options</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">\[</data>
          <data id="id6">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-util</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />n<ph dataRef="id6" id="ph2" /></pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-util</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />n<ph dataRef="id6" id="ph2" /></pc>
          </target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>Shows CPU utilization for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">n</pc> second intervals.</source>
          <target>Shows CPU utilization for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">n</pc> second intervals.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>The default is 1 second.</source>
          <target>The default is 1 second.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>-detail</source>
          <target>-detail</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Shows CPU samples bucketed by process and module if symbol decoding is not enabled, and by process and function name if symbol decoding is enabled.</source>
          <target>Shows CPU samples bucketed by process and module if symbol decoding is not enabled, and by process and function name if symbol decoding is enabled.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">\[</data>
          <data id="id6">\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-range</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 <ph dataRef="id5" id="ph1" />T2<ph dataRef="id6" id="ph2" /></pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-range</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 <ph dataRef="id5" id="ph1" />T2<ph dataRef="id6" id="ph2" /></pc>
          </target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Shows data between times <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>, both in microseconds.</source>
          <target>Shows data between times <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>, both in microseconds.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T2</pc> is not present, the end of the trace is used instead.</source>
          <target>If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T2</pc> is not present, the end of the trace is used instead.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>-freq</source>
          <target>-freq</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Shows constant sampling frequency zones in the trace.</source>
          <target>Shows constant sampling frequency zones in the trace.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">`-util`</data>
          <data id="id2">`-detail`</data>
          <data id="id3">`-freq`</data>
        </originalData>
        <segment state="initial">
          <source>If none of <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, or <ph dataRef="id3" id="ph3" /> is specified, the default is to show the CPU utilization report.</source>
          <target>If none of <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, or <ph dataRef="id3" id="ph3" /> is specified, the default is to show the CPU utilization report.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Xperf Actions</source>
          <target>Xperf Actions</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>