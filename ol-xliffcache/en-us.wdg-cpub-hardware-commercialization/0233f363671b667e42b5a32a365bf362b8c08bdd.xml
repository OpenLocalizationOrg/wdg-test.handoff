{"nodes":[{"content":"WlanMTESetData","pos":[34,48]},{"content":"WlanMTESetData","pos":[155,169]},{"content":"WlanMTESetData","pos":[177,191]},{"content":"Requests that the driver write data to a specific location defined by a key and offset value.","pos":[194,287]},{"pos":[367,373],"content":"Syntax"},{"pos":[735,745],"content":"Parameters"},{"content":"hAdapter","pos":[830,838]},{"content":"in<ph id=\"ph1\">\\]</ph> The handle to the Wi-Fi adapter, obtained by calling <bpt id=\"p1\">[</bpt>WlanMTEOpenHandle<ept id=\"p1\">](wlanmteopenhandle.md)</ept>.","pos":[844,944]},{"content":"uKey","pos":[1016,1020]},{"content":"in<ph id=\"ph1\">\\]</ph> The key for the write request.","pos":[1026,1061]},{"content":"uOffset","pos":[1142,1149]},{"content":"in<ph id=\"ph1\">\\]</ph> The offset for the write request.","pos":[1155,1193]},{"content":"uInBufLen","pos":[1280,1289]},{"content":"in<ph id=\"ph1\">\\]</ph> The length of the buffer containing the data to be written.","pos":[1295,1359]},{"content":"pucInBuffer","pos":[1452,1463]},{"content":"in<ph id=\"ph1\">\\]</ph> The buffer containing the data to be written.","pos":[1469,1519]},{"pos":[1617,1629],"content":"Return Value"},{"content":"If the function succeeds, the return value is ERROR<ph id=\"ph1\">\\_</ph>SUCCESS.","pos":[1632,1693]},{"content":"If the function fails, the return value is one of the system error codes.","pos":[1695,1768]},{"content":"The following table lists the error codes that may be returned.","pos":[1769,1832]},{"content":"Error code","pos":[1950,1960]},{"content":"Description","pos":[1983,1994]},{"content":"ERROR_INVALID_PARAMETER","pos":[2060,2083]},{"content":"Returned when the <ph id=\"ph1\">&lt;em&gt;</ph>uInBufLen<ph id=\"ph2\">&lt;/em&gt;</ph> parameter is present but the <ph id=\"ph3\">&lt;em&gt;</ph>pucInBuffer<ph id=\"ph4\">&lt;/em&gt;</ph> parameter is NULL.","pos":[2113,2218]},{"content":"ERROR_INVALID_HANDLE","pos":[2272,2292]},{"content":"Returned if the <ph id=\"ph1\">&lt;em&gt;</ph>hAdapter<ph id=\"ph2\">&lt;/em&gt;</ph> handle is invalid.","pos":[2322,2374]},{"content":"ERROR_OUTOFMEMORY","pos":[2427,2444]},{"content":"Returned when sufficient memory to perform the operation cannot be allocated.","pos":[2474,2551]},{"pos":[2685,2697],"content":"Requirements"},{"pos":[2700,2721],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> wifimte.w"},{"pos":[2759,2773],"content":"Related topics"},{"content":"Wi-Fi manufacturing API","pos":[2777,2800]}],"content":"---\nauthor: kpacquer\nDescription: WlanMTESetData\nms.assetid: cf0cf3b4-a4e0-4818-bc78-8b5547903f4b\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: WlanMTESetData\n---\n\n# WlanMTESetData\n\n\nRequests that the driver write data to a specific location defined by a key and offset value.\n\n## <span id=\"Syntax\"></span><span id=\"syntax\"></span><span id=\"SYNTAX\"></span>Syntax\n\n\n``` syntax\nDWORD WlanMTESetData(\n    __in                    HANDLE  hAdapter,\n    __in                    ULONG   uKey,\n    __in                    ULONG   uOffset,\n    __in                    ULONG   uInBufLen,\n    __in_bcount(uInBufLen)  PUCHAR  pucInBuffer\n);\n```\n\n## <span id=\"Parameters\"></span><span id=\"parameters\"></span><span id=\"PARAMETERS\"></span>Parameters\n\n\n<span id=\"hAdapter\"></span><span id=\"hadapter\"></span><span id=\"HADAPTER\"></span>*hAdapter*  \n\\[in\\] The handle to the Wi-Fi adapter, obtained by calling [WlanMTEOpenHandle](wlanmteopenhandle.md).\n\n<span id=\"uKey\"></span><span id=\"ukey\"></span><span id=\"UKEY\"></span>*uKey*  \n\\[in\\] The key for the write request.\n\n<span id=\"uOffset\"></span><span id=\"uoffset\"></span><span id=\"UOFFSET\"></span>*uOffset*  \n\\[in\\] The offset for the write request.\n\n<span id=\"uInBufLen\"></span><span id=\"uinbuflen\"></span><span id=\"UINBUFLEN\"></span>*uInBufLen*  \n\\[in\\] The length of the buffer containing the data to be written.\n\n<span id=\"pucInBuffer\"></span><span id=\"pucinbuffer\"></span><span id=\"PUCINBUFFER\"></span>*pucInBuffer*  \n\\[in\\] The buffer containing the data to be written.\n\n## <span id=\"Return_Value\"></span><span id=\"return_value\"></span><span id=\"RETURN_VALUE\"></span>Return Value\n\n\nIf the function succeeds, the return value is ERROR\\_SUCCESS.\n\nIf the function fails, the return value is one of the system error codes. The following table lists the error codes that may be returned.\n\n<table>\n<colgroup>\n<col width=\"50%\" />\n<col width=\"50%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">Error code</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td align=\"left\"><p>ERROR_INVALID_PARAMETER</p></td>\n<td align=\"left\"><p>Returned when the <em>uInBufLen</em> parameter is present but the <em>pucInBuffer</em> parameter is NULL.</p></td>\n</tr>\n<tr class=\"even\">\n<td align=\"left\"><p>ERROR_INVALID_HANDLE</p></td>\n<td align=\"left\"><p>Returned if the <em>hAdapter</em> handle is invalid.</p></td>\n</tr>\n<tr class=\"odd\">\n<td align=\"left\"><p>ERROR_OUTOFMEMORY</p></td>\n<td align=\"left\"><p>Returned when sufficient memory to perform the operation cannot be allocated.</p></td>\n</tr>\n</tbody>\n</table>\n\n \n\n## <span id=\"Requirements\"></span><span id=\"requirements\"></span><span id=\"REQUIREMENTS\"></span>Requirements\n\n\n**Header:** wifimte.w\n\n## <span id=\"related_topics\"></span>Related topics\n\n\n[Wi-Fi manufacturing API](wi-fi-manufacturing-api.md)\n\n \n\n \n\n\n\n\n\n\n"}