{"nodes":[{"content":"Access the touch interface in MMOS","pos":[34,68]},{"content":"Access the touch interface in MMOS","pos":[175,209]},{"content":"Access the touch interface in MMOS","pos":[217,251]},{"content":"The touch controller output can be captured and used in MMOS with proper touch driver support.","pos":[254,348]},{"content":"The touch interface sample illustrates how you can gather touch coordinates in MMOS to implement manufacturing tests.","pos":[349,466]},{"pos":[603,628],"content":"Touch sample requirements"},{"content":"The sample code requires that the Microsoft.Input.TchHID.spkg package to be included in the image (either the Main OS or MMOS).","pos":[631,758]},{"content":"The Microsoft.Input.TchHID.spkg package includes tchhid.sys, which implements the <bpt id=\"p1\">**</bpt>CreateFile<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>Readfile<ept id=\"p2\">**</ept> functions used by the sample code.","pos":[759,907]},{"pos":[1020,1037],"content":"Touch sample code"},{"content":"This sample user-mode application displays the touch coordinates received by the touch screen driver.","pos":[1040,1141]},{"content":"The sample app uses the <bpt id=\"p1\">**</bpt>CreateFile<ept id=\"p1\">**</ept> function to open an exclusive handle to the device to receive raw touch samples.","pos":[1143,1262]},{"content":"The device name \"TouchRaw0\" is exposed by tchhid.sys, the HID touch class driver provided by Microsoft and included in Microsoft.Input.TchHID.spkg.","pos":[1263,1410]},{"content":"After the handle is successfully opened, the application loops until a touch contact point is received near the top-left corner of the screen.","pos":[1486,1628]},{"content":"The application reads and displays the coordinates and the associated touch contact ID.","pos":[1629,1716]},{"content":"The application uses the TouchInfo and TouchContact data structures, which are defined in %WPDKCONTENTROOT%<ph id=\"ph1\">\\\\</ph>include<ph id=\"ph2\">\\\\</ph>um<ph id=\"ph3\">\\\\</ph>WinPhoneInput.h.","pos":[3927,4065]},{"content":"The header code is shown here.","pos":[4066,4096]},{"pos":[5881,5926],"content":"Building and deploying the sample application"},{"content":"To build the user-mode test application, complete the following steps.","pos":[5929,5999]},{"content":"Create a new user-mode application project in Visual Studio.","pos":[6005,6065]},{"content":"For more info, see <bpt id=\"p1\">[</bpt>Develop MMOS test applications<ept id=\"p1\">](develop-mmos-test-applications.md)</ept>","pos":[6066,6152]},{"content":"Add the sample code and the header file to the project.","pos":[6158,6213]},{"content":"Build the solution, ensuring that it is generated successfully.","pos":[6219,6282]},{"content":"Disable code integrity in MMOS, or sign the test executable.","pos":[6288,6348]},{"content":"For more info, see \"Security in MMOS,\" in <bpt id=\"p1\">[</bpt>Develop MMOS test applications<ept id=\"p1\">](develop-mmos-test-applications.md)</ept>.","pos":[6349,6459]},{"content":"Deploy the executable to the device and run the application.","pos":[6465,6525]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Deploy and test a user-mode test application in MMOS<ept id=\"p1\">](deploy-and-test-a-user-mode-test-application-in-mmos.md)</ept>.","pos":[6526,6664]}],"content":"---\nauthor: kpacquer\nDescription: Access the touch interface in MMOS\nms.assetid: 4455627d-ba59-48f1-9327-c9e2c30509da\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: Access the touch interface in MMOS\n---\n\n# Access the touch interface in MMOS\n\n\nThe touch controller output can be captured and used in MMOS with proper touch driver support. The touch interface sample illustrates how you can gather touch coordinates in MMOS to implement manufacturing tests.\n\n## <span id=\"Touch_sample_requirements\"></span><span id=\"touch_sample_requirements\"></span><span id=\"TOUCH_SAMPLE_REQUIREMENTS\"></span>Touch sample requirements\n\n\nThe sample code requires that the Microsoft.Input.TchHID.spkg package to be included in the image (either the Main OS or MMOS). The Microsoft.Input.TchHID.spkg package includes tchhid.sys, which implements the **CreateFile** and **Readfile** functions used by the sample code.\n\n## <span id=\"Touch_sample_code\"></span><span id=\"touch_sample_code\"></span><span id=\"TOUCH_SAMPLE_CODE\"></span>Touch sample code\n\n\nThis sample user-mode application displays the touch coordinates received by the touch screen driver.\n\nThe sample app uses the **CreateFile** function to open an exclusive handle to the device to receive raw touch samples. The device name \"TouchRaw0\" is exposed by tchhid.sys, the HID touch class driver provided by Microsoft and included in Microsoft.Input.TchHID.spkg.\n\n``` syntax\n#define TOUCH_RAW_SAMPLES_DEVICE_NAME L\"\\\\\\\\.\\\\TouchRaw0\"\n```\n\nAfter the handle is successfully opened, the application loops until a touch contact point is received near the top-left corner of the screen. The application reads and displays the coordinates and the associated touch contact ID.\n\n``` syntax\n#include \"sample.h\"\n#include <cfgmgr32.h>\n#include <strsafe.h>\n\nint main()\n{\n    HANDLE testDriver = INVALID_HANDLE_VALUE;\n    BOOL exit = FALSE;\n    INT32 i;\n    TouchInfo touchInfo = {0};\n\n    //\n    // Open an exclusive handle to the device to get raw samples\n    //\n    testDriver = CreateFile(\n        L\"\\\\\\\\.\\\\TouchRaw0\",\n        GENERIC_READ,\n        0,\n        NULL,\n        OPEN_EXISTING,\n        0,\n        NULL);\n\n\n    if (INVALID_HANDLE_VALUE == testDriver)\n    {\n        goto exit;\n    }\n\n    //\n    // Loop, printing touches to the debugger.\n    // Release in upper-left corner ends the test.\n    //\n    while (!exit)\n    {\n        DWORD touchInfoBytesRead = 0;\n\n        //\n        // Wait for data\n        //\n        if (!ReadFile(\n            testDriver,\n            &touchInfo,\n            sizeof(TouchInfo),\n            &touchInfoBytesRead,\n            NULL))\n        {\n            goto exit;\n        }\n\n        if (touchInfoBytesRead == 0)\n        {\n            goto exit;\n        }\n\n        //\n        // Print to debugger\n        //\n        for (i=0; i<touchInfo.ContactCount; i++)\n        {\n            WCHAR infoString[MAX_PATH] = {0};\n\n            StringCchPrintf(\n                infoString,\n                MAX_PATH,\n                L\"%d: Contact ID %d, at (%d,%d) is %s\\r\\n\",\n                GetTickCount(),\n                touchInfo.ContactArray[i].ContactID,\n                touchInfo.ContactArray[i].ScreenX,\n                touchInfo.ContactArray[i].ScreenY,\n                FLAGS_TO_STRING(touchInfo.ContactArray[i].Flags));\n                \n            OutputDebugString(infoString);\n        }\n\n        //\n        // Look for program exit\n        //\n        for (i=0; i<touchInfo.ContactCount; i++)\n        {\n            if ((touchInfo.ContactArray[i].ScreenX < 50) &&\n                (touchInfo.ContactArray[i].ScreenY < 50) &&\n                (touchInfo.ContactArray[i].Flags & InputEventFlag_Up))\n            {\n                OutputDebugString(L\"Touch below (50,50), quitting!\\r\\n\");\n                exit = TRUE;\n            }\n        }\n    }\n\nexit:\n    if (testDriver != INVALID_HANDLE_VALUE)\n    {\n        CloseHandle(testDriver);\n    }\n\n    return 0;\n}\n```\n\nThe application uses the TouchInfo and TouchContact data structures, which are defined in %WPDKCONTENTROOT%\\\\include\\\\um\\\\WinPhoneInput.h. The header code is shown here.\n\n``` syntax\n#pragma once\n\n#include <windows.h>\n#include <initguid.h>\n#include <devguid.h>\n\n//\n// This device name is used to access raw touch samples from user mode.\n//\n\n#define TOUCH_RAW_SAMPLES_DEVICE_NAME L\"\\\\\\\\.\\\\TouchRaw0\"\n\nenum InputEventFlag\n{\n    InputEventFlag_None     = 0x0000,\n    \n    InputEventFlag_Down     = 0x0001,\n    InputEventFlag_Move     = 0x0002,\n    InputEventFlag_Hold     = 0x0002,\n    InputEventFlag_Up       = 0x0004,\n    \n    InputEventFlag_Empty    = 0x1000,\n    InputEventFlag_Invalid  = 0x2000,\n    \n    InputEventFlag_TestSync = 0x8000\n};\n\ntypedef struct _TouchContact\n{\n    UINT16         ContactID;\n    UINT16         Flags;            // See InputEventFlag_*\n    INT16          ScreenX;          // Screen Space X-Position\n    INT16          ScreenY;          // Screen Space Y-Position\n    INT16          WindowX;          // Ignore\n    INT16          WindowY;          // Ignore\n} TouchContact;\n\ntypedef struct _TouchInfo\n{\n    UINT16         Size;             // Size, in bytes, of this structure (includes n contacts)\n    UINT16         Flags;            // Ignore\n    UINT32         TimeStamp;        // Driver timestamp\n    HANDLE         Source;           // Ignore\n    UINT32         SessionID;        // Ignore\n    INT32          ContactCount;     // Count of touch contact data points\n    TouchContact   ContactArray[10]; // Collection of contacts\n} TouchInfo;\n\n#define FLAGS_TO_STRING(x) \\\n    (x & InputEventFlag_Down) ? L\"Down\" : \\\n    (x & InputEventFlag_Move) ? L\"Move\" : \\\n    (x & InputEventFlag_Up)   ? L\"Up\"   : \\\n    L\"Unknown\"\n```\n\n## <span id=\"Building_and_deploying_the_sample_application\"></span><span id=\"building_and_deploying_the_sample_application\"></span><span id=\"BUILDING_AND_DEPLOYING_THE_SAMPLE_APPLICATION\"></span>Building and deploying the sample application\n\n\nTo build the user-mode test application, complete the following steps.\n\n1.  Create a new user-mode application project in Visual Studio. For more info, see [Develop MMOS test applications](develop-mmos-test-applications.md)\n\n2.  Add the sample code and the header file to the project.\n\n3.  Build the solution, ensuring that it is generated successfully.\n\n4.  Disable code integrity in MMOS, or sign the test executable. For more info, see \"Security in MMOS,\" in [Develop MMOS test applications](develop-mmos-test-applications.md).\n\n5.  Deploy the executable to the device and run the application. For more information, see [Deploy and test a user-mode test application in MMOS](deploy-and-test-a-user-mode-test-application-in-mmos.md).\n\n \n\n \n\n\n\n\n\n"}