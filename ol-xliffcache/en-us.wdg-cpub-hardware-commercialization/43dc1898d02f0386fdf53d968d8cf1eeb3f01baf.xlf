<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\stackwalk.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">43dc1898d02f0386fdf53d968d8cf1eeb3f01baf</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>stackwalk</source>
          <target>stackwalk</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>stackwalk</source>
          <target>stackwalk</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>stackwalk</source>
          <target>stackwalk</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Displays stack-walking options.</source>
          <target>Displays stack-walking options.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Stack-walking flags can be specified either directly on the command line or in a file.</source>
          <target>Stack-walking flags can be specified either directly on the command line or in a file.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Or -</source>
          <target>Or -</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Or -</source>
          <target>Or -</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Or -</source>
          <target>Or -</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source>Custom stack walking flags can be specified in format: 0x<pc dataRefEnd="id2" dataRefStart="id1" id="p1">mmnn</pc>, where <pc dataRefEnd="id4" dataRefStart="id3" id="p2">mm</pc> is event group and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">nn</pc> is event type.</source>
          <target>Custom stack walking flags can be specified in format: 0x<pc dataRefEnd="id2" dataRefStart="id1" id="p1">mmnn</pc>, where <pc dataRefEnd="id4" dataRefStart="id3" id="p2">mm</pc> is event group and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">nn</pc> is event type.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>The file can contain empty lines or comments that are prefixed by an exclamation mark (!).</source>
          <target>The file can contain empty lines or comments that are prefixed by an exclamation mark (!).</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The following list shows the recognized stack-walking flags:</source>
          <target>The following list shows the recognized stack-walking flags:</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>AlpcClosePort</source>
          <target>AlpcClosePort</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>AlpcConnectFail</source>
          <target>AlpcConnectFail</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>AlpcConnectRequest</source>
          <target>AlpcConnectRequest</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>AlpcConnectSuccess</source>
          <target>AlpcConnectSuccess</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>AlpcReceiveMessage</source>
          <target>AlpcReceiveMessage</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>AlpcSendMessage</source>
          <target>AlpcSendMessage</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>AlpcUnwait</source>
          <target>AlpcUnwait</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>AlpcWaitForNewMessage</source>
          <target>AlpcWaitForNewMessage</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>AlpcWaitForReply</source>
          <target>AlpcWaitForReply</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>CcCanIWriteFail</source>
          <target>CcCanIWriteFail</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>CcFlushCache</source>
          <target>CcFlushCache</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>CcFlushSection</source>
          <target>CcFlushSection</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>CcLazyWriteScan</source>
          <target>CcLazyWriteScan</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>CcReadAhead</source>
          <target>CcReadAhead</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>CcWorkitemComplete</source>
          <target>CcWorkitemComplete</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>CcWorkitemDequeue</source>
          <target>CcWorkitemDequeue</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>CcWorkitemEnqueue</source>
          <target>CcWorkitemEnqueue</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>CcWriteBehind</source>
          <target>CcWriteBehind</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>ContiguousMemoryGeneration</source>
          <target>ContiguousMemoryGeneration</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>CritSecCollision</source>
          <target>CritSecCollision</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>CSwitch</source>
          <target>CSwitch</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>DiskFlushInit</source>
          <target>DiskFlushInit</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>DiskReadInit</source>
          <target>DiskReadInit</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>DiskWriteInit</source>
          <target>DiskWriteInit</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>ExecutiveResource</source>
          <target>ExecutiveResource</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>FileCleanup</source>
          <target>FileCleanup</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>FileClose</source>
          <target>FileClose</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>FileCreate</source>
          <target>FileCreate</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>FileDelete</source>
          <target>FileDelete</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>FileDirEnum</source>
          <target>FileDirEnum</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>FileDirNotify</source>
          <target>FileDirNotify</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>FileFlush</source>
          <target>FileFlush</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>FileFSCTL</source>
          <target>FileFSCTL</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>FileOpEnd</source>
          <target>FileOpEnd</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>FileQueryInformation</source>
          <target>FileQueryInformation</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>FileRead</source>
          <target>FileRead</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>FileRename</source>
          <target>FileRename</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>FileSetInformation</source>
          <target>FileSetInformation</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>FileWrite</source>
          <target>FileWrite</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>HardFault</source>
          <target>HardFault</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>HeapAlloc</source>
          <target>HeapAlloc</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>HeapCreate</source>
          <target>HeapCreate</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>HeapDestroy</source>
          <target>HeapDestroy</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>HeapFree</source>
          <target>HeapFree</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>HeapRangeCreate</source>
          <target>HeapRangeCreate</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>HeapRangeDestroy</source>
          <target>HeapRangeDestroy</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>HeapRangeRelease</source>
          <target>HeapRangeRelease</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>HeapRangeReserve</source>
          <target>HeapRangeReserve</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>HeapRealloc</source>
          <target>HeapRealloc</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>ImageLoad</source>
          <target>ImageLoad</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>ImageUnload</source>
          <target>ImageUnload</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>KernelQueueDequeue</source>
          <target>KernelQueueDequeue</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>KernelQueueEnqueue</source>
          <target>KernelQueueEnqueue</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>KernelSignal</source>
          <target>KernelSignal</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>KernelSignalInit</source>
          <target>KernelSignalInit</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>KernelSync</source>
          <target>KernelSync</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>KernelSyncAll</source>
          <target>KernelSyncAll</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>KernelWaitSync</source>
          <target>KernelWaitSync</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>KernelWaitSyncAll</source>
          <target>KernelWaitSyncAll</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>MapFile</source>
          <target>MapFile</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Mark</source>
          <target>Mark</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>MiniFilterPostOpInit</source>
          <target>MiniFilterPostOpInit</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>MiniFilterPreOpInit</source>
          <target>MiniFilterPreOpInit</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>PagefaultAV</source>
          <target>PagefaultAV</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>PagefaultCopyOnWrite</source>
          <target>PagefaultCopyOnWrite</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>PagefaultDemandZero</source>
          <target>PagefaultDemandZero</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>PagefaultGuard</source>
          <target>PagefaultGuard</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>PagefaultHard</source>
          <target>PagefaultHard</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>PagefaultTransition</source>
          <target>PagefaultTransition</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>PagefileBackedImageMapping</source>
          <target>PagefileBackedImageMapping</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>PageRangeAccess</source>
          <target>PageRangeAccess</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>PageRangeRelease</source>
          <target>PageRangeRelease</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>PoolAlloc</source>
          <target>PoolAlloc</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>PoolAllocSession</source>
          <target>PoolAllocSession</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>PoolFree</source>
          <target>PoolFree</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>PoolFreeSession</source>
          <target>PoolFreeSession</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>PowerDeviceNotify</source>
          <target>PowerDeviceNotify</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>PowerDeviceNotifyComplete</source>
          <target>PowerDeviceNotifyComplete</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>PowerIdleStateChange</source>
          <target>PowerIdleStateChange</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>PowerPerfStateChange</source>
          <target>PowerPerfStateChange</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>PowerPostSleep</source>
          <target>PowerPostSleep</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>PowerPreSleep</source>
          <target>PowerPreSleep</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>PowerSessionCallout</source>
          <target>PowerSessionCallout</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>PowerSessionCalloutReturn</source>
          <target>PowerSessionCalloutReturn</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>PowerSetDevicesState</source>
          <target>PowerSetDevicesState</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>PowerSetDevicesStateReturn</source>
          <target>PowerSetDevicesStateReturn</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>PowerSetPowerAction</source>
          <target>PowerSetPowerAction</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>PowerSetPowerActionReturn</source>
          <target>PowerSetPowerActionReturn</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>PowerThermalConstraint</source>
          <target>PowerThermalConstraint</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>ProcessCreate</source>
          <target>ProcessCreate</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>ProcessDelete</source>
          <target>ProcessDelete</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>Profile</source>
          <target>Profile</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>ProfileSetInterval</source>
          <target>ProfileSetInterval</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>ReadyThread</source>
          <target>ReadyThread</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>RegCloseKey</source>
          <target>RegCloseKey</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>RegCreateKey</source>
          <target>RegCreateKey</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>RegDeleteKey</source>
          <target>RegDeleteKey</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>RegDeleteValue</source>
          <target>RegDeleteValue</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>RegEnumerateKey</source>
          <target>RegEnumerateKey</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>RegEnumerateValueKey</source>
          <target>RegEnumerateValueKey</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>RegFlush</source>
          <target>RegFlush</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>RegKcbCreate</source>
          <target>RegKcbCreate</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>RegKcbDelete</source>
          <target>RegKcbDelete</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>RegOpenKey</source>
          <target>RegOpenKey</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>RegQueryKey</source>
          <target>RegQueryKey</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>RegQueryMultipleValue</source>
          <target>RegQueryMultipleValue</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>RegQueryValue</source>
          <target>RegQueryValue</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>RegSetInformation</source>
          <target>RegSetInformation</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>RegSetValue</source>
          <target>RegSetValue</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>RegVirtualize</source>
          <target>RegVirtualize</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>SplitIO</source>
          <target>SplitIO</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>SyscallEnter</source>
          <target>SyscallEnter</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>SyscallExit</source>
          <target>SyscallExit</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>ThreadCreate</source>
          <target>ThreadCreate</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>ThreadDelete</source>
          <target>ThreadDelete</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>ThreadPoolCallbackCancel</source>
          <target>ThreadPoolCallbackCancel</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>ThreadPoolCallbackDequeue</source>
          <target>ThreadPoolCallbackDequeue</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>ThreadPoolCallbackEnqueue</source>
          <target>ThreadPoolCallbackEnqueue</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>ThreadPoolCallbackStart</source>
          <target>ThreadPoolCallbackStart</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>ThreadPoolCallbackStop</source>
          <target>ThreadPoolCallbackStop</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>ThreadPoolClose</source>
          <target>ThreadPoolClose</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>ThreadPoolCreate</source>
          <target>ThreadPoolCreate</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>ThreadPoolSetMaxThreads</source>
          <target>ThreadPoolSetMaxThreads</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>ThreadPoolSetMinThreads</source>
          <target>ThreadPoolSetMinThreads</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>ThreadSetBasePriority</source>
          <target>ThreadSetBasePriority</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>ThreadSetPriority</source>
          <target>ThreadSetPriority</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>TimerSetOneShot</source>
          <target>TimerSetOneShot</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>TimerSetPeriodic</source>
          <target>TimerSetPeriodic</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>UnMapFile</source>
          <target>UnMapFile</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>VirtualAlloc</source>
          <target>VirtualAlloc</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>VirtualFree</source>
          <target>VirtualFree</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>Example</source>
          <target>Example</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>The stack-walking flag file can contain any number of stack-walking flags per line, separated by spaces, plus signs (+), or on new lines, as shown in the following example.</source>
          <target>The stack-walking flag file can contain any number of stack-walking flags per line, separated by spaces, plus signs (+), or on new lines, as shown in the following example.</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>Xperf Options</source>
          <target>Xperf Options</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>