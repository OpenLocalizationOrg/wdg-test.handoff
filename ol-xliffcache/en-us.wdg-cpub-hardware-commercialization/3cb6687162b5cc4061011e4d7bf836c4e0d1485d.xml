{"nodes":[{"content":"Windows 10 IoT Core (IoT Core) is a version of Windows 10 that is optimized for smaller devices with or without a display.","pos":[35,157]},{"content":"IoT Core uses the rich, extensible Universal Windows Platform (UWP) API for building great solutions.","pos":[158,259]},{"content":"What's new in IoT Core manufacturing","pos":[301,337]},{"content":"What's new in IoT Core manufacturing","pos":[345,381]},{"pos":[420,436],"content":"IoT Core Add-Ons"},{"content":"June 20, 2016","pos":[440,453]},{"content":"New BSP tools added:","pos":[459,479]},{"content":"New folder structure: BSPs are now stored in separate folders, \\iot-adk-addonkit\\Source-<ph id=\"ph1\">&lt;arch&gt;</ph>\\BSP.","pos":[486,585]},{"content":"Multiple projects can now more easily share the same BSP folder.","pos":[586,650]},{"content":"Updated tool: newproduct: Now allows you to link to a custom BSP.","pos":[657,722]},{"content":"By default, arm builds default to RPi2, x86 builds default to MBM.","pos":[723,789]},{"pos":[796,912],"content":"Updated lab: <bpt id=\"p1\">[</bpt>Lab 2a: Replace a driver in an existing board support package<ept id=\"p1\">](replace-a-driver-in-an-existing-bsp.md)</ept>"},{"pos":[914,1018],"content":"<bpt id=\"p1\">**</bpt>June 9, 2016:<ept id=\"p1\">**</ept> Several updates of <bpt id=\"p2\">[</bpt>command-line tools<ept id=\"p2\">](iot-core-adk-addons-command-line-options.md)</ept>:"},{"content":"New tool: BuildImage.cmd.","pos":[1022,1047]},{"content":"Similar to CreateImage.cmd, this tool can build multiple images at a time, which can be useful for automated testing.","pos":[1048,1165]},{"content":"To troubleshoot, see log files at \\Build<ph id=\"ph1\">\\&lt;</ph>arch&gt;\\pkgs\\logs.","pos":[1172,1230]},{"content":"Updated: <bpt id=\"p1\">[</bpt>Update apps on your IoT Core devices<ept id=\"p1\">](..\\service\\updating-iot-core-apps.md)</ept>.","pos":[1238,1324]},{"content":"You can use the same procedures to build app packages and app update packages.","pos":[1325,1403]},{"content":"For Windows 10, version 1607, you can also update your apps through the Windows Store.","pos":[1404,1490]},{"pos":[1493,1597],"content":"<bpt id=\"p1\">**</bpt>May 18, 2016:<ept id=\"p1\">**</ept> Several updates of <bpt id=\"p2\">[</bpt>command-line tools<ept id=\"p2\">](iot-core-adk-addons-command-line-options.md)</ept>:"},{"content":"Added new tools:","pos":[1601,1617]},{"content":"NewAppxPkg: Creates and prepares working folders for creating app packages based on .appx files, certificates, and dependencies.","pos":[1625,1753]},{"content":"NewDrvPkg: Creates and prepares working folders for creating driver packages based on .inf files.","pos":[1764,1861]},{"content":"NewCommonPkg: Creates and prepares working folders for files, folders, registry keys, and other items that aren't architecture-specific.","pos":[1872,2008]},{"content":"Inf2Cab: Converts a .inf file to a .cab file.","pos":[2021,2066]},{"content":"BuildPkg: Builds .cab packages using working folders.","pos":[2077,2130]},{"content":"Deprecated tools:","pos":[2135,2152]},{"content":"BuildAllPackages.","pos":[2164,2181]},{"content":"Use BuildPkg instead.","pos":[2182,2203]},{"content":"NewPkg.","pos":[2214,2221]},{"content":"Use newappxpkg, newdrvpkg, and newcommonpkg instead.","pos":[2222,2274]},{"content":"Troubleshooting and logging: When building packages, you'll get a cleaner display just showing the packages that have been processed, and any errors.","pos":[2279,2428]},{"content":"To troubleshoot, you can now see the full log files at \\Build<ph id=\"ph1\">\\&lt;</ph>arch&gt;\\pkgs\\logs.","pos":[2429,2508]},{"content":"Updated: CreatePkg now supports adding just the Component.Subcomponent names.","pos":[2513,2590]},{"content":"Example:","pos":[2591,2599]},{"content":"Manufacturing labs: Updated labs to use new NewAppPkg, NewDriverPkg, NewCommonPkg tools.","pos":[2666,2754]}],"content":"---\nauthor: kpacquer\nDescription: 'Windows 10 IoT Core (IoT Core) is a version of Windows 10 that is optimized for smaller devices with or without a display. IoT Core uses the rich, extensible Universal Windows Platform (UWP) API for building great solutions.'\nMSHAttr: 'PreferredLib:/library'\ntitle: What's new in IoT Core manufacturing\n---\n\n# What's new in IoT Core manufacturing\n\n## <span id=\"IoT_Core_AddOns\"></span>IoT Core Add-Ons\n\n**June 20, 2016**\n*  New BSP tools added:\n   -  New folder structure: BSPs are now stored in separate folders, \\iot-adk-addonkit\\Source-<arch>\\BSP. Multiple projects can now more easily share the same BSP folder.\n   -  Updated tool: newproduct: Now allows you to link to a custom BSP. By default, arm builds default to RPi2, x86 builds default to MBM.\n   -  Updated lab: [Lab 2a: Replace a driver in an existing board support package](replace-a-driver-in-an-existing-bsp.md)\n\n**June 9, 2016:** \nSeveral updates of [command-line tools](iot-core-adk-addons-command-line-options.md):\n*  New tool: BuildImage.cmd. Similar to CreateImage.cmd, this tool can build multiple images at a time, which can be useful for automated testing.  \n\n   To troubleshoot, see log files at \\Build\\<arch>\\pkgs\\logs.   \n\n*  Updated: [Update apps on your IoT Core devices](..\\service\\updating-iot-core-apps.md). You can use the same procedures to build app packages and app update packages. For Windows 10, version 1607, you can also update your apps through the Windows Store. \n\n**May 18, 2016:** \nSeveral updates of [command-line tools](iot-core-adk-addons-command-line-options.md):\n*  Added new tools: \n   -  NewAppxPkg: Creates and prepares working folders for creating app packages based on .appx files, certificates, and dependencies.\n   \n   -  NewDrvPkg: Creates and prepares working folders for creating driver packages based on .inf files.\n   \n   -  NewCommonPkg: Creates and prepares working folders for files, folders, registry keys, and other items that aren't architecture-specific.  \n   \n   -  Inf2Cab: Converts a .inf file to a .cab file.\n   \n   -  BuildPkg: Builds .cab packages using working folders.\n\n*  Deprecated tools: \n   \n   -  BuildAllPackages. Use BuildPkg instead.\n   \n   -  NewPkg. Use newappxpkg, newdrvpkg, and newcommonpkg instead.\n\n*  Troubleshooting and logging: When building packages, you'll get a cleaner display just showing the packages that have been processed, and any errors. To troubleshoot, you can now see the full log files at \\Build\\<arch>\\pkgs\\logs.\n\n*  Updated: CreatePkg now supports adding just the Component.Subcomponent names. Example:\n\n    ``` syntax\n    createpkg Registry.SystemSettings\n    ```\n\n*  Manufacturing labs: Updated labs to use new NewAppPkg, NewDriverPkg, NewCommonPkg tools."}