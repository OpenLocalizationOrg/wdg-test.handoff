<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\memory-footprint-optimization-exercise-1.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">4cbb145b9ca635e629f64ed7af94720ffb242384</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Exercise 1 - Identify Processes with Large Working Sets</source>
          <target>Exercise 1 - Identify Processes with Large Working Sets</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>The methodology used to analyze the data can take several approaches and differs based on the circumstances under which the investigation was started.</source>
          <target>The methodology used to analyze the data can take several approaches and differs based on the circumstances under which the investigation was started.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Exercise 1 - Identify Processes with Large Working Sets</source>
          <target>Exercise 1 - Identify Processes with Large Working Sets</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>The methodology used to analyze the data can take several approaches and differs based on the circumstances under which the investigation was started.</source>
          <target>The methodology used to analyze the data can take several approaches and differs based on the circumstances under which the investigation was started.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>This exercise discusses and presents some example methodologies along with the different views presented by various column arrangements.</source>
          <target>This exercise discusses and presents some example methodologies along with the different views presented by various column arrangements.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>The data referred to as the Resident Set is the set of pages that currently reside in physical memory (RAM).</source>
          <target>The data referred to as the Resident Set is the set of pages that currently reside in physical memory (RAM).</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The Resident Set is a snapshot of the current memory state at the end of a trace capture with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Recorder (WPR)</pc> or the Assessment Toolkit Memory assessment.</source>
          <target>The Resident Set is a snapshot of the current memory state at the end of a trace capture with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Recorder (WPR)</pc> or the Assessment Toolkit Memory assessment.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>It is not possible to collect multiple snapshots in a single trace.</source>
          <target>It is not possible to collect multiple snapshots in a single trace.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Resident Sets provide a holistic and instantaneous snapshot of the memory composition on the system.</source>
          <target>Resident Sets provide a holistic and instantaneous snapshot of the memory composition on the system.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Investigations into Resident Set analysis are typically done for the following reasons:</source>
          <target>Investigations into Resident Set analysis are typically done for the following reasons:</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>To understand physical memory usage, especially when physical memory usage is higher than expected.</source>
          <target>To understand physical memory usage, especially when physical memory usage is higher than expected.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>To understand the sources of process private working set, especially when the process private working set is larger than expected.</source>
          <target>To understand the sources of process private working set, especially when the process private working set is larger than expected.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>System responsiveness issues due to paging activity.</source>
          <target>System responsiveness issues due to paging activity.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Step 1: Collect data using the Assessment Toolkit</source>
          <target>Step 1: Collect data using the Assessment Toolkit</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Assessment Toolkit</pc> contains a test to measure the memory footprint after boot.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Assessment Toolkit</pc> contains a test to measure the memory footprint after boot.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory Footprint</pc> assessment results to gather a baseline of the image software preload.</source>
          <target>You can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory Footprint</pc> assessment results to gather a baseline of the image software preload.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Many processes and services are always in use and take up memory.</source>
          <target>Many processes and services are always in use and take up memory.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>This assessment helps you to see how drivers and applications (that always run) impact the boot process.</source>
          <target>This assessment helps you to see how drivers and applications (that always run) impact the boot process.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Open <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Assessment Console (WAC)</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu.</source>
          <target>Open <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Assessment Console (WAC)</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Options</pc> menu and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New Job…</pc></source>
          <target>Open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Options</pc> menu and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">New Job…</pc></target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Enter <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MemoryTest</pc> as the job name.</source>
          <target>Enter <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MemoryTest</pc> as the job name.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a custom job.</pc></source>
          <target>Select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a custom job.</pc></target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add Assessments.</pc></source>
          <target>Click on <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Add Assessments.</pc></target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory Footprint</pc> assessment by clicking on the “+” symbol</source>
          <target>Add the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory Footprint</pc> assessment by clicking on the “+” symbol</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Click on the newly added <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory Footprint</pc> assessment to enter the test configuration.</source>
          <target>Click on the newly added <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory Footprint</pc> assessment to enter the test configuration.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Unselect <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use recommended settings</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Quick Run</pc> for the configuration.</source>
          <target>Unselect <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Use recommended settings</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Quick Run</pc> for the configuration.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Quick Run</pc> allows the test to complete in a shorter amount of time at the expense of data accuracy.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Quick Run</pc> allows the test to complete in a shorter amount of time at the expense of data accuracy.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>With <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Quick Run</pc> selected, you have two options:</source>
          <target>With <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Quick Run</pc> selected, you have two options:</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Package</pc> the job in order to create a folder that has all the test resources and copy it to another test system.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Package</pc> the job in order to create a folder that has all the test resources and copy it to another test system.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>(Click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Package…</pc></source>
          <target>(Click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Package…</pc></target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>button in the bottom right corner to choose this option.)</source>
          <target>button in the bottom right corner to choose this option.)</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> the job directly on the system.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> the job directly on the system.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>(Click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> button in the bottom right corner to choose this option.)</source>
          <target>(Click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> button in the bottom right corner to choose this option.)</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>This restarts the system to gather a trace.</source>
          <target>This restarts the system to gather a trace.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>This test can take some 15-20 minutes to complete.</source>
          <target>This test can take some 15-20 minutes to complete.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>We want the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> option.</source>
          <target>We want the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> option.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Step 2: Visualize the Memory Footprint assessment results using WAC</source>
          <target>Step 2: Visualize the Memory Footprint assessment results using WAC</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Once the assessment is done, you can open the results XML file that contains a summary of the memory usage on the system.</source>
          <target>Once the assessment is done, you can open the results XML file that contains a summary of the memory usage on the system.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Step 2.1: Open the memory report</source>
          <target>Step 2.1: Open the memory report</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WAC</pc>, open the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Options</pc> menu and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Open Results…</pc></source>
          <target>In <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WAC</pc>, open the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Options</pc> menu and select <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Open Results…</pc></target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>You can also press <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CTRL+R</pc> on the keyboard.</source>
          <target>You can also press <pc dataRefEnd="id2" dataRefStart="id1" id="p1">CTRL+R</pc> on the keyboard.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Browse…</pc></source>
          <target>Click on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Browse…</pc></target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>button.</source>
          <target>button.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Navigate to the folder where you stored the assessment you created in Step 1.</source>
          <target>Navigate to the folder where you stored the assessment you created in Step 1.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Open the assessment you created in Step 1.</source>
          <target>Open the assessment you created in Step 1.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>The report contains different categories to help you understand the driver and process contributions to the overall memory footprint.</source>
          <target>The report contains different categories to help you understand the driver and process contributions to the overall memory footprint.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>The report should look something like this.</source>
          <target>The report should look something like this.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Take the time to familiarize yourself with the report by looking at the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Process Private Pages</pc> categories.</source>
          <target>Take the time to familiarize yourself with the report by looking at the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Process Private Pages</pc> categories.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>In the preceding example, 1487 MB of memory is used out of 4 GB of physical RAM.</source>
          <target>In the preceding example, 1487 MB of memory is used out of 4 GB of physical RAM.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Memory In Use = Process working sets + non-paged memory + modified pages</source>
          <target>Memory In Use = Process working sets + non-paged memory + modified pages</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Available memory = Standby memory + free memory</source>
          <target>Available memory = Standby memory + free memory</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>In the preceding example, the biggest consumers of memory usage are driver allocations with 267 MB for non-paged, and 613 MB for process private pages (private working sets).</source>
          <target>In the preceding example, the biggest consumers of memory usage are driver allocations with 267 MB for non-paged, and 613 MB for process private pages (private working sets).</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://go.microsoft.com/fwlink/?linkid=619204)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about the metrics, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Results for the Memory Footprint Assessment</pc> topic on MSDN.</source>
          <target>For more information about the metrics, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Results for the Memory Footprint Assessment</pc> topic on MSDN.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>Step 2.2: Review driver non-paged allocations</source>
          <target>Step 2.2: Review driver non-paged allocations</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>This metric is similar to the paged allocations except that these allocations use physical memory that cannot be paged out.</source>
          <target>This metric is similar to the paged allocations except that these allocations use physical memory that cannot be paged out.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>This reflects physical memory that is pinned and therefore unavailable for paged memory or use by other processes and services.</source>
          <target>This reflects physical memory that is pinned and therefore unavailable for paged memory or use by other processes and services.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>Acquiring too much non-paged memory reduces the amount of memory that backed memory can use.</source>
          <target>Acquiring too much non-paged memory reduces the amount of memory that backed memory can use.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Non-Paged Allocations</pc> category by clicking on the arrow on the left.</source>
          <target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Driver Non-Paged Allocations</pc> category by clicking on the arrow on the left.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DriverLockedSystemPages</pc> category.</source>
          <target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DriverLockedSystemPages</pc> category.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>This is memory loaded in from paged memory and then locked by the driver until it is no longer useful.</source>
          <target>This is memory loaded in from paged memory and then locked by the driver until it is no longer useful.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Identify the driver with the biggest memory usage.</source>
          <target>Identify the driver with the biggest memory usage.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>You can influence this metric by swapping out hardware or software drivers that have lower memory requirements.</source>
          <target>You can influence this metric by swapping out hardware or software drivers that have lower memory requirements.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>The driver vendor has the most influence over this metric by the way the driver is designed.</source>
          <target>The driver vendor has the most influence over this metric by the way the driver is designed.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Look for large memory allocations in the results presented in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WAC</pc>.</source>
          <target>Look for large memory allocations in the results presented in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WAC</pc>.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In addition, the driver vendors can be given performance traces (stored in the same directory as the assessment results and can be analyzed with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WPA</pc>) of this assessment to find areas of heavy memory allocation that are candidates for investigations into reducing memory use.</source>
          <target>In addition, the driver vendors can be given performance traces (stored in the same directory as the assessment results and can be analyzed with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WPA</pc>) of this assessment to find areas of heavy memory allocation that are candidates for investigations into reducing memory use.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Step 2.3: Review process private working sets</source>
          <target>Step 2.3: Review process private working sets</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>The largest users of the overall memory footprint are apps that may always be running in the background without the user’s knowledge.</source>
          <target>The largest users of the overall memory footprint are apps that may always be running in the background without the user’s knowledge.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To view the amount of memory that processes use, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process Private Pages</pc> category in the report.</source>
          <target>To view the amount of memory that processes use, you can use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process Private Pages</pc> category in the report.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process Private Pages</pc> category by clicking on the arrow on the left.</source>
          <target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process Private Pages</pc> category by clicking on the arrow on the left.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Active</pc> category.</source>
          <target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Active</pc> category.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>The list shows the binaries and their usage of active memory.</source>
          <target>The list shows the binaries and their usage of active memory.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Your view should look something like this:</source>
          <target>Your view should look something like this:</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Identify the process that uses the most memory.</source>
          <target>Identify the process that uses the most memory.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You can influence this metric by reducing the number of “run always” applications, which are applications in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> registry key or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Startup</pc> folder.</source>
          <target>You can influence this metric by reducing the number of “run always” applications, which are applications in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Run</pc> registry key or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Startup</pc> folder.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Analyze the impact of added apps.</source>
          <target>Analyze the impact of added apps.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Driver and software vendors have the most influence over this metric by the way their code is designed.</source>
          <target>Driver and software vendors have the most influence over this metric by the way their code is designed.</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Look for large memory allocations in the results presented in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WAC</pc>.</source>
          <target>Look for large memory allocations in the results presented in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WAC</pc>.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>In addition, software vendors can be given performance traces (stored in the same directory as the assessment results) of this assessment to find areas of heavy memory allocations that are candidates for investigations into reducing memory use.</source>
          <target>In addition, software vendors can be given performance traces (stored in the same directory as the assessment results) of this assessment to find areas of heavy memory allocations that are candidates for investigations into reducing memory use.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Careful analyses of allocations, even small ones, can help the developer to find allocations that add up.</source>
          <target>Careful analyses of allocations, even small ones, can help the developer to find allocations that add up.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Step 3: Collect Resident Set data using WPR</source>
          <target>Step 3: Collect Resident Set data using WPR</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In steps 1 and 2, you learned how to gather memory traces using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Assessment Toolkit Memory Footprint</pc> assessment.</source>
          <target>In steps 1 and 2, you learned how to gather memory traces using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Assessment Toolkit Memory Footprint</pc> assessment.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>This assessment can solely capture a trace for the boot scenario.</source>
          <target>This assessment can solely capture a trace for the boot scenario.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>You can capture traces for any scenario (app launch, web browsing, etc.) using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Recorder (WPR)</pc></source>
          <target>You can capture traces for any scenario (app launch, web browsing, etc.) using the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Recorder (WPR)</pc></target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Follow these steps to gather a trace with Resident Set data.</source>
          <target>Follow these steps to gather a trace with Resident Set data.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Open <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Recorder</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu.</source>
          <target>Open <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Recorder</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu.</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">"First Level Triage"</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">"Resident Set analysis"</pc> recording profiles, but keep the default values for the other options.</source>
          <target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">"First Level Triage"</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">"Resident Set analysis"</pc> recording profiles, but keep the default values for the other options.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc> and wait a few seconds.</source>
          <target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc> and wait a few seconds.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Save</pc> and save the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ETL</pc> trace to disk.</source>
          <target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Save</pc> and save the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">ETL</pc> trace to disk.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>You now have a snapshot of the system memory composition.</source>
          <target>You now have a snapshot of the system memory composition.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Step 4: Interpret Resident Set data using WPA</source>
          <target>Step 4: Interpret Resident Set data using WPA</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Follow this procedure:</source>
          <target>Follow this procedure:</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Launch <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Analyzer</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu.</source>
          <target>Launch <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Performance Analyzer</pc> from the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Start</pc> menu.</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ETL</pc> trace you just gathered (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">File</pc> menu, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Open…</pc>).</source>
          <target>Open the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ETL</pc> trace you just gathered (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">File</pc> menu, <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Open…</pc>).</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory</pc> set in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Graph Explorer</pc>.</source>
          <target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Memory</pc> set in the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Graph Explorer</pc>.</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Drag and drop the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resident Set</pc> graph into the Analysis tab.</source>
          <target>Drag and drop the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Resident Set</pc> graph into the Analysis tab.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Your view should look something like this:</source>
          <target>Your view should look something like this:</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Review how the data is presented.</source>
          <target>Review how the data is presented.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Here are some definitions of the most helpful columns to perform top level analysis:</source>
          <target>Here are some definitions of the most helpful columns to perform top level analysis:</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Column</source>
          <target>Column</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Definition</source>
          <target>Definition</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>MMList</source>
          <target>MMList</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>The memory management list that contains the pages.</source>
          <target>The memory management list that contains the pages.</target>
        </segment>
      </unit>
      <unit id="203">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Active<ph dataRef="id1" id="ph1" /> – Pages currently within a process private working set or kernel working set.</source>
          <target>Active<ph dataRef="id1" id="ph1" /> – Pages currently within a process private working set or kernel working set.</target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Standby<ph dataRef="id1" id="ph1" /> – Unmodified pages on the standby list.</source>
          <target>Standby<ph dataRef="id1" id="ph1" /> – Unmodified pages on the standby list.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>They are part of the available memory.</source>
          <target>They are part of the available memory.</target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Modified<ph dataRef="id1" id="ph1" /> – Process private or file backed pages that were modified since last being persisted to permanent storage.</source>
          <target>Modified<ph dataRef="id1" id="ph1" /> – Process private or file backed pages that were modified since last being persisted to permanent storage.</target>
        </segment>
      </unit>
      <unit id="207">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>ModifiedNoWrite<ph dataRef="id1" id="ph1" /> – Pages that were modified but will not be persisted to permanent storage.</source>
          <target>ModifiedNoWrite<ph dataRef="id1" id="ph1" /> – Pages that were modified but will not be persisted to permanent storage.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Transition<ph dataRef="id1" id="ph1" /> – Pages in transition between lists.</source>
          <target>Transition<ph dataRef="id1" id="ph1" /> – Pages in transition between lists.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>Process</source>
          <target>Process</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>The name of the process that is the owner of the pages.</source>
          <target>The name of the process that is the owner of the pages.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>This information is available only for process private pages.</source>
          <target>This information is available only for process private pages.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>Even if they are not shared, all shareable pages are associated with the “Unknown” (-1) process.</source>
          <target>Even if they are not shared, all shareable pages are associated with the “Unknown” (-1) process.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>The value represented varies depending on the page category.</source>
          <target>The value represented varies depending on the page category.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>For example:</source>
          <target>For example:</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>For images, drivers, files, etc, it displays the full file path and name.</source>
          <target>For images, drivers, files, etc, it displays the full file path and name.</target>
        </segment>
      </unit>
      <unit id="217">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For <ph dataRef="id1" id="ph1" />Pool<ph dataRef="id2" id="ph2" /> memory, it shows the driver pool tag name.</source>
          <target>For <ph dataRef="id1" id="ph1" />Pool<ph dataRef="id2" id="ph2" /> memory, it shows the driver pool tag name.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>Page Category</source>
          <target>Page Category</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>The type of data contained within the page as defined below.</source>
          <target>The type of data contained within the page as defined below.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Some of the possible categories are:</source>
          <target>Some of the possible categories are:</target>
        </segment>
      </unit>
      <unit id="221">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>CopyOnWriteImage<ph dataRef="id1" id="ph1" /> – Process private pages created by the patching of an executable images import address table or rebasing of an executable.</source>
          <target>CopyOnWriteImage<ph dataRef="id1" id="ph1" /> – Process private pages created by the patching of an executable images import address table or rebasing of an executable.</target>
        </segment>
      </unit>
      <unit id="222">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Driver<ph dataRef="id1" id="ph1" /> – Code pages for a driver.</source>
          <target>Driver<ph dataRef="id1" id="ph1" /> – Code pages for a driver.</target>
        </segment>
      </unit>
      <unit id="223">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>DriverFile<ph dataRef="id1" id="ph1" /> – Code pages that were read from the driver executable and mapped as data.</source>
          <target>DriverFile<ph dataRef="id1" id="ph1" /> – Code pages that were read from the driver executable and mapped as data.</target>
        </segment>
      </unit>
      <unit id="224">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>DriverLockedSystemPage<ph dataRef="id1" id="ph1" /> – Kernel mode pages that are locked or pinned in memory, typically by drivers or the kernel.</source>
          <target>DriverLockedSystemPage<ph dataRef="id1" id="ph1" /> – Kernel mode pages that are locked or pinned in memory, typically by drivers or the kernel.</target>
        </segment>
      </unit>
      <unit id="225">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Image<ph dataRef="id1" id="ph1" /> – Pages from .dll and .exe files loaded as executable images.</source>
          <target>Image<ph dataRef="id1" id="ph1" /> – Pages from .dll and .exe files loaded as executable images.</target>
        </segment>
      </unit>
      <unit id="226">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>MapFile<ph dataRef="id1" id="ph1" /> – Pages of data files or images loaded as data.</source>
          <target>MapFile<ph dataRef="id1" id="ph1" /> – Pages of data files or images loaded as data.</target>
        </segment>
      </unit>
      <unit id="227">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>NonPagedPool<ph dataRef="id1" id="ph1" /> – Pages that contain data for the non-pageable system pool.</source>
          <target>NonPagedPool<ph dataRef="id1" id="ph1" /> – Pages that contain data for the non-pageable system pool.</target>
        </segment>
      </unit>
      <unit id="228">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>PagedPool<ph dataRef="id1" id="ph1" /> – Pages that contain data for the pageable system pool.</source>
          <target>PagedPool<ph dataRef="id1" id="ph1" /> – Pages that contain data for the pageable system pool.</target>
        </segment>
      </unit>
      <unit id="229">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>PFMappedSection<ph dataRef="id1" id="ph1" /> – Pages of memory-mapped sections backed by the page file.</source>
          <target>PFMappedSection<ph dataRef="id1" id="ph1" /> – Pages of memory-mapped sections backed by the page file.</target>
        </segment>
      </unit>
      <unit id="230">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>SystemPage<ph dataRef="id1" id="ph1" /> – Pages that contain system page table entries used to map system pages such as I/O space, kernel stacks, and memory descriptor lists.</source>
          <target>SystemPage<ph dataRef="id1" id="ph1" /> – Pages that contain system page table entries used to map system pages such as I/O space, kernel stacks, and memory descriptor lists.</target>
        </segment>
      </unit>
      <unit id="231">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>UserStack<ph dataRef="id1" id="ph1" /> – Pages that contain the user mode data for each thread.</source>
          <target>UserStack<ph dataRef="id1" id="ph1" /> – Pages that contain the user mode data for each thread.</target>
        </segment>
      </unit>
      <unit id="232">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>VirtualAlloc<ph dataRef="id1" id="ph1" /> – Pages allocated by the VirtualAlloc APIs.</source>
          <target>VirtualAlloc<ph dataRef="id1" id="ph1" /> – Pages allocated by the VirtualAlloc APIs.</target>
        </segment>
      </unit>
      <unit id="233">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Win32Heap<ph dataRef="id1" id="ph1" /> – Heap pages.</source>
          <target>Win32Heap<ph dataRef="id1" id="ph1" /> – Heap pages.</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Size (MB)</source>
          <target>Size (MB)</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>The total size of the pages aggregated in each category.</source>
          <target>The total size of the pages aggregated in each category.</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>Step 6: Identify process working sets that impact the memory footprint</source>
          <target>Step 6: Identify process working sets that impact the memory footprint</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>Resident Set data can be displayed in many different ways based on the column arrangements in the summary table.</source>
          <target>Resident Set data can be displayed in many different ways based on the column arrangements in the summary table.</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>The summary table has several pre-defined column arrangements that you can use as starting points for an investigation.</source>
          <target>The summary table has several pre-defined column arrangements that you can use as starting points for an investigation.</target>
        </segment>
      </unit>
      <unit id="239">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process Private Working Set</pc> preset.</source>
          <target>Select the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Process Private Working Set</pc> preset.</target>
        </segment>
      </unit>
      <unit id="240">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Active MMList</pc> group.</source>
          <target>Expand the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Active MMList</pc> group.</target>
        </segment>
      </unit>
      <unit id="241">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Focus on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Active</pc> category as it is what’s currently impacting memory usage.</source>
          <target>Focus on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Active</pc> category as it is what’s currently impacting memory usage.</target>
        </segment>
      </unit>
      <unit id="242">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standby</pc> pages could be freed under memory pressure.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Standby</pc> pages could be freed under memory pressure.</target>
        </segment>
      </unit>
      <unit id="243">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Modified</pc> pages could be written to disk and freed.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Modified</pc> pages could be written to disk and freed.</target>
        </segment>
      </unit>
      <unit id="244">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Sort by size by clicking on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Size (MB)</pc> column header.</source>
          <target>Sort by size by clicking on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Size (MB)</pc> column header.</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>Identify the processes with the largest usage.</source>
          <target>Identify the processes with the largest usage.</target>
        </segment>
      </unit>
      <unit id="246">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>You might see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">N/A</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">“Unknown (-1)”</pc> as process names.</source>
          <target>You might see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">N/A</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">“Unknown (-1)”</pc> as process names.</target>
        </segment>
      </unit>
      <unit id="247">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">N/A</pc> contains pages not associated to any processes such as driver pool memory.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">N/A</pc> contains pages not associated to any processes such as driver pool memory.</target>
        </segment>
      </unit>
      <unit id="248">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">“Unknown (-1)”</pc> contains shareable pages.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">“Unknown (-1)”</pc> contains shareable pages.</target>
        </segment>
      </unit>
      <unit id="249">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Expand the processes to look at <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Page Category</pc>.</source>
          <target>Expand the processes to look at <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Page Category</pc>.</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>You can now see the composition of the process working set in the following figure.</source>
          <target>You can now see the composition of the process working set in the following figure.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Top categories should be VirtualAlloc or Win32Heap, which we’ll analyze in Exercise 2.</source>
          <target>Top categories should be VirtualAlloc or Win32Heap, which we’ll analyze in Exercise 2.</target>
        </segment>
      </unit>
      <unit id="252">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>In the example below, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SearchIndexer.exe</pc> uses 21.7 MB of active memory through <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Heap</pc> allocations, and 12.4 MB through <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VirtualAlloc</pc> API calls.</source>
          <target>In the example below, <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SearchIndexer.exe</pc> uses 21.7 MB of active memory through <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Heap</pc> allocations, and 12.4 MB through <pc dataRefEnd="id6" dataRefStart="id5" id="p3">VirtualAlloc</pc> API calls.</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>Focus on 3rd-party processes and determine if they need to be launched on boot as part of the preloaded software.</source>
          <target>Focus on 3rd-party processes and determine if they need to be launched on boot as part of the preloaded software.</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>As a developer, you should analyze the dynamic allocations your process is making to understand where optimizations can be made.</source>
          <target>As a developer, you should analyze the dynamic allocations your process is making to understand where optimizations can be made.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>