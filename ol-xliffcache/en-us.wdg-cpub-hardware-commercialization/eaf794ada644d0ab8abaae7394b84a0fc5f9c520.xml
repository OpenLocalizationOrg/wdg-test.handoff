{"nodes":[{"content":"You can determine whether the device is in Manufacturing Mode or not by using either a kernel mode or user mode API.","pos":[35,151]},{"content":"Detect Manufacturing Mode","pos":[259,284]},{"content":"Detect Manufacturing Mode","pos":[292,317]},{"content":"You can determine whether the device is in Manufacturing Mode or not by using either a kernel mode or user mode API.","pos":[320,436]},{"content":"In kernel mode, a new API has been defined in wdm.h:","pos":[438,490]},{"content":"Here's an example of how you might use it:","pos":[606,648]},{"content":"In user mode, the API is defined in sysinfoapi.h:","pos":[1052,1101]},{"content":"Here's an example of how you might use it:","pos":[1199,1241]}],"content":"---\nauthor: kpacquer\nDescription: 'You can determine whether the device is in Manufacturing Mode or not by using either a kernel mode or user mode API.'\nms.assetid: fc888a9a-a004-4689-9972-a40b4d5ba50c\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: Detect Manufacturing Mode\n---\n\n# Detect Manufacturing Mode\n\n\nYou can determine whether the device is in Manufacturing Mode or not by using either a kernel mode or user mode API.\n\nIn kernel mode, a new API has been defined in wdm.h:\n\n``` syntax\n_IRQL_requires_max_(APC_LEVEL)\nNTKERNELAPI\nBOOLEAN\nExIsManufacturingModeEnabled (\n    VOID\n    );\n```\n\nHere's an example of how you might use it:\n\n``` syntax\nBOOLEAN ManufacturingModeEnabled = FALSE;\n\nNTSTATUS\nDriverEntry(\n    PDRIVER_OBJECT DriverObject,\n    PUNICODE_STRING RegistryPath\n    )\n{\n...\n    ManufacturingModeEnabled = ExIsManufacturingModeEnabled();\n...\n}\n\nNTSTATUS\nDoManufacturingOperation(\n    VOID\n    )\n{\n    if (ManufacturingModeEnabled == FALSE) {\n        return STATUS_NOT_SUPPORTED;\n    }\n...\n    return STATUS_SUCCESS;\n}\n```\n\nIn user mode, the API is defined in sysinfoapi.h:\n\n``` syntax\nWINBASEAPI\nBOOL\nWINAPI\nGetOsManufacturingMode(\n    _Out_ PBOOL pbEnabled\n    );\n```\n\nHere's an example of how you might use it:\n\n``` syntax\nDWORD\nDoManufacturingOperation(\n    VOID\n    )\n{\n    DWORD Error = ERROR_SUCCESS;\n    BOOL ManufacturingModeEnabled = FALSE;\n\n    if (!GetOsManufacturingMode(&ManufacturingModeEnabled)) {\n        Error = GetLastError();\n    }\n\n    if ((Error != ERROR_SUCCESS) ||\n        (ManufacturingModeEnabled == FALSE)) {\n        return ERROR_NOT_SUPPORTED;\n    }\n...\n    return ERROR_SUCCESS;\n}\n```\n\n \n\n \n\n\n\n\n\n"}