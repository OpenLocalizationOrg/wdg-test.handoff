<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\heap.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">a05b9e440d35149c21214410f5f13c8b7402b6c9</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>heap</source>
          <target>heap</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>heap</source>
          <target>heap</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>heap</source>
          <target>heap</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">`-o`</data>
        </originalData>
        <segment state="initial">
          <source>Writes a text file containing the following information in tabular form based on the output file specified by <ph dataRef="id1" id="ph1" />:</source>
          <target>Writes a text file containing the following information in tabular form based on the output file specified by <ph dataRef="id1" id="ph1" />:</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Alloc number</source>
          <target>Alloc number</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Alloc size, in KB</source>
          <target>Alloc size, in KB</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Out number</source>
          <target>Out number</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Out size, in KB</source>
          <target>Out size, in KB</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Realloc number</source>
          <target>Realloc number</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Extents size, in KB</source>
          <target>Extents size, in KB</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Out Ext size, in KB</source>
          <target>Out Ext size, in KB</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Heap handle</source>
          <target>Heap handle</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Options</source>
          <target>Options</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-pid</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />processId<ph dataRef="id6" id="ph2" /></pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-pid</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />processId<ph dataRef="id6" id="ph2" /></pc>
          </target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Shows statistics only for the specified process identifier.</source>
          <target>Shows statistics only for the specified process identifier.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>If not specified, shows statistics for all processes.</source>
          <target>If not specified, shows statistics for all processes.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">\[</data>
          <data id="id6">\[</data>
          <data id="id7">\]\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-stacks</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />s <ph dataRef="id6" id="ph2" />o|oc|t|tc|rc<ph dataRef="id7" id="ph3" /></pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-stacks</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />s <ph dataRef="id6" id="ph2" />o|oc|t|tc|rc<ph dataRef="id7" id="ph3" /></pc>
          </target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Displays the allocations, aggregated by stacks.</source>
          <target>Displays the allocations, aggregated by stacks.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>This is the default behavior.</source>
          <target>This is the default behavior.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">*</data>
          <data id="id8">*</data>
          <data id="id9">*</data>
          <data id="id10">*</data>
        </originalData>
        <segment state="initial">
          <source>Sorts by outstanding size (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">so</pc>), outstanding count (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">soc</pc>, total size (<pc dataRefEnd="id6" dataRefStart="id5" id="p3">st</pc>), reallocation count (<pc dataRefEnd="id8" dataRefStart="id7" id="p4">src</pc>, and total count (<pc dataRefEnd="id10" dataRefStart="id9" id="p5">stc</pc>).</source>
          <target>Sorts by outstanding size (<pc dataRefEnd="id2" dataRefStart="id1" id="p1">so</pc>), outstanding count (<pc dataRefEnd="id4" dataRefStart="id3" id="p2">soc</pc>, total size (<pc dataRefEnd="id6" dataRefStart="id5" id="p3">st</pc>), reallocation count (<pc dataRefEnd="id8" dataRefStart="id7" id="p4">src</pc>, and total count (<pc dataRefEnd="id10" dataRefStart="id9" id="p5">stc</pc>).</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>The default is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">so</pc>.</source>
          <target>The default is <pc dataRefEnd="id2" dataRefStart="id1" id="p1">so</pc>.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">\[</data>
          <data id="id6">\[</data>
          <data id="id7">\]\]</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-frames</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />s <ph dataRef="id6" id="ph2" />o|oc|t|tc|rc<ph dataRef="id7" id="ph3" /></pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-frames</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />s <ph dataRef="id6" id="ph2" />o|oc|t|tc|rc<ph dataRef="id7" id="ph3" /></pc>
          </target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">`-stacks`</data>
        </originalData>
        <segment state="initial">
          <source>Similar to <ph dataRef="id1" id="ph1" />, but the aggregation is by top stack frame, instead of by the entire stack.</source>
          <target>Similar to <ph dataRef="id1" id="ph1" />, but the aggregation is by top stack frame, instead of by the entire stack.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>-images</source>
          <target>-images</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">`-stacks`</data>
          <data id="id2">`-frames`</data>
        </originalData>
        <segment state="initial">
          <source>Similar to <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />, but the aggregation is by image name of the top stack frame.</source>
          <target>Similar to <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" />, but the aggregation is by image name of the top stack frame.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-range</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 T2</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-range</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 T2</pc>
          </target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Use event data from times <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> through <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>, both in microseconds.</source>
          <target>Use event data from times <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> through <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>, both in microseconds.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-lifetime</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 T2</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-lifetime</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 T2</pc>
          </target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Include only allocations with a lifetime, in microseconds, greater than or equal to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> and less than <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>.</source>
          <target>Include only allocations with a lifetime, in microseconds, greater than or equal to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> and less than <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-size</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">S1 S2</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-size</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">S1 S2</pc>
          </target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Include only allocations of sizes greater than or equal to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">S1</pc> and less than <pc dataRefEnd="id4" dataRefStart="id3" id="p2">S2</pc>, in bytes.</source>
          <target>Include only allocations of sizes greater than or equal to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">S1</pc> and less than <pc dataRefEnd="id4" dataRefStart="id3" id="p2">S2</pc>, in bytes.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-cullframes</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame1 Frame2 … FrameN</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-cullframes</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame1 Frame2 … FrameN</pc>
          </target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Removes any top stack frames from the report that match any of the specified frames.</source>
          <target>Removes any top stack frames from the report that match any of the specified frames.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">`[image!][symbol]`</data>
        </originalData>
        <segment state="initial">
          <source>The parameter format is <ph dataRef="id1" id="ph1" />.</source>
          <target>The parameter format is <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>The names are not case-sensitive.</source>
          <target>The names are not case-sensitive.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-requireframes</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame1 Frame2 … FrameN</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-requireframes</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Frame1 Frame2 … FrameN</pc>
          </target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Requires that each stack have at least one frame that matches at least one of the specified frames.</source>
          <target>Requires that each stack have at least one frame that matches at least one of the specified frames.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">`-cullframes`</data>
        </originalData>
        <segment state="initial">
          <source>This test occurs before any explicit frame culling with <ph dataRef="id1" id="ph1" />.</source>
          <target>This test occurs before any explicit frame culling with <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-cullLists</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />fileName<ph dataRef="id6" id="ph2" /></pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-cullLists</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />fileName<ph dataRef="id6" id="ph2" /></pc>
          </target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Frames in the specified file are to be excluded from the result.</source>
          <target>Frames in the specified file are to be excluded from the result.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>If a stack does not include such a frame, the stack is excluded.</source>
          <target>If a stack does not include such a frame, the stack is excluded.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">`-cullFrames`</data>
        </originalData>
        <segment state="initial">
          <source>Frames have the same format as for <ph dataRef="id1" id="ph1" />.</source>
          <target>Frames have the same format as for <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>The names are not case-sensitive.</source>
          <target>The names are not case-sensitive.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">&amp;lt;</data>
          <data id="id6">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-top</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />n<ph dataRef="id6" id="ph2" /></pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-top</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">
              <ph dataRef="id5" id="ph1" />n<ph dataRef="id6" id="ph2" /></pc>
          </target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Limits the number of allocations displayed.</source>
          <target>Limits the number of allocations displayed.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>-totals</source>
          <target>-totals</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Displays only the totals of the allocation events.</source>
          <target>Displays only the totals of the allocation events.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>This action can take several minutes to complete on a large trace due to the heavy sorting and matching performed.</source>
          <target>This action can take several minutes to complete on a large trace due to the heavy sorting and matching performed.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](enabling-heap-data-capture.md)</data>
        </originalData>
        <segment state="initial">
          <source>For information on how to capture heap data, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabling Heap Data Capture</pc></source>
          <target>For information on how to capture heap data, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Enabling Heap Data Capture</pc></target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Xperf Actions</source>
          <target>Xperf Actions</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Time and Timestamp Formats</source>
          <target>Time and Timestamp Formats</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>