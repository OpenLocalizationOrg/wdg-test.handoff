{"nodes":[{"content":"spinlock","pos":[11,19]},{"content":"spinlock","pos":[33,41]},{"content":"spinlock","pos":[230,238]},{"content":"This action produces a text file listing information related to spinlock activity.","pos":[241,323]},{"content":"Options","pos":[381,388]},{"content":"-summary","pos":[422,430]},{"content":"Summarizes spinlock event information in a tab-delimited format.","pos":[435,499]},{"content":"<bpt id=\"p1\">**</bpt>-count<ept id=\"p1\">**</ept><bpt id=\"p2\">*</bpt><ph id=\"ph1\">\\[</ph>n<ph id=\"ph2\">\\]</ph><ept id=\"p2\">*</ept>","pos":[531,548]},{"content":"Maximum number of files to show.","pos":[551,583]},{"content":"Remarks","pos":[588,595]},{"content":"Xperf spinlock analysis is available for 64-bit architectures.","pos":[598,660]},{"content":"Spinlock instrumentation is supported beginning with Windows 7, Windows Server 2008 R2, and newer versions of the operating system.","pos":[661,792]},{"content":"Xperf supports normal spin locks and queued spin locks.","pos":[793,848]},{"content":"For more information about spin locks, see <bpt id=\"p1\">[</bpt>Spin Locks<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?linkid=213937)</ept>.","pos":[849,954]},{"content":"To reduce overhead, ETW spinlock instrumentation is sample-based.","pos":[955,1020]},{"content":"The sampling frequency can be tuned with <ph id=\"ph1\">`-setspinlocksample`</ph>.","pos":[1021,1083]},{"content":"For more information about starting spinlock sampling, see <bpt id=\"p1\">[</bpt>start<ept id=\"p1\">](start.md)</ept>.","pos":[1084,1161]},{"content":"To perform meaningful analysis, familiarity with WPA symbols is recommended.","pos":[1163,1239]},{"content":"For information on symbols, see <bpt id=\"p1\">[</bpt>Symbol Support<ept id=\"p1\">](symbol-support.md)</ept>.","pos":[1240,1308]},{"content":"If your test scenario is already running, it is not necessary to stop the scenario to collect spinlock events.","pos":[1310,1420]},{"content":"You can start spinlock event collection while the code of interest is being actively exercised.","pos":[1421,1516]},{"content":"Nor is it necessary to suspend your scenario when spinlock event data has been collected.","pos":[1517,1606]},{"content":"Note","pos":[1610,1614]},{"content":"Large numbers of spinlock events may overload the trace buffers and cause events to be lost.","pos":[1619,1711]},{"content":"A message will appear when merging and loading the trace if this happens.","pos":[1712,1785]},{"content":"For more information about avoiding event loss, see <bpt id=\"p1\">[</bpt>Avoid Lost Events<ept id=\"p1\">](avoid-lost-events.md)</ept>.","pos":[1786,1880]},{"pos":[1882,2008],"content":"For more information about the <bpt id=\"p1\">**</bpt>spinlock<ept id=\"p1\">**</ept> action, see <bpt id=\"p2\">[</bpt>Customizing Spinlock Parameters<ept id=\"p2\">](customizing-spinlock-parameters.md)</ept>."},{"content":"Example","pos":[2016,2023]},{"content":"The following command example shows how to start a trace with spinlock data.","pos":[2026,2102]},{"content":"Spinlock event data can also be collected using only the \"SPINLOCK\" option, as shown in the following command example.","pos":[2158,2276]},{"content":"However, if the \"PROC<ph id=\"ph1\">\\_</ph>THREAD+LOADER\" options are omitted, symbol information is not available for decoding.","pos":[2313,2421]},{"content":"For more information about symbols, see <bpt id=\"p1\">[</bpt>Symbol Support<ept id=\"p1\">](symbol-support.md)</ept>.","pos":[2422,2498]},{"content":"After event data has been collected into an ETL file, process the ETL file as shown in the following command example.","pos":[2500,2617]},{"content":"This produces a spinlock report.","pos":[2692,2724]},{"content":"For information about this report, see <bpt id=\"p1\">[</bpt>Evaluating Spinlock Data<ept id=\"p1\">](evaluating-spinlock-data.md)</ept>.","pos":[2725,2820]},{"content":"Related topics","pos":[2825,2839]},{"content":"Xperf Actions","pos":[2843,2856]}],"content":"---\ntitle: spinlock\ndescription: spinlock\nMSHAttr:\n- 'PreferredSiteName:MSDN'\n- 'PreferredLib:/library/windows/hardware'\nms.assetid: 5ca2ee5f-ad3f-42ec-91e4-a044ce982650\nms.prod: W10\nms.mktglfcycl: operate\nms.sitesec: msdn\n---\n\n# spinlock\n\n\nThis action produces a text file listing information related to spinlock activity.\n\n``` syntax\n-a spinlock [-summary] [-counts [n]]\n```\n\n## Options\n\n\n<a href=\"\" id=\"-summary\"></a>**-summary**  \nSummarizes spinlock event information in a tab-delimited format.\n\n<a href=\"\" id=\"-count-n-\"></a>**-count***\\[n\\]*  \nMaximum number of files to show.\n\n## Remarks\n\n\nXperf spinlock analysis is available for 64-bit architectures. Spinlock instrumentation is supported beginning with Windows 7, Windows Server 2008 R2, and newer versions of the operating system. Xperf supports normal spin locks and queued spin locks. For more information about spin locks, see [Spin Locks](http://go.microsoft.com/fwlink/p/?linkid=213937). To reduce overhead, ETW spinlock instrumentation is sample-based. The sampling frequency can be tuned with `-setspinlocksample`. For more information about starting spinlock sampling, see [start](start.md).\n\nTo perform meaningful analysis, familiarity with WPA symbols is recommended. For information on symbols, see [Symbol Support](symbol-support.md).\n\nIf your test scenario is already running, it is not necessary to stop the scenario to collect spinlock events. You can start spinlock event collection while the code of interest is being actively exercised. Nor is it necessary to suspend your scenario when spinlock event data has been collected.\n\n**Note**  \nLarge numbers of spinlock events may overload the trace buffers and cause events to be lost. A message will appear when merging and loading the trace if this happens. For more information about avoiding event loss, see [Avoid Lost Events](avoid-lost-events.md).\n\nFor more information about the **spinlock** action, see [Customizing Spinlock Parameters](customizing-spinlock-parameters.md).\n\n \n\n## Example\n\n\nThe following command example shows how to start a trace with spinlock data.\n\n``` syntax\nxperf -on PROC_THREAD+LOADER+SPINLOCK\n```\n\nSpinlock event data can also be collected using only the \"SPINLOCK\" option, as shown in the following command example.\n\n``` syntax\nxperf -on SPINLOCK\n```\n\nHowever, if the \"PROC\\_THREAD+LOADER\" options are omitted, symbol information is not available for decoding. For more information about symbols, see [Symbol Support](symbol-support.md).\n\nAfter event data has been collected into an ETL file, process the ETL file as shown in the following command example.\n\n``` syntax\nxperf -i example.etl -symbols -o example.txt -a spinlock\n```\n\nThis produces a spinlock report. For information about this report, see [Evaluating Spinlock Data](evaluating-spinlock-data.md).\n\n## Related topics\n\n\n[Xperf Actions](xperf-actions.md)\n\n \n\n \n\n\n\n\n\n\n\n"}