{"nodes":[{"content":"WlanMTERegisterCallbackHandler","pos":[34,64]},{"content":"WlanMTERegisterCallbackHandler","pos":[171,201]},{"content":"WlanMTERegisterCallbackHandler","pos":[209,239]},{"content":"Registers a handler that will be called whenever the driver invokes a callback for a manufacturing functionality event.","pos":[242,361]},{"pos":[441,447],"content":"Syntax"},{"pos":[703,713],"content":"Parameters"},{"content":"hAdapter","pos":[798,806]},{"content":"in<ph id=\"ph1\">\\]</ph> The handle to the Wi-Fi adapter, obtained by calling <bpt id=\"p1\">[</bpt>WlanMTEOpenHandle<ept id=\"p1\">](wlanmteopenhandle.md)</ept>.","pos":[812,912]},{"content":"Callback","pos":[996,1004]},{"content":"in<ph id=\"ph1\">\\]</ph> The handler function being registered by the application for manufacturing callbacks.","pos":[1010,1100]},{"pos":[1198,1210],"content":"Return Value"},{"content":"If the function succeeds, the return value is ERROR<ph id=\"ph1\">\\_</ph>SUCCESS.","pos":[1213,1274]},{"content":"If the function fails, the return value is one of the system error codes.","pos":[1276,1349]},{"content":"The following table lists the error codes that may be returned.","pos":[1350,1413]},{"content":"Error code","pos":[1531,1541]},{"content":"Description","pos":[1564,1575]},{"content":"ERROR_INVALID_PARAMETER","pos":[1641,1664]},{"content":"Returned if the adapter handle specified by the <ph id=\"ph1\">&lt;em&gt;</ph>hAdapter<ph id=\"ph2\">&lt;/em&gt;</ph> parameter is invalid or NULL.","pos":[1694,1789]},{"pos":[1908,1915],"content":"Remarks"},{"content":"The callback function has the following prototype:","pos":[1918,1968]},{"pos":[2281,2293],"content":"Requirements"},{"pos":[2296,2317],"content":"<bpt id=\"p1\">**</bpt>Header:<ept id=\"p1\">**</ept> wifimte.w"},{"pos":[2355,2369],"content":"Related topics"},{"content":"Wi-Fi manufacturing API","pos":[2373,2396]}],"content":"---\nauthor: kpacquer\nDescription: WlanMTERegisterCallbackHandler\nms.assetid: 7a61e9e2-fa0c-4c01-96c2-f3720aab7cde\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: WlanMTERegisterCallbackHandler\n---\n\n# WlanMTERegisterCallbackHandler\n\n\nRegisters a handler that will be called whenever the driver invokes a callback for a manufacturing functionality event.\n\n## <span id=\"Syntax\"></span><span id=\"syntax\"></span><span id=\"SYNTAX\"></span>Syntax\n\n\n``` syntax\nDWORD WlanMTERegisterCallbackHandler(\n    __in    HANDLE                          hAdapter,\n    __in    WLAN_MTE_NOTIFICATION_CALLBACK Callback\n);\n```\n\n## <span id=\"Parameters\"></span><span id=\"parameters\"></span><span id=\"PARAMETERS\"></span>Parameters\n\n\n<span id=\"hAdapter\"></span><span id=\"hadapter\"></span><span id=\"HADAPTER\"></span>*hAdapter*  \n\\[in\\] The handle to the Wi-Fi adapter, obtained by calling [WlanMTEOpenHandle](wlanmteopenhandle.md).\n\n<span id=\"Callback\"></span><span id=\"callback\"></span><span id=\"CALLBACK\"></span>*Callback*  \n\\[in\\] The handler function being registered by the application for manufacturing callbacks.\n\n## <span id=\"Return_Value\"></span><span id=\"return_value\"></span><span id=\"RETURN_VALUE\"></span>Return Value\n\n\nIf the function succeeds, the return value is ERROR\\_SUCCESS.\n\nIf the function fails, the return value is one of the system error codes. The following table lists the error codes that may be returned.\n\n<table>\n<colgroup>\n<col width=\"50%\" />\n<col width=\"50%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th align=\"left\">Error code</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td align=\"left\"><p>ERROR_INVALID_PARAMETER</p></td>\n<td align=\"left\"><p>Returned if the adapter handle specified by the <em>hAdapter</em> parameter is invalid or NULL.</p></td>\n</tr>\n</tbody>\n</table>\n\n \n\n## <span id=\"Remarks\"></span><span id=\"remarks\"></span><span id=\"REMARKS\"></span>Remarks\n\n\nThe callback function has the following prototype:\n\n``` syntax\ntypedef VOID (WINAPI *WLAN_MTE_NOTIFICATION_CALLBACK)(\n    __in    PDOT11_MANUFACTURING_CALLBACK_PARAMETERS    pMTECallback,\n    __in    PVOID                                       pvReserved\n    );\n```\n\n## <span id=\"Requirements\"></span><span id=\"requirements\"></span><span id=\"REQUIREMENTS\"></span>Requirements\n\n\n**Header:** wifimte.w\n\n## <span id=\"related_topics\"></span>Related topics\n\n\n[Wi-Fi manufacturing API](wi-fi-manufacturing-api.md)\n\n \n\n \n\n\n\n\n\n\n"}