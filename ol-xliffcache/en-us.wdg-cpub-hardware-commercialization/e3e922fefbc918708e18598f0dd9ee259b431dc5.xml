{"nodes":[{"content":"You can also specify custom USBFN settings in a manufacturing profile that are only used when the device is in manufacturing mode.","pos":[35,165]},{"content":"Create a custom manufacturing profile package with USBFN settings","pos":[273,338]},{"content":"Create a custom manufacturing profile package with USBFN settings","pos":[346,411]},{"content":"You can also specify custom USBFN settings in a manufacturing profile that are only used when the device is in manufacturing mode.","pos":[414,544]},{"content":"When the device is not in Manufacturing Mode, USBFN settings will still be read from the normal location.","pos":[546,651]},{"content":"When the device is in Manufacturing Mode and Manufacturing Mode-specific settings have been provided, the settings are from a different location.","pos":[652,797]},{"content":"If no settings have been provided in the active manufacturing profile, the settings will be read from the normal location.","pos":[798,920]},{"content":"This allows you to use different settings when the device is in manufacturing mode versus when it is not.","pos":[921,1026]},{"content":"Here's an example of a manufacturing profile package that specifies USBFN settings:","pos":[1028,1111]},{"content":"You can then create the package by using pkggen.exe (included with the Windows Driver Kit):","pos":[5561,5652]}],"content":"---\nauthor: kpacquer\nDescription: 'You can also specify custom USBFN settings in a manufacturing profile that are only used when the device is in manufacturing mode.'\nms.assetid: 0b95ffc6-f3c4-4b22-a48f-513466c36eac\nMSHAttr: 'PreferredLib:/library/windows/hardware'\ntitle: Create a custom manufacturing profile package with USBFN settings\n---\n\n# Create a custom manufacturing profile package with USBFN settings\n\n\nYou can also specify custom USBFN settings in a manufacturing profile that are only used when the device is in manufacturing mode.\n\nWhen the device is not in Manufacturing Mode, USBFN settings will still be read from the normal location. When the device is in Manufacturing Mode and Manufacturing Mode-specific settings have been provided, the settings are from a different location. If no settings have been provided in the active manufacturing profile, the settings will be read from the normal location. This allows you to use different settings when the device is in manufacturing mode versus when it is not.\n\nHere's an example of a manufacturing profile package that specifies USBFN settings:\n\n``` syntax\n<?xml version='1.0' encoding='utf-8'?>\n<Package\n    xmlns=\"urn:Microsoft.WindowsPhone/PackageSchema.v8.00\"\n    Owner=\"Microsoft\"\n    Component=\"UsbFn\"\n    SubComponent=\"Settings\"\n    ReleaseType=\"Production\"\n    OwnerType=\"Microsoft\"\n    >\n  <Macros>\n    <Macro\n        Id=\"MfgMode\"\n        Value=\"$(hklm.control)\\ManufacturingMode\"\n        />\n    <Macro\n        Id=\"MfgModeProfile\"\n        Value=\"Default\"\n        />\n    <Macro\n        Id=\"MfgModeUsbFn\"\n        Value=\"$(MfgMode)\\$(MfgModeProfile)\\USBFN\"\n       />\n  </Macros>\n  <Components>\n    <OSComponent>\n      <RegKeys>\n        <RegKey\n            KeyName=\"$(MfgModeUsbFn)\\Default\"\n            >\n          <RegValue\n              Name=\"bcdDevice\"\n              Type=\"REG_DWORD\"\n              Value=\"00000001\"\n              />\n          <RegValue\n              Name=\"bDeviceClass\"\n              Type=\"REG_DWORD\"\n              Value=\"00000000\"\n              />\n          <RegValue\n              Name=\"bDeviceProtocol\"\n              Type=\"REG_DWORD\"\n              Value=\"00000000\"\n              />\n          <RegValue\n              Name=\"bDeviceSubClass\"\n              Type=\"REG_DWORD\"\n              Value=\"00000000\"\n              />\n          <RegValue\n              Name=\"idProduct\"\n              Type=\"REG_DWORD\"\n              Value=\"0000F0CA\"\n              />\n          <RegValue\n              Name=\"idVendor\"\n              Type=\"REG_DWORD\"\n              Value=\"0000045E\"\n              />\n          <RegValue\n              Name=\"iManufacturer\"\n              Type=\"REG_DWORD\"\n              Value=\"00000001\"\n              />\n          <RegValue\n              Name=\"iProduct\"\n              Type=\"REG_DWORD\"\n              Value=\"00000002\"\n              />\n          <RegValue\n              Name=\"iSerialNumber\"\n              Type=\"REG_DWORD\"\n              Value=\"00000003\"\n              />\n          <RegValue\n              Name=\"ManufacturerString\"\n              Type=\"REG_SZ\"\n              Value=\"Microsoft\"\n              />\n          <RegValue\n              Name=\"ProductString\"\n              Type=\"REG_SZ\"\n              Value=\"Windows Phone 8.1\"\n              />\n        </RegKey>\n        <RegKey\n            KeyName=\"$(MfgModeUsbFn)\\Configurations\\Default\"\n            >\n          <RegValue\n              Name=\"InterfaceList\"\n              Type=\"REG_MULTI_SZ\"\n              Value=\"IpOverUsb\"\n              />\n          <RegValue\n              Name=\"MSOSCompatIdDescriptor\"\n              Type=\"REG_BINARY\"\n              Value=\"28,00,00,00,00,01,04,00,01,00,00,00,00,00,00,00,00,01,4d,54,50,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00\"\n              />\n        </RegKey>\n        <RegKey\n            KeyName=\"$(MfgModeUsbFn)\\Interfaces\\IpOverUsb\"\n            >\n          <RegValue\n              Name=\"InterfaceDescriptor\"\n              Type=\"REG_BINARY\"\n              Value=\"09,04,00,00,02,FF,FF,FF,00,07,05,81,02,00,02,00,07,05,02,02,00,02,00\"\n              />\n          <RegValue\n              Name=\"InterfaceGuid\"\n              Type=\"REG_SZ\"\n              Value=\"{30613563-7df3-4afb-80e0-e8c427c7e9bf}\"\n              />\n          <RegValue\n              Name=\"MSOSExtendedPropertyDescriptor\"\n              Type=\"REG_BINARY\"\n              Value=\"74,01,00,00,00,01,05,00,05,00,84,00,00,00,01,00,00,00,28,00,44,00,65,00,76,00,69,00,63,00,65,00,49,00,6E,00,74,00,65,00,72,00,66,00,61,00,63,00,65,00,47,00,55,00,49,00,44,00,00,00,4E,00,00,00,7B,00,32,00,36,00,66,00,65,00,64,00,63,00,34,00,65,00,2D,00,36,00,61,00,63,00,33,00,2D,00,34,00,32,00,34,00,31,00,2D,00,39,00,65,00,34,00,64,00,2D,00,65,00,33,00,64,00,34,00,62,00,32,00,63,00,35,00,63,00,35,00,33,00,34,00,7D,00,00,00,36,00,00,00,04,00,00,00,24,00,44,00,65,00,76,00,69,00,63,00,65,00,49,00,64,00,6C,00,65,00,45,00,6E,00,61,00,62,00,6C,00,65,00,64,00,00,00,04,00,00,00,01,00,00,00,34,00,00,00,04,00,00,00,22,00,44,00,65,00,66,00,61,00,75,00,6C,00,74,00,49,00,64,00,6C,00,65,00,53,00,74,00,61,00,74,00,65,00,00,00,04,00,00,00,01,00,00,00,38,00,00,00,04,00,00,00,26,00,44,00,65,00,66,00,61,00,75,00,6C,00,74,00,49,00,64,00,6C,00,65,00,54,00,69,00,6D,00,65,00,6F,00,75,00,74,00,00,00,04,00,00,00,10,27,00,00,44,00,00,00,04,00,00,00,32,00,55,00,73,00,65,00,72,00,53,00,65,00,74,00,44,00,65,00,76,00,69,00,63,00,65,00,49,00,64,00,6C,00,65,00,45,00,6E,00,61,00,62,00,6C,00,65,00,64,00,00,00,04,00,00,00,01,00,00,00\"\n              />\n        </RegKey>\n      </RegKeys>\n    </OSComponent>\n  </Components>\n</Package>\n```\n\nYou can then create the package by using pkggen.exe (included with the Windows Driver Kit):\n\n``` syntax\npkggen.exe exampleUSBFN.pkg.xml /config:pkggen.cfg.xml\n```\n\n \n\n \n\n\n\n\n\n"}