<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\manufacture\mobile\using-a-host-computer-to-reboot-a-phone-to-flashing-mode-and-get-phone-version-information.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">cd4087090d1de76b535e9c35957e7f9a769bab41</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Using a host PC to reboot a device to flashing mode and get version information</source>
          <target>Using a host PC to reboot a device to flashing mode and get version information</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Using a host PC to reboot a device to flashing mode and get version information</source>
          <target>Using a host PC to reboot a device to flashing mode and get version information</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Using a host PC to reboot a device to flashing mode and get version information</source>
          <target>Using a host PC to reboot a device to flashing mode and get version information</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>When a Windows 10 Mobile device is connected to a host PC via a USB cable, you can perform the following tasks in an application that is running on the host PC.</source>
          <target>When a Windows 10 Mobile device is connected to a host PC via a USB cable, you can perform the following tasks in an application that is running on the host PC.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>These tasks are useful in certain manufacturing or customer care scenarios.</source>
          <target>These tasks are useful in certain manufacturing or customer care scenarios.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Reboot the device into flashing mode.</source>
          <target>Reboot the device into flashing mode.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Retrieve version information from the device.</source>
          <target>Retrieve version information from the device.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>The host app uses the Windows Portable Devices API to accomplish these tasks.</source>
          <target>The host app uses the Windows Portable Devices API to accomplish these tasks.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Understanding the Windows Portable Devices API</source>
          <target>Understanding the Windows Portable Devices API</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>The Windows Portable Devices (WPD) API is a COM-based API that enables computers to communicate with attached devices.</source>
          <target>The Windows Portable Devices (WPD) API is a COM-based API that enables computers to communicate with attached devices.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>To learn more about this API, refer to the following resources:</source>
          <target>To learn more about this API, refer to the following resources:</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388998.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Portable Devices</pc>: This section of the MSDN library provides architecture guidance and reference documentation for the Windows Portable Devices API.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Portable Devices</pc>: This section of the MSDN library provides architecture guidance and reference documentation for the Windows Portable Devices API.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://code.msdn.microsoft.com/windowsdesktop/Portable-Devices-COM-API-fd4a5f7d)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices COM API Sample</pc>: This sample demonstrates how to use the Windows Portable Devices API to perform a variety of tasks, including enumerating connected devices, reading properties of content on a connected device, and sending MTP commands to a device.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices COM API Sample</pc>: This sample demonstrates how to use the Windows Portable Devices API to perform a variety of tasks, including enumerating connected devices, reading properties of content on a connected device, and sending MTP commands to a device.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://code.msdn.microsoft.com/windowsdesktop/Portable-Devices-COM-API-b1e2db21)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices Services COM API Sample</pc>: This sample demonstrates how to use the Windows Portable Devices API to perform a variety of operations on device services, including enumerating services and service content.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices Services COM API Sample</pc>: This sample demonstrates how to use the Windows Portable Devices API to perform a variety of operations on device services, including enumerating services and service content.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Discovering Windows 10 Mobile devices that are connected to the host computer</source>
          <target>Discovering Windows 10 Mobile devices that are connected to the host computer</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Before the host app can reboot a device to flashing mode or retrieve version information from the device, the host apps must discover all devices that are connected to the computer.</source>
          <target>Before the host app can reboot a device to flashing mode or retrieve version information from the device, the host apps must discover all devices that are connected to the computer.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388688.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd388693.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceManager</pc> object and use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceManager::GetDevices</pc> function to get the collection of device IDs for all connected devices.</source>
          <target>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceManager</pc> object and use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceManager::GetDevices</pc> function to get the collection of device IDs for all connected devices.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319361.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd375688.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](http://msdn.microsoft.com/library/windows/desktop/dd388540.aspx)</data>
          <data id="id7">\_</data>
          <data id="id8">\_</data>
          <data id="id9">\_</data>
          <data id="id10">\_</data>
        </originalData>
        <segment state="initial">
          <source>Enumerate through the collection of device IDs to determine which connected device is a Windows 10 Mobile For each device ID, create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDevice</pc> object and then use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDevice::Content</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceContent::Properties</pc> functions to retrieve the value of the WPD<ph dataRef="id7" id="ph1" />DEVICE<ph dataRef="id8" id="ph2" />MODEL<ph dataRef="id9" id="ph3" />UNIQUE<ph dataRef="id10" id="ph4" />ID device property for the device.</source>
          <target>Enumerate through the collection of device IDs to determine which connected device is a Windows 10 Mobile For each device ID, create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDevice</pc> object and then use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDevice::Content</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceContent::Properties</pc> functions to retrieve the value of the WPD<ph dataRef="id7" id="ph1" />DEVICE<ph dataRef="id8" id="ph2" />MODEL<ph dataRef="id9" id="ph3" />UNIQUE<ph dataRef="id10" id="ph4" />ID device property for the device.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
        </originalData>
        <segment state="initial">
          <source>If the device is a Windows 10 Mobile device, the value of the WPD<ph dataRef="id1" id="ph1" />DEVICE<ph dataRef="id2" id="ph2" />MODEL<ph dataRef="id3" id="ph3" />UNIQUE<ph dataRef="id4" id="ph4" />ID property is a GUID with the following value.</source>
          <target>If the device is a Windows 10 Mobile device, the value of the WPD<ph dataRef="id1" id="ph1" />DEVICE<ph dataRef="id2" id="ph2" />MODEL<ph dataRef="id3" id="ph3" />UNIQUE<ph dataRef="id4" id="ph4" />ID property is a GUID with the following value.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Examples and additional resources</source>
          <target>Examples and additional resources</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://code.msdn.microsoft.com/windowsdesktop/Portable-Devices-COM-API-fd4a5f7d)</data>
        </originalData>
        <segment state="initial">
          <source>The following code examples in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices COM API Sample</pc> demonstrate the following related tasks:</source>
          <target>The following code examples in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices COM API Sample</pc> demonstrate the following related tasks:</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388688.aspx)</data>
          <data id="id3">`ChooseDevice`</data>
        </originalData>
        <segment state="initial">
          <source>Creating an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceManager</pc> object: see the <ph dataRef="id3" id="ph1" /> function in DeviceEnumeration.cpp.</source>
          <target>Creating an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceManager</pc> object: see the <ph dataRef="id3" id="ph1" /> function in DeviceEnumeration.cpp.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">`EnumerateAllDevices`</data>
        </originalData>
        <segment state="initial">
          <source>Getting the device IDs of all connected devices: see the <ph dataRef="id1" id="ph1" /> function in DeviceEnumeration.cpp.</source>
          <target>Getting the device IDs of all connected devices: see the <ph dataRef="id1" id="ph1" /> function in DeviceEnumeration.cpp.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">`ReadContentProperties`</data>
        </originalData>
        <segment state="initial">
          <source>Retrieving device properties: see the <ph dataRef="id1" id="ph1" /> function in ContentProperties.cpp.</source>
          <target>Retrieving device properties: see the <ph dataRef="id1" id="ph1" /> function in ContentProperties.cpp.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>For more info about enumerating devices and retrieving device properties, see the following articles:</source>
          <target>For more info about enumerating devices and retrieving device properties, see the following articles:</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Enumerating Devices</source>
          <target>Enumerating Devices</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Device Properties</source>
          <target>Device Properties</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Retrieving Properties for a Single Object</source>
          <target>Retrieving Properties for a Single Object</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Rebooting a Windows 10 Mobile device into flashing mode</source>
          <target>Rebooting a Windows 10 Mobile device into flashing mode</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319361.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>After you have an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDevice</pc> object that represents a Windows 10 Mobile device, you can send an MTP command to reboot the phone into flashing mode.</source>
          <target>After you have an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDevice</pc> object that represents a Windows 10 Mobile device, you can send an MTP command to reboot the phone into flashing mode.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319461.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues</pc> object and configure it to set up the MTP command parameters:</source>
          <target>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues</pc> object and configure it to set up the MTP command parameters:</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375671.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::SetGuidValue</pc>.</source>
          <target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::SetGuidValue</pc>.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">\_</data>
          <data id="id8">\_</data>
          <data id="id9">\_</data>
          <data id="id10">\_</data>
          <data id="id11">\_</data>
          <data id="id12">\_</data>
          <data id="id13">\_</data>
          <data id="id14">\_</data>
          <data id="id15">*</data>
          <data id="id16">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />COMMON<ph dataRef="id3" id="ph3" />COMMAND<ph dataRef="id4" id="ph4" />CATEGORY to the <pc dataRefEnd="id6" dataRefStart="id5" id="p1">key</pc> parameter and pass WPD<ph dataRef="id7" id="ph5" />COMMAND<ph dataRef="id8" id="ph6" />MTP<ph dataRef="id9" id="ph7" />EXT<ph dataRef="id10" id="ph8" />EXECUTE<ph dataRef="id11" id="ph9" />COMMAND<ph dataRef="id12" id="ph10" />WITHOUT<ph dataRef="id13" id="ph11" />DATA<ph dataRef="id14" id="ph12" />PHASE.fmtid to the <pc dataRefEnd="id16" dataRefStart="id15" id="p2">Value</pc> parameter.</source>
          <target>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />COMMON<ph dataRef="id3" id="ph3" />COMMAND<ph dataRef="id4" id="ph4" />CATEGORY to the <pc dataRefEnd="id6" dataRefStart="id5" id="p1">key</pc> parameter and pass WPD<ph dataRef="id7" id="ph5" />COMMAND<ph dataRef="id8" id="ph6" />MTP<ph dataRef="id9" id="ph7" />EXT<ph dataRef="id10" id="ph8" />EXECUTE<ph dataRef="id11" id="ph9" />COMMAND<ph dataRef="id12" id="ph10" />WITHOUT<ph dataRef="id13" id="ph11" />DATA<ph dataRef="id14" id="ph12" />PHASE.fmtid to the <pc dataRefEnd="id16" dataRefStart="id15" id="p2">Value</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375681.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::SetUnsignedIntegerValue</pc>.</source>
          <target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::SetUnsignedIntegerValue</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">\_</data>
          <data id="id8">\_</data>
          <data id="id9">\_</data>
          <data id="id10">\_</data>
          <data id="id11">\_</data>
          <data id="id12">\_</data>
          <data id="id13">\_</data>
          <data id="id14">\_</data>
          <data id="id15">*</data>
          <data id="id16">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />COMMON<ph dataRef="id3" id="ph3" />COMMAND<ph dataRef="id4" id="ph4" />ID to the <pc dataRefEnd="id6" dataRefStart="id5" id="p1">key</pc> parameter and pass WPD<ph dataRef="id7" id="ph5" />COMMAND<ph dataRef="id8" id="ph6" />MTP<ph dataRef="id9" id="ph7" />EXT<ph dataRef="id10" id="ph8" />EXECUTE<ph dataRef="id11" id="ph9" />COMMAND<ph dataRef="id12" id="ph10" />WITHOUT<ph dataRef="id13" id="ph11" />DATA<ph dataRef="id14" id="ph12" />PHASE.pid to the <pc dataRefEnd="id16" dataRefStart="id15" id="p2">Value</pc> parameter.</source>
          <target>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />COMMON<ph dataRef="id3" id="ph3" />COMMAND<ph dataRef="id4" id="ph4" />ID to the <pc dataRefEnd="id6" dataRefStart="id5" id="p1">key</pc> parameter and pass WPD<ph dataRef="id7" id="ph5" />COMMAND<ph dataRef="id8" id="ph6" />MTP<ph dataRef="id9" id="ph7" />EXT<ph dataRef="id10" id="ph8" />EXECUTE<ph dataRef="id11" id="ph9" />COMMAND<ph dataRef="id12" id="ph10" />WITHOUT<ph dataRef="id13" id="ph11" />DATA<ph dataRef="id14" id="ph12" />PHASE.pid to the <pc dataRefEnd="id16" dataRefStart="id15" id="p2">Value</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375681.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::SetUnsignedIntegerValue</pc> again.</source>
          <target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::SetUnsignedIntegerValue</pc> again.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
          <data id="id5">\_</data>
          <data id="id6">*</data>
          <data id="id7">*</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">*</data>
          <data id="id11">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />MTP<ph dataRef="id3" id="ph3" />EXT<ph dataRef="id4" id="ph4" />OPERATION<ph dataRef="id5" id="ph5" />CODE to the <pc dataRefEnd="id7" dataRefStart="id6" id="p1">key</pc> parameter and pass the value <pc dataRefEnd="id9" dataRefStart="id8" id="p2">0x9401</pc> to the <pc dataRefEnd="id11" dataRefStart="id10" id="p3">Value</pc> parameter.</source>
          <target>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />MTP<ph dataRef="id3" id="ph3" />EXT<ph dataRef="id4" id="ph4" />OPERATION<ph dataRef="id5" id="ph5" />CODE to the <pc dataRefEnd="id7" dataRefStart="id6" id="p1">key</pc> parameter and pass the value <pc dataRefEnd="id9" dataRefStart="id8" id="p2">0x9401</pc> to the <pc dataRefEnd="id11" dataRefStart="id10" id="p3">Value</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>This value represents the MTP command that reboots the phone into flashing mode.</source>
          <target>This value represents the MTP command that reboots the phone into flashing mode.</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/ff597589)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDevicePropVariantCollection</pc></pc> object.</source>
          <target>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDevicePropVariantCollection</pc></pc> object.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/ff597632)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceValues::SetIPortableDevicePropVariantCollectionValue</pc></pc>.</source>
          <target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1"><pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceValues::SetIPortableDevicePropVariantCollectionValue</pc></pc>.</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\_</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
          <data id="id5">\_</data>
          <data id="id6">*</data>
          <data id="id7">*</data>
          <data id="id8">[</data>
          <data id="id9">](https://msdn.microsoft.com/library/windows/hardware/ff597589)</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">*</data>
          <data id="id13">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />MTP<ph dataRef="id3" id="ph3" />EXT<ph dataRef="id4" id="ph4" />OPERATION<ph dataRef="id5" id="ph5" />PARAMS to the <pc dataRefEnd="id7" dataRefStart="id6" id="p1">key</pc> parameter and pass the <pc dataRefEnd="id9" dataRefStart="id8" id="p2"><pc dataRefEnd="id11" dataRefStart="id10" id="p3">IPortableDevicePropVariantCollection</pc></pc> object to the <pc dataRefEnd="id13" dataRefStart="id12" id="p4">pValue</pc> parameter.</source>
          <target>Pass WPD<ph dataRef="id1" id="ph1" />PROPERTY<ph dataRef="id2" id="ph2" />MTP<ph dataRef="id3" id="ph3" />EXT<ph dataRef="id4" id="ph4" />OPERATION<ph dataRef="id5" id="ph5" />PARAMS to the <pc dataRefEnd="id7" dataRefStart="id6" id="p1">key</pc> parameter and pass the <pc dataRefEnd="id9" dataRefStart="id8" id="p2"><pc dataRefEnd="id11" dataRefStart="id10" id="p3">IPortableDevicePropVariantCollection</pc></pc> object to the <pc dataRefEnd="id13" dataRefStart="id12" id="p4">pValue</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375691.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDevice::SendCommand</pc> to send the MTP command.</source>
          <target>Call <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDevice::SendCommand</pc> to send the MTP command.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319461.aspx)</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass the initialized <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues</pc> object to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">pParameters</pc> parameter.</source>
          <target>Pass the initialized <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues</pc> object to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">pParameters</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>This operation sends the MTP command to reboot the phone into flashing mode.</source>
          <target>This operation sends the MTP command to reboot the phone into flashing mode.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Examples and additional resources</source>
          <target>Examples and additional resources</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>The following code examples demonstrate how to set up MTP command parameters and send an MTP command:</source>
          <target>The following code examples demonstrate how to set up MTP command parameters and send an MTP command:</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/ff384842.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Issuing the GetNumObjects Command</pc>: This topic in the MSDN library demonstrates how to send the standard GetNumObjects MTP command.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Issuing the GetNumObjects Command</pc>: This topic in the MSDN library demonstrates how to send the standard GetNumObjects MTP command.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">`SendhintsCommand`</data>
          <data id="id2">[</data>
          <data id="id3">](http://code.msdn.microsoft.com/windowsdesktop/Portable-Devices-COM-API-fd4a5f7d)</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" /> function in ContentEnumeration.cpp in the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Portable Devices COM API Sample</pc>.</source>
          <target>The <ph dataRef="id1" id="ph1" /> function in ContentEnumeration.cpp in the <pc dataRefEnd="id3" dataRefStart="id2" id="p1">Portable Devices COM API Sample</pc>.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/ff384848.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about sending MTP commands using the Windows Portable Devices API, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supporting MTP Extensions</pc>.</source>
          <target>For more information about sending MTP commands using the Windows Portable Devices API, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Supporting MTP Extensions</pc>.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Retrieving version information from a Windows 10 Mobile device</source>
          <target>Retrieving version information from a Windows 10 Mobile device</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>After you determine the device ID for a Windows 10 Mobile device that is connected to the host computer, you can use a Windows 10 Mobile-specific device service named MtpDuDeviceService to retrieve version information from the device.</source>
          <target>After you determine the device ID for a Windows 10 Mobile device that is connected to the host computer, you can use a Windows 10 Mobile-specific device service named MtpDuDeviceService to retrieve version information from the device.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>If the device is protected with a PIN, the MtpDuDeviceService is only available if the PIN has been entered and the device is unlocked.</source>
          <target>If the device is protected with a PIN, the MtpDuDeviceService is only available if the PIN has been entered and the device is unlocked.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>Open the MtpDuDeviceService</source>
          <target>Open the MtpDuDeviceService</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319445.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>First, enumerate through the device services to open an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService</pc> object for the MtpDuDeviceService.</source>
          <target>First, enumerate through the device services to open an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService</pc> object for the MtpDuDeviceService.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Get an array of IDs for all device services supported by the device.</source>
          <target>Get an array of IDs for all device services supported by the device.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388688.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd319402.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](http://msdn.microsoft.com/library/windows/desktop/dd319408.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>To do this, cast the existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceManager</pc> object to an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceServiceManager</pc> and call the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceServiceManager::GetDeviceServices</pc> method.</source>
          <target>To do this, cast the existing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceManager</pc> object to an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceServiceManager</pc> and call the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceServiceManager::GetDeviceServices</pc> method.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd319319.aspx)</data>
          <data id="id5">\_</data>
          <data id="id6">\_</data>
          <data id="id7">\_</data>
          <data id="id8">*</data>
          <data id="id9">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass the device ID for the Windows 10 Mobile device to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszPnPDeviceID</pc> parameter and the value <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GUID<ph dataRef="id5" id="ph1" />DEVINTERFACE<ph dataRef="id6" id="ph2" />WPD<ph dataRef="id7" id="ph3" />SERVICE</pc> to the <pc dataRefEnd="id9" dataRefStart="id8" id="p3">guidServiceCategory</pc> parameter.</source>
          <target>Pass the device ID for the Windows 10 Mobile device to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszPnPDeviceID</pc> parameter and the value <pc dataRefEnd="id4" dataRefStart="id3" id="p2">GUID<ph dataRef="id5" id="ph1" />DEVINTERFACE<ph dataRef="id6" id="ph2" />WPD<ph dataRef="id7" id="ph3" />SERVICE</pc> to the <pc dataRefEnd="id9" dataRefStart="id8" id="p3">guidServiceCategory</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>The array of service IDs is returned in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pServices</pc> parameter.</source>
          <target>The array of service IDs is returned in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pServices</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Iterate through the array of service IDs, and perform the following tasks for each service ID:</source>
          <target>Iterate through the array of service IDs, and perform the following tasks for each service ID:</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319445.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd319453.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService</pc> object and call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceService::Open</pc> function to open the service.</source>
          <target>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService</pc> object and call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceService::Open</pc> function to open the service.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass the current service ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszPnPServiceID</pc> parameter.</source>
          <target>Pass the current service ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszPnPServiceID</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319449.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Get the service object ID by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService::GetServiceObjectID</pc> function.</source>
          <target>Get the service object ID by calling the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService::GetServiceObjectID</pc> function.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>You need the service object ID to access properties of the service.</source>
          <target>You need the service object ID to access properties of the service.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319445.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd388540.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](http://msdn.microsoft.com/library/windows/desktop/dd388696.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService::Content</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceContent::Properties</pc> functions to retrieve the collection of properties for the service (an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceProperties</pc> object).</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService::Content</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceContent::Properties</pc> functions to retrieve the collection of properties for the service (an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceProperties</pc> object).</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388548.aspx)</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
        </originalData>
        <segment state="initial">
          <source>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceKeyCollection</pc> object and add the WPD-defined WPD<ph dataRef="id3" id="ph1" />OBJECT<ph dataRef="id4" id="ph2" />NAME property key to this collection.</source>
          <target>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceKeyCollection</pc> object and add the WPD-defined WPD<ph dataRef="id3" id="ph1" />OBJECT<ph dataRef="id4" id="ph2" />NAME property key to this collection.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>This property key indicates that you are retrieving the display name for the service.</source>
          <target>This property key indicates that you are retrieving the display name for the service.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388714.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd319461.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceProperties::GetValues</pc> function to retrieve an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceValues</pc> object that contains the property values.</source>
          <target>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceProperties::GetValues</pc> function to retrieve an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceValues</pc> object that contains the property values.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd388548.aspx)</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass the service object ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszObjectID</pc> parameter and the initialized <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceKeyCollection</pc> object to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">pKeys</pc> parameter.</source>
          <target>Pass the service object ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszObjectID</pc> parameter and the initialized <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceKeyCollection</pc> object to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">pKeys</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375661.aspx)</data>
          <data id="id3">\_</data>
          <data id="id4">\_</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::GetStringValue</pc> function, and pass the WPD-defined WPD<ph dataRef="id3" id="ph1" />OBJECT<ph dataRef="id4" id="ph2" />NAME property key to the <pc dataRefEnd="id6" dataRefStart="id5" id="p2">key</pc> parameter.</source>
          <target>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::GetStringValue</pc> function, and pass the WPD-defined WPD<ph dataRef="id3" id="ph1" />OBJECT<ph dataRef="id4" id="ph2" />NAME property key to the <pc dataRefEnd="id6" dataRefStart="id5" id="p2">key</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375661.aspx)</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::GetStringValue</pc> function returns the string <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MtpDuDeviceService</pc>, you have found the service object you need to retrieve version information from the phone.</source>
          <target>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::GetStringValue</pc> function returns the string <pc dataRefEnd="id4" dataRefStart="id3" id="p2">MtpDuDeviceService</pc>, you have found the service object you need to retrieve version information from the phone.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Exit the loop and proceed to the next section.</source>
          <target>Exit the loop and proceed to the next section.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd319441.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](http://msdn.microsoft.com/library/windows/desktop/dd319408.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>If the name of the service is not <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MtpDuDeviceService</pc>, call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceService::Close</pc> function, iterate to the next service ID returned by <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceServiceManager::GetDeviceServices</pc>, and return to step 2.</source>
          <target>If the name of the service is not <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MtpDuDeviceService</pc>, call the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceService::Close</pc> function, iterate to the next service ID returned by <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceServiceManager::GetDeviceServices</pc>, and return to step 2.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>Retrieve version information from the device</source>
          <target>Retrieve version information from the device</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319445.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>After you have opened an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService</pc> object for the MtpDuDeviceService, you can use this object to retrieve version information from the device</source>
          <target>After you have opened an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService</pc> object for the MtpDuDeviceService, you can use this object to retrieve version information from the device</target>
        </segment>
      </unit>
      <unit id="176">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd319445.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd388540.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](http://msdn.microsoft.com/library/windows/desktop/dd388696.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService::Content</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceContent::Properties</pc> functions to retrieve the collection of properties for the service (an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceProperties</pc> object).</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceService::Content</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceContent::Properties</pc> functions to retrieve the collection of properties for the service (an <pc dataRefEnd="id6" dataRefStart="id5" id="p3">IPortableDeviceProperties</pc> object).</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388548.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/bb773381.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceKeyCollection</pc> object and add a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PROPERTYKEY</pc> value to this collection that specifies the version data you want to retrieve from the device.</source>
          <target>Create an <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceKeyCollection</pc> object and add a <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PROPERTYKEY</pc> value to this collection that specifies the version data you want to retrieve from the device.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/bb773381.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PROPERTYKEY</pc> value must have the following structure:</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PROPERTYKEY</pc> value must have the following structure:</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">fmtid</pc> field must have the following GUID value:</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">fmtid</pc> field must have the following GUID value:</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pid</pc> field must have one of the values shown in the table below</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pid</pc> field must have one of the values shown in the table below</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Device data to retrieve</source>
          <target>Device data to retrieve</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>pid value</source>
          <target>pid value</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>The build string for the image on the device</source>
          <target>The build string for the image on the device</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Use the data returned by the following pid values to construct the build string:</source>
          <target>Use the data returned by the following pid values to construct the build string:</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>4 (the name of the internal Microsoft branch the OS was built from)</source>
          <target>4 (the name of the internal Microsoft branch the OS was built from)</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>6 (the Windows build number)</source>
          <target>6 (the Windows build number)</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>7 (the Windows 10 Mobile build number)</source>
          <target>7 (the Windows 10 Mobile build number)</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>8 (the time stamp for the build)</source>
          <target>8 (the time stamp for the build)</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>An example build string is WPMAIN.9600.12186.20130906-1624.</source>
          <target>An example build string is WPMAIN.9600.12186.20130906-1624.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>The OS version</source>
          <target>The OS version</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>12</source>
          <target>12</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>The OEM device name</source>
          <target>The OEM device name</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>15</source>
          <target>15</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>The firmware version</source>
          <target>The firmware version</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>16</source>
          <target>16</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>The SoC version</source>
          <target>The SoC version</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>17</source>
          <target>17</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>The radio software version</source>
          <target>The radio software version</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>18</source>
          <target>18</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>The radio hardware version</source>
          <target>The radio hardware version</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>19</source>
          <target>19</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>The bootloader version</source>
          <target>The bootloader version</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>20</source>
          <target>20</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>The platform ID (from SMBIOS).</source>
          <target>The platform ID (from SMBIOS).</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>29</source>
          <target>29</target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd388714.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd319461.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceProperties::GetValues</pc> function to retrieve an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceValues</pc> object that contains the requested version information.</source>
          <target>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceProperties::GetValues</pc> function to retrieve an <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceValues</pc> object that contains the requested version information.</target>
        </segment>
      </unit>
      <unit id="207">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd388548.aspx)</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source>Pass the service object ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszObjectID</pc> parameter and the initialized <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceKeyCollection</pc> object to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">pKeys</pc> parameter.</source>
          <target>Pass the service object ID to the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pszObjectID</pc> parameter and the initialized <pc dataRefEnd="id4" dataRefStart="id3" id="p2">IPortableDeviceKeyCollection</pc> object to the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">pKeys</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375661.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::GetStringValue</pc> function.</source>
          <target>Call the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IPortableDeviceValues::GetStringValue</pc> function.</target>
        </segment>
      </unit>
      <unit id="209">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/bb773381.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">key</pc> parameter, pass the same <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PROPERTYKEY</pc> value that you used earlier.</source>
          <target>For the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">key</pc> parameter, pass the same <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PROPERTYKEY</pc> value that you used earlier.</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>This function returns the requested version information in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pValue</pc> parameter.</source>
          <target>This function returns the requested version information in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pValue</pc> parameter.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>Examples and additional resources</source>
          <target>Examples and additional resources</target>
        </segment>
      </unit>
      <unit id="212">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://code.msdn.microsoft.com/windowsdesktop/Portable-Devices-COM-API-b1e2db21)</data>
        </originalData>
        <segment state="initial">
          <source>The following code examples in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices Services COM API Sample</pc> demonstrate the following related tasks:</source>
          <target>The following code examples in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Portable Devices Services COM API Sample</pc> demonstrate the following related tasks:</target>
        </segment>
      </unit>
      <unit id="213">
        <originalData>
          <data id="id1">`EnumerateContactsServices`</data>
        </originalData>
        <segment state="initial">
          <source>Enumerating through device services: see the <ph dataRef="id1" id="ph1" /> function in ServiceEnumeration.cpp.</source>
          <target>Enumerating through device services: see the <ph dataRef="id1" id="ph1" /> function in ServiceEnumeration.cpp.</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">`ReadContentProperties`</data>
        </originalData>
        <segment state="initial">
          <source>Reading properties of a service: see the <ph dataRef="id1" id="ph1" /> function in ContentProperties.cpp.</source>
          <target>Reading properties of a service: see the <ph dataRef="id1" id="ph1" /> function in ContentProperties.cpp.</target>
        </segment>
      </unit>
      <unit id="215">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/dd375706.aspx)</data>
          <data id="id3">[</data>
          <data id="id4">](http://msdn.microsoft.com/library/windows/desktop/dd743198.aspx)</data>
          <data id="id5">[</data>
          <data id="id6">](http://msdn.microsoft.com/library/windows/desktop/dd375722.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about working with device services, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Opening a service</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accessing service object properties</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Retrieving Object Properities</pc>.</source>
          <target>For more info about working with device services, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Opening a service</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Accessing service object properties</pc> and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Retrieving Object Properities</pc>.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>