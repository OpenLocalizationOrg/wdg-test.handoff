{"nodes":[{"content":"Maintaining App-V 5.1","pos":[11,32]},{"content":"Maintaining App-V 5.1","pos":[46,67]},{"content":"Maintaining App-V 5.1","pos":[242,263]},{"content":"After you have completed all the necessary planning, and then deployment of App-V 5.1, you can use the following information to maintain the App-V 5.1 infrastructure.","pos":[266,432]},{"pos":[484,509],"content":"Move the App-V 5.1 Server"},{"content":"The App-V 5.1 server connects to the App-V 5.1 database.","pos":[512,568]},{"content":"Therefore you can install the management component to any computer on the network and then connect it to the App-V 5.1 database.","pos":[569,697]},{"content":"How to Move the App-V Server to Another Computer","pos":[700,748]},{"pos":[891,951],"content":"Determine if an App-V 5.1 Application is Running Virtualized"},{"content":"Independent software vendors (ISV) who want to determine if an application is running virtualized with App-V 5.1 or above, should open a named object called <bpt id=\"p1\">**</bpt>AppVVirtual-<ph id=\"ph1\">&amp;lt;</ph>PID<ph id=\"ph2\">&amp;gt;</ph><ept id=\"p1\">**</ept> in the default namespace.","pos":[954,1164]},{"content":"For example, Windows API <bpt id=\"p1\">**</bpt>GetCurrentProcessId()<ept id=\"p1\">**</ept> can be used to obtain the current process's ID, for example 4052, and then if a named Event object called <bpt id=\"p2\">**</bpt>AppVVirtual-4052<ept id=\"p2\">**</ept> can be successfully opened using <bpt id=\"p3\">**</bpt>OpenEvent()<ept id=\"p3\">**</ept> in the default namespace for read access, then the application is virtual.","pos":[1165,1466]},{"content":"If the <bpt id=\"p1\">**</bpt>OpenEvent()<ept id=\"p1\">**</ept> call fails, the application is not virtual.","pos":[1467,1533]},{"content":"Additionally, ISV’s who want to explicitly virtualize or not virtualize calls on specific API’s with App-V 5.1 and above, can use the <bpt id=\"p1\">**</bpt>VirtualizeCurrentThread()<ept id=\"p1\">**</ept> and <bpt id=\"p2\">**</bpt>CurrentThreadIsVirtualized()<ept id=\"p2\">**</ept> functions implemented in the AppEntSubsystems32.dll module.","pos":[1535,1795]},{"content":"These provide a way of hinting at a downstream component that the call should or should not be virtualized.","pos":[1796,1903]},{"content":"Got a suggestion for App-V?","pos":[1908,1935]},{"content":"Add or vote on suggestions <bpt id=\"p1\">[</bpt>here<ept id=\"p1\">](http://appv.uservoice.com/forums/280448-microsoft-application-virtualization)</ept>.","pos":[1938,2050]},{"content":"For App-V issues, use the <bpt id=\"p1\">[</bpt>App-V TechNet Forum<ept id=\"p1\">](https://social.technet.microsoft.com/Forums/home?forum=mdopappv)</ept>.","pos":[2051,2164]},{"content":"Other resources for maintaining App-V 5.1","pos":[2169,2210]},{"content":"Operations for App-V 5.1","pos":[2214,2238]}],"content":"---\ntitle: Maintaining App-V 5.1\ndescription: Maintaining App-V 5.1\nauthor: jamiejdt\nms.assetid: 5abd17d3-e8af-4261-b914-741ae116b0e7\nms.pagetype: mdop, appcompat, virtualization\nms.mktglfcycl: deploy\nms.sitesec: library\nms.prod: w10\n---\n\n\n# Maintaining App-V 5.1\n\n\nAfter you have completed all the necessary planning, and then deployment of App-V 5.1, you can use the following information to maintain the App-V 5.1 infrastructure.\n\n## <a href=\"\" id=\"move-the-app-v-5-1-server-\"></a>Move the App-V 5.1 Server\n\n\nThe App-V 5.1 server connects to the App-V 5.1 database. Therefore you can install the management component to any computer on the network and then connect it to the App-V 5.1 database.\n\n[How to Move the App-V Server to Another Computer](how-to-move-the-app-v-server-to-another-computer51.md)\n\n## <a href=\"\" id=\"determine-if-an-app-v-5-1-application-is-running-virtualized-\"></a>Determine if an App-V 5.1 Application is Running Virtualized\n\n\nIndependent software vendors (ISV) who want to determine if an application is running virtualized with App-V 5.1 or above, should open a named object called **AppVVirtual-&lt;PID&gt;** in the default namespace. For example, Windows API **GetCurrentProcessId()** can be used to obtain the current process's ID, for example 4052, and then if a named Event object called **AppVVirtual-4052** can be successfully opened using **OpenEvent()** in the default namespace for read access, then the application is virtual. If the **OpenEvent()** call fails, the application is not virtual.\n\nAdditionally, ISV’s who want to explicitly virtualize or not virtualize calls on specific API’s with App-V 5.1 and above, can use the **VirtualizeCurrentThread()** and **CurrentThreadIsVirtualized()** functions implemented in the AppEntSubsystems32.dll module. These provide a way of hinting at a downstream component that the call should or should not be virtualized.\n\n## Got a suggestion for App-V?\n\n\nAdd or vote on suggestions [here](http://appv.uservoice.com/forums/280448-microsoft-application-virtualization). For App-V issues, use the [App-V TechNet Forum](https://social.technet.microsoft.com/Forums/home?forum=mdopappv).\n\n## Other resources for maintaining App-V 5.1\n\n\n[Operations for App-V 5.1](operations-for-app-v-51.md)\n\n \n\n \n\n\n\n\n\n"}