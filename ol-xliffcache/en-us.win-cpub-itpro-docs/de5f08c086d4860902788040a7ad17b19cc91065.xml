{"nodes":[{"content":"Add unsigned app to code integrity policy (Windows 10)","pos":[11,65]},{"content":"When you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device.","pos":[79,223]},{"content":"Add unsigned app to code integrity policy","pos":[380,421]},{"content":"Applies to","pos":[426,436]},{"content":"Windows 10","pos":[444,454]},{"content":"Windows 10 Mobile","pos":[459,476]},{"content":"When you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device.","pos":[478,622]},{"content":"Then, create the catalog files for your unsigned app, sign the catalog files, and then merge the default policy that includes your signing certificate with existing code integrity policies.","pos":[623,812]},{"content":"In this section","pos":[817,832]},{"content":"Create a code integrity policy based on a reference device","pos":[840,898]},{"content":"Create catalog files for your unsigned app","pos":[924,966]},{"content":"Catalog signing with Device Guard signing portal","pos":[996,1044]},{"pos":[1125,1183],"content":"Create a code integrity policy based on a reference device"},{"content":"To add an unsigned app to a code integrity policy, your code integrity policy must be created from golden image machine.","pos":[1186,1306]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Create a Device Guard code integrity policy based on a reference device<ept id=\"p1\">](https://technet.microsoft.com/library/mt243445.aspx)</ept>.","pos":[1307,1460]},{"pos":[1506,1548],"content":"Create catalog files for your unsigned app"},{"content":"Creating catalog files starts the process for adding an unsigned app to a code integrity policy.","pos":[1551,1647]},{"content":"Before you get started, be sure to review these best practices and requirements:","pos":[1649,1729]},{"content":"Requirements","pos":[1733,1745]},{"content":"You'll use Package Inspector during this process.","pos":[1753,1802]},{"content":"Only perform this process with a code integrity policy running in audit mode.","pos":[1808,1885]},{"content":"You should not perform this process on a system running an enforced Device Guard policy.","pos":[1886,1974]},{"content":"Best practices","pos":[1978,1992]},{"content":"<bpt id=\"p1\">**</bpt>Naming convention<ept id=\"p1\">**</ept> -- Using a naming convention makes it easier to find deployed catalog files.","pos":[2000,2098]},{"content":"We'll use <ph id=\"ph1\">\\*</ph>-Contoso.cat as the naming convention in this topic.","pos":[2099,2163]},{"content":"For more information, see the section Inventorying catalog files by using Configuration Manager in the <bpt id=\"p1\">[</bpt>Device Guard deployment guide<ept id=\"p1\">](https://technet.microsoft.com/library/mt463091.aspx)</ept>.","pos":[2164,2352]},{"content":"<bpt id=\"p1\">**</bpt>Where to deploy code integrity policy<ept id=\"p1\">**</ept> -- The <bpt id=\"p2\">[</bpt>code integrity policy that you created<ept id=\"p2\">](#create-ci-policy)</ept> should be deployed to the system on which you are running Package Inspector.","pos":[2358,2543]},{"content":"This will ensure that the code integrity policy binaries are trusted.","pos":[2544,2613]},{"content":"Copy the commands for each step into an elevated Windows PowerShell session.","pos":[2615,2691]},{"content":"You'll use Package Inspector to find and trust all binaries in the app.","pos":[2692,2763]},{"content":"To create catalog files for your unsigned app","pos":[2767,2812]},{"content":"Start Package Inspector to scan the C drive.","pos":[2820,2864]},{"content":"Copy the installation media to the C drive.","pos":[2907,2950]},{"content":"Copying the installation media to the C drive ensures that Package Inspector finds and catalogs the installer.","pos":[2956,3066]},{"content":"If you skip this step, the code integrity policy may trust the application to run, but not trust it to be installed.","pos":[3067,3183]},{"content":"Install and start the app.","pos":[3189,3215]},{"content":"All binaries that are used while Package Inspector is running will be part of the catalog files.","pos":[3221,3317]},{"content":"After the installation, start the app and make sure that any product updates are installed and any downloadable content was found during the scan.","pos":[3318,3464]},{"content":"Then, close and restart the app to make sure that the scan found all binaries.","pos":[3465,3543]},{"content":"Stop the scan and create definition and catalog files.","pos":[3549,3603]},{"content":"After app install is complete, stop the Package Inspector scan and create catalog and definition files on your desktop.","pos":[3609,3728]},{"content":"The Package Inspector scan catalogs the hash values for each binary file that is finds.","pos":[3955,4042]},{"content":"If the app that was scanned are updated, do this process again to trust the new binaries hash values.","pos":[4043,4144]},{"content":"After you're done, the files are saved to your desktop.","pos":[4146,4201]},{"content":"You still need to sign the catalog file so that it will be trusted within the code integrity policy.","pos":[4202,4302]},{"pos":[4363,4411],"content":"Catalog signing with Device Guard signing portal"},{"content":"To sign catalog files with the Device Guard signing portal, you need to be signed up with the Windows Store for Business.","pos":[4414,4535]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Sign up for the Windows Store for Business<ept id=\"p1\">](sign-up-windows-store-for-business.md)</ept>.","pos":[4536,4646]},{"content":"Catalog signing is a vital step to adding your unsigned apps to your code integrity policy.","pos":[4648,4739]},{"content":"To sign a catalog file with Device Guard signing portal","pos":[4743,4798]},{"content":"Sign in to the Store for Business","pos":[4806,4839]},{"pos":[4845,4906],"content":"Click <bpt id=\"p1\">**</bpt>Settings<ept id=\"p1\">**</ept>, and then choose <bpt id=\"p2\">**</bpt>Device Guard signing<ept id=\"p2\">**</ept>."},{"content":"Click <bpt id=\"p1\">**</bpt>Upload<ept id=\"p1\">**</ept> to upload your unsigned catalog files.","pos":[4912,4967]},{"content":"These are the catalog files you created earlier in <bpt id=\"p1\">[</bpt>Create catalog files for your unsigned app<ept id=\"p1\">](#create-catalog-files)</ept>.","pos":[4968,5087]},{"pos":[5093,5164],"content":"After the files are uploaded, click <bpt id=\"p1\">**</bpt>Sign<ept id=\"p1\">**</ept> to sign the catalog files."},{"content":"Click Download to download each item:","pos":[5170,5207]},{"content":"signed catalog file","pos":[5217,5236]},{"content":"default policy","pos":[5246,5260]},{"content":"root certificate for your organization","pos":[5270,5308]},{"content":"When you use the Device Guard signing portal to sign a catalog file, the signing certificate is added to the default policy.","pos":[5314,5438]},{"content":"When you download the signed catalog file, you should also download the default policy and merge this code integrity policy with your existing code integrity policies to protect machines running the catalog file.","pos":[5439,5651]},{"content":"You need to do this step to trust and run your catalog files.","pos":[5652,5713]},{"content":"For more information, see the Merging code integrity policies in the <bpt id=\"p1\">[</bpt>Device Guard deployment guide<ept id=\"p1\">](https://technet.microsoft.com/library/mt463091.aspx)</ept>.","pos":[5714,5868]},{"pos":[5874,6038],"content":"Open the root certificate that you downloaded, and follow the steps in <bpt id=\"p1\">**</bpt>Certificate Import wizard<ept id=\"p1\">**</ept> to install the certificate in your machine's certificate store."},{"content":"Deploy signed catalogs to your managed devices.","pos":[6044,6091]},{"content":"For more information, see Deploy catalog files with Group Policy, or Deploy catalog files with System Center Configuration Manager in the <bpt id=\"p1\">[</bpt>Device Guard deployment guide<ept id=\"p1\">](https://technet.microsoft.com/library/mt463091.aspx)</ept>.","pos":[6092,6315]}],"content":"---\ntitle: Add unsigned app to code integrity policy (Windows 10)\ndescription: When you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device.\nms.assetid: 580E18B1-2FFD-4EE4-8CC5-6F375BE224EA\nms.prod: w10\nms.mktglfcycl: manage\nms.sitesec: library\nms.pagetype: store, security\nauthor: TrudyHa\n---\n\n# Add unsigned app to code integrity policy\n\n\n**Applies to**\n\n-   Windows 10\n-   Windows 10 Mobile\n\nWhen you want to add an unsigned app to a code integrity policy, you need to start with a code integrity policy created from a reference device. Then, create the catalog files for your unsigned app, sign the catalog files, and then merge the default policy that includes your signing certificate with existing code integrity policies.\n\n## In this section\n\n\n-   [Create a code integrity policy based on a reference device](#create-ci-policy)\n-   [Create catalog files for your unsigned app](#create-catalog-files)\n-   [Catalog signing with Device Guard signing portal](#catalog-signing-device-guard-portal)\n\n## <a href=\"\" id=\"create-ci-policy\"></a>Create a code integrity policy based on a reference device\n\n\nTo add an unsigned app to a code integrity policy, your code integrity policy must be created from golden image machine. For more information, see [Create a Device Guard code integrity policy based on a reference device](https://technet.microsoft.com/library/mt243445.aspx).\n\n## <a href=\"\" id=\"create-catalog-files\"></a>Create catalog files for your unsigned app\n\n\nCreating catalog files starts the process for adding an unsigned app to a code integrity policy.\n\nBefore you get started, be sure to review these best practices and requirements:\n\n**Requirements**\n\n-   You'll use Package Inspector during this process.\n\n-   Only perform this process with a code integrity policy running in audit mode. You should not perform this process on a system running an enforced Device Guard policy.\n\n**Best practices**\n\n-   **Naming convention** -- Using a naming convention makes it easier to find deployed catalog files. We'll use \\*-Contoso.cat as the naming convention in this topic. For more information, see the section Inventorying catalog files by using Configuration Manager in the [Device Guard deployment guide](https://technet.microsoft.com/library/mt463091.aspx).\n\n-   **Where to deploy code integrity policy** -- The [code integrity policy that you created](#create-ci-policy) should be deployed to the system on which you are running Package Inspector. This will ensure that the code integrity policy binaries are trusted.\n\nCopy the commands for each step into an elevated Windows PowerShell session. You'll use Package Inspector to find and trust all binaries in the app.\n\n**To create catalog files for your unsigned app**\n\n1.  Start Package Inspector to scan the C drive.\n\n    `PackageInspector.exe Start C:`\n\n2.  Copy the installation media to the C drive.\n\n    Copying the installation media to the C drive ensures that Package Inspector finds and catalogs the installer. If you skip this step, the code integrity policy may trust the application to run, but not trust it to be installed.\n\n3.  Install and start the app.\n\n    All binaries that are used while Package Inspector is running will be part of the catalog files. After the installation, start the app and make sure that any product updates are installed and any downloadable content was found during the scan. Then, close and restart the app to make sure that the scan found all binaries.\n\n4.  Stop the scan and create definition and catalog files.\n\n    After app install is complete, stop the Package Inspector scan and create catalog and definition files on your desktop.\n\n    `$ExamplePath=$env:userprofile+\"\\Desktop\"`\n\n    `$CatFileName=$ExamplePath+\"\\LOBApp-Contoso.cat\"`\n\n    `$CatDefName=$ExamplePath+\"\\LOBApp.cdf\"`\n\n    `PackageInspector.exe Stop C: -Name $CatFileName -cdfpath $CatDefName`\n\nThe Package Inspector scan catalogs the hash values for each binary file that is finds. If the app that was scanned are updated, do this process again to trust the new binaries hash values.\n\nAfter you're done, the files are saved to your desktop. You still need to sign the catalog file so that it will be trusted within the code integrity policy.\n\n## <a href=\"\" id=\"catalog-signing-device-guard-portal\"></a>Catalog signing with Device Guard signing portal\n\n\nTo sign catalog files with the Device Guard signing portal, you need to be signed up with the Windows Store for Business. For more information, see [Sign up for the Windows Store for Business](sign-up-windows-store-for-business.md).\n\nCatalog signing is a vital step to adding your unsigned apps to your code integrity policy.\n\n**To sign a catalog file with Device Guard signing portal**\n\n1.  Sign in to the Store for Business\n\n2.  Click **Settings**, and then choose **Device Guard signing**.\n\n3.  Click **Upload** to upload your unsigned catalog files. These are the catalog files you created earlier in [Create catalog files for your unsigned app](#create-catalog-files).\n\n4.  After the files are uploaded, click **Sign** to sign the catalog files.\n\n5.  Click Download to download each item:\n\n    -   signed catalog file\n\n    -   default policy\n\n    -   root certificate for your organization\n\n    When you use the Device Guard signing portal to sign a catalog file, the signing certificate is added to the default policy. When you download the signed catalog file, you should also download the default policy and merge this code integrity policy with your existing code integrity policies to protect machines running the catalog file. You need to do this step to trust and run your catalog files. For more information, see the Merging code integrity policies in the [Device Guard deployment guide](https://technet.microsoft.com/library/mt463091.aspx).\n\n6.  Open the root certificate that you downloaded, and follow the steps in **Certificate Import wizard** to install the certificate in your machine's certificate store.\n\n7.  Deploy signed catalogs to your managed devices. For more information, see Deploy catalog files with Group Policy, or Deploy catalog files with System Center Configuration Manager in the [Device Guard deployment guide](https://technet.microsoft.com/library/mt463091.aspx).\n\n \n\n \n\n\n\n\n\n"}