<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\test-an-applocker-policy-by-using-test-applockerpolicy.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">96ab6b83a4df0a908c946d45582bfa7ea3a4135a</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Test an AppLocker policy by using Test-AppLockerPolicy (Windows 10)</source>
          <target>Test an AppLocker policy by using Test-AppLockerPolicy (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This topic for IT professionals describes the steps to test an AppLocker policy prior to importing it into a Group Policy Object (GPO) or another computer.</source>
          <target>This topic for IT professionals describes the steps to test an AppLocker policy prior to importing it into a Group Policy Object (GPO) or another computer.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Test an AppLocker policy by using Test-AppLockerPolicy</source>
          <target>Test an AppLocker policy by using Test-AppLockerPolicy</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This topic for IT professionals describes the steps to test an AppLocker policy prior to importing it into a Group Policy Object (GPO) or another computer.</source>
          <target>This topic for IT professionals describes the steps to test an AppLocker policy prior to importing it into a Group Policy Object (GPO) or another computer.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Test-AppLockerPolicy</pc> Windows PowerShell cmdlet can be used to determine whether any of the rules in your rule collections will be blocked on your reference computer or the computer on which you maintain policies.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Test-AppLockerPolicy</pc> Windows PowerShell cmdlet can be used to determine whether any of the rules in your rule collections will be blocked on your reference computer or the computer on which you maintain policies.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Perform the following steps on any computer where the AppLocker policies are applied.</source>
          <target>Perform the following steps on any computer where the AppLocker policies are applied.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Any user account can be used to complete this procedure.</source>
          <target>Any user account can be used to complete this procedure.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>To test an AppLocker policy by using Test-AppLockerPolicy</source>
          <target>To test an AppLocker policy by using Test-AppLockerPolicy</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Export the effective AppLocker policy.</source>
          <target>Export the effective AppLocker policy.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>To do this, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppLockerPolicy</pc> Windows PowerShell cmdlet.</source>
          <target>To do this, you must use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppLockerPolicy</pc> Windows PowerShell cmdlet.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Open a Windows PowerShell command prompt window as an administrator.</source>
          <target>Open a Windows PowerShell command prompt window as an administrator.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppLockerPolicy</pc> cmdlet to export the effective AppLocker policy to an XML file:</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-AppLockerPolicy</pc> cmdlet to export the effective AppLocker policy to an XML file:</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-ChildItem</pc> cmdlet to specify the directory that you want to test, specify the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Test-AppLockerPolicy</pc> cmdlet with the XML file from the previous step to test the policy, and use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Export-CSV</pc> cmdlet to export the results to a file to be analyzed:</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-ChildItem</pc> cmdlet to specify the directory that you want to test, specify the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Test-AppLockerPolicy</pc> cmdlet with the XML file from the previous step to test the policy, and use the <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Export-CSV</pc> cmdlet to export the results to a file to be analyzed:</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The following shows example input for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Test-AppLockerPolicy</pc>:</source>
          <target>The following shows example input for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Test-AppLockerPolicy</pc>:</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>In the example, the effective AppLocker policy is exported to the file C:<ph dataRef="id1" id="ph1" />Effective.xml.</source>
          <target>In the example, the effective AppLocker policy is exported to the file C:<ph dataRef="id1" id="ph1" />Effective.xml.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-ChildItem</pc> cmdlet is used to recursively gather path names for the .exe files in C:<ph dataRef="id3" id="ph1" />Program Files<ph dataRef="id4" id="ph2" />Microsoft Office<ph dataRef="id5" id="ph3" />.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get-ChildItem</pc> cmdlet is used to recursively gather path names for the .exe files in C:<ph dataRef="id3" id="ph1" />Program Files<ph dataRef="id4" id="ph2" />Microsoft Office<ph dataRef="id5" id="ph3" />.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>The XMLPolicy parameter specifies that the C:<ph dataRef="id1" id="ph1" />Effective.xml file is an XML AppLocker policy file.</source>
          <target>The XMLPolicy parameter specifies that the C:<ph dataRef="id1" id="ph1" />Effective.xml file is an XML AppLocker policy file.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>By specifying the User parameter, you can test the rules for specific users, and the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Export-CSV</pc> cmdlet allows the results to be exported to a comma-separated file.</source>
          <target>By specifying the User parameter, you can test the rules for specific users, and the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Export-CSV</pc> cmdlet allows the results to be exported to a comma-separated file.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">`-FilterDenied,DeniedByDefault`</data>
        </originalData>
        <segment state="initial">
          <source>In the example, <ph dataRef="id1" id="ph1" /> displays only those files that will be blocked for the user under the policy.</source>
          <target>In the example, <ph dataRef="id1" id="ph1" /> displays only those files that will be blocked for the user under the policy.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>