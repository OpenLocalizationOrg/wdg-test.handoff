<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">browsers\internet-explorer\ie11-ieak\proxy-auto-config-examples.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">eaf3188bf6e3c4d87938c52eb1c8d0a7287a0a6a</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Learn about how to use a proxy auto-configuration (.pac) file to specify an automatic proxy URL.</source>
          <target>Learn about how to use a proxy auto-configuration (.pac) file to specify an automatic proxy URL.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Use proxy auto-configuration (.pac) files with IEAK 11 (Internet Explorer Administration Kit 11 for IT Pros)</source>
          <target>Use proxy auto-configuration (.pac) files with IEAK 11 (Internet Explorer Administration Kit 11 for IT Pros)</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Use proxy auto-configuration (.pac) files with IEAK 11</source>
          <target>Use proxy auto-configuration (.pac) files with IEAK 11</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>These are various ways you can use a proxy auto-configuration (.pac) file to specify an automatic proxy URL.</source>
          <target>These are various ways you can use a proxy auto-configuration (.pac) file to specify an automatic proxy URL.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>We've included some examples here to help guide you, but you'll need to change the proxy names, port numbers, and IP addresses to match your organization's info.</source>
          <target>We've included some examples here to help guide you, but you'll need to change the proxy names, port numbers, and IP addresses to match your organization's info.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Included examples:</source>
          <target>Included examples:</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Example 1: Connect directly if the host is local</source>
          <target>Example 1: Connect directly if the host is local</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Example 2: Connect directly if the host is inside the firewall</source>
          <target>Example 2: Connect directly if the host is inside the firewall</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Example 3: Connect directly if the host name is resolvable</source>
          <target>Example 3: Connect directly if the host name is resolvable</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Example 4: Connect directly if the host is in specified subnet</source>
          <target>Example 4: Connect directly if the host is in specified subnet</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Example 5: Determine the connection type based on the host domain</source>
          <target>Example 5: Determine the connection type based on the host domain</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Example 6: Determine the connection type based on the protocol</source>
          <target>Example 6: Determine the connection type based on the protocol</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Example 7: Determine the proxy server based on the host name matching the IP address</source>
          <target>Example 7: Determine the proxy server based on the host name matching the IP address</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Example 8: Connect using a proxy server if the host IP address matches the specified IP address</source>
          <target>Example 8: Connect using a proxy server if the host IP address matches the specified IP address</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Example 9: Connect using a proxy server if there are periods in the host name</source>
          <target>Example 9: Connect using a proxy server if there are periods in the host name</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Example 10: Connect using a proxy server based on specific days of the week</source>
          <target>Example 10: Connect using a proxy server based on specific days of the week</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Example 1: Connect directly if the host is local</source>
          <target>Example 1: Connect directly if the host is local</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>In this example, if the host is local, it can connect directly.</source>
          <target>In this example, if the host is local, it can connect directly.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>However, if the server isn't local, it must connect through a proxy server.</source>
          <target>However, if the server isn't local, it must connect through a proxy server.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">`isPlainHostName`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically, the <ph dataRef="id1" id="ph1" /> function looks to see if there are any periods (.) in the host name.</source>
          <target>Specifically, the <ph dataRef="id1" id="ph1" /> function looks to see if there are any periods (.) in the host name.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>If the function finds periods, it means the host isn’t local and it returns false.</source>
          <target>If the function finds periods, it means the host isn’t local and it returns false.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Otherwise, the function returns true.</source>
          <target>Otherwise, the function returns true.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Example 2: Connect directly if the host is inside the firewall</source>
          <target>Example 2: Connect directly if the host is inside the firewall</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>In this example, if the host is inside the firewall, it can connect directly.</source>
          <target>In this example, if the host is inside the firewall, it can connect directly.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>However, if the server is outside the firewall, it must connect through a proxy server.</source>
          <target>However, if the server is outside the firewall, it must connect through a proxy server.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">`localHostOrDomainIs`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically, the <ph dataRef="id1" id="ph1" /> function only runs for URLs in the local domain.</source>
          <target>Specifically, the <ph dataRef="id1" id="ph1" /> function only runs for URLs in the local domain.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">`dnsDomainIs`</data>
        </originalData>
        <segment state="initial">
          <source>If the host domain name matches the provided domain information, the <ph dataRef="id1" id="ph1" /> function returns true.</source>
          <target>If the host domain name matches the provided domain information, the <ph dataRef="id1" id="ph1" /> function returns true.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Example 3: Connect directly if the host name is resolvable</source>
          <target>Example 3: Connect directly if the host name is resolvable</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>In this example, if the host name can be resolved, it can connect directly.</source>
          <target>In this example, if the host name can be resolved, it can connect directly.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>However, if the name can’t be resolved, the server must connect through a proxy server.</source>
          <target>However, if the name can’t be resolved, the server must connect through a proxy server.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Specifically, this function requests the DNS server to resolve the host name it's passed.</source>
          <target>Specifically, this function requests the DNS server to resolve the host name it's passed.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>If the name can be resolved, a direct connection is made.</source>
          <target>If the name can be resolved, a direct connection is made.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>If it can't, the connection is made using a proxy.</source>
          <target>If it can't, the connection is made using a proxy.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>This is particularly useful when an internal DNS server is used to resolve all internal host names.</source>
          <target>This is particularly useful when an internal DNS server is used to resolve all internal host names.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Important</source>
          <target>Important</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">`isResolvable`</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" /> function queries a Domain Name System (DNS) server.</source>
          <target>The <ph dataRef="id1" id="ph1" /> function queries a Domain Name System (DNS) server.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</source>
          <target>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">`window.open(...)`</data>
          <data id="id2">`alert(...)`</data>
          <data id="id3">`password(...)`</data>
        </originalData>
        <segment state="initial">
          <source>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</source>
          <target>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Example 4: Connect directly if the host is in specified subnet</source>
          <target>Example 4: Connect directly if the host is in specified subnet</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>In this example, if the host is in a specified subnet, it can connect directly.</source>
          <target>In this example, if the host is in a specified subnet, it can connect directly.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>However, if the server is outside of the specified subnet, it must connect through a proxy server.</source>
          <target>However, if the server is outside of the specified subnet, it must connect through a proxy server.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">`isInNet`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically, the <ph dataRef="id1" id="ph1" /> (host, pattern, mask) function returns true if the host IP address matches the specified pattern.</source>
          <target>Specifically, the <ph dataRef="id1" id="ph1" /> (host, pattern, mask) function returns true if the host IP address matches the specified pattern.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>The mask indicates which part of the IP address to match (255=match, 0=ignore).</source>
          <target>The mask indicates which part of the IP address to match (255=match, 0=ignore).</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Important</source>
          <target>Important</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">`isInNet`</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" /> function queries a DNS server.</source>
          <target>The <ph dataRef="id1" id="ph1" /> function queries a DNS server.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</source>
          <target>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">`window.open(...)`</data>
          <data id="id2">`alert(...)`</data>
          <data id="id3">`password(...)`</data>
        </originalData>
        <segment state="initial">
          <source>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</source>
          <target>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Example 5: Determine the connection type based on the host domain</source>
          <target>Example 5: Determine the connection type based on the host domain</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>In this example, if the host is local, the server can connect directly.</source>
          <target>In this example, if the host is local, the server can connect directly.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>However, if the host isn’t local, this function determines which proxy to use based on the host domain.</source>
          <target>However, if the host isn’t local, this function determines which proxy to use based on the host domain.</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">`shExpMatch(str, shexp)`</data>
          <data id="id2">`str`</data>
          <data id="id3">`shexp`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically, the <ph dataRef="id1" id="ph1" /> function returns true if <ph dataRef="id2" id="ph2" /> matches the <ph dataRef="id3" id="ph3" /> using shell expression patterns.</source>
          <target>Specifically, the <ph dataRef="id1" id="ph1" /> function returns true if <ph dataRef="id2" id="ph2" /> matches the <ph dataRef="id3" id="ph3" /> using shell expression patterns.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>This is particularly useful when the host domain name is one of the criteria for proxy selection.</source>
          <target>This is particularly useful when the host domain name is one of the criteria for proxy selection.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Example 6: Determine the connection type based on the protocol</source>
          <target>Example 6: Determine the connection type based on the protocol</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>In this example, the in-use protocol is extracted from the server and used to make a proxy selection.</source>
          <target>In this example, the in-use protocol is extracted from the server and used to make a proxy selection.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>If no protocol match occurs, the server is directly connected.</source>
          <target>If no protocol match occurs, the server is directly connected.</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">`substring`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically the <ph dataRef="id1" id="ph1" /> function extracts the specified number of characters from a string.</source>
          <target>Specifically the <ph dataRef="id1" id="ph1" /> function extracts the specified number of characters from a string.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>This is particularly useful when protocol is one of the criteria for proxy selection.</source>
          <target>This is particularly useful when protocol is one of the criteria for proxy selection.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Example 7: Determine the proxy server based on the host name matching the IP address</source>
          <target>Example 7: Determine the proxy server based on the host name matching the IP address</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>In this example, the proxy server is selected by translating the host name into an IP address and then comparing the address to a specified string.</source>
          <target>In this example, the proxy server is selected by translating the host name into an IP address and then comparing the address to a specified string.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Important</source>
          <target>Important</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">`dnsResolve`</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" /> function queries a DNS server.</source>
          <target>The <ph dataRef="id1" id="ph1" /> function queries a DNS server.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</source>
          <target>References to Object Model objects, properties, or methods cause the proxy auto-configuration file to fail silently.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">`window.open(...)`</data>
          <data id="id2">`alert(...)`</data>
          <data id="id3">`password(...)`</data>
        </originalData>
        <segment state="initial">
          <source>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</source>
          <target>For example, the references <ph dataRef="id1" id="ph1" />, <ph dataRef="id2" id="ph2" />, and <ph dataRef="id3" id="ph3" /> all cause the proxy auto-configuration file to fail.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Example 8: Connect using a proxy server if the host IP address matches the specified IP address</source>
          <target>Example 8: Connect using a proxy server if the host IP address matches the specified IP address</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>In this example, the proxy server is selected by explicitly getting the IP address and then comparing it to a specified string.</source>
          <target>In this example, the proxy server is selected by explicitly getting the IP address and then comparing it to a specified string.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>If no protocol match occurs, the server makes a direct connection.</source>
          <target>If no protocol match occurs, the server makes a direct connection.</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">`myIpAddress`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically, the <ph dataRef="id1" id="ph1" /> function returns the IP address (in integer-period format) for the host that the browser is running on.</source>
          <target>Specifically, the <ph dataRef="id1" id="ph1" /> function returns the IP address (in integer-period format) for the host that the browser is running on.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Example 9: Connect using a proxy server if there are periods in the host name</source>
          <target>Example 9: Connect using a proxy server if there are periods in the host name</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>In this example, the function looks to see if there are periods (.) in the host name.</source>
          <target>In this example, the function looks to see if there are periods (.) in the host name.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>If there are any periods, the connection occurs using a proxy server.</source>
          <target>If there are any periods, the connection occurs using a proxy server.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>If there are no periods, a direct connection occurs.</source>
          <target>If there are no periods, a direct connection occurs.</target>
        </segment>
      </unit>
      <unit id="172">
        <originalData>
          <data id="id1">`dnsDomainLevels`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically, the <ph dataRef="id1" id="ph1" /> function returns an integer equal to the number of periods in the host name.</source>
          <target>Specifically, the <ph dataRef="id1" id="ph1" /> function returns an integer equal to the number of periods in the host name.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>This is another way to determine connection types based on host name characteristics.</source>
          <target>This is another way to determine connection types based on host name characteristics.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Example 10: Connect using a proxy server based on specific days of the week</source>
          <target>Example 10: Connect using a proxy server based on specific days of the week</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>In this example, the function decides whether to connect to a proxy server, based on the days of the week.</source>
          <target>In this example, the function decides whether to connect to a proxy server, based on the days of the week.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Connecting on days that don’t fall between the specified date parameters let the server make a direct connection.</source>
          <target>Connecting on days that don’t fall between the specified date parameters let the server make a direct connection.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">`weekdayRange(day1 [,day2] [,GMT] )`</data>
          <data id="id2">`day1`</data>
          <data id="id3">`day2`</data>
          <data id="id4">`GMT`</data>
        </originalData>
        <segment state="initial">
          <source>Specifically the <ph dataRef="id1" id="ph1" /> function returns whether the current system time falls within the range specified by the parameters <ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />, and <ph dataRef="id4" id="ph4" />.</source>
          <target>Specifically the <ph dataRef="id1" id="ph1" /> function returns whether the current system time falls within the range specified by the parameters <ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />, and <ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Only the first parameter is required.</source>
          <target>Only the first parameter is required.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>The GMT parameter presumes time values are in Greenwich Mean Time rather than the local time zone.</source>
          <target>The GMT parameter presumes time values are in Greenwich Mean Time rather than the local time zone.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>This function is particularly useful for situations where you want to use a proxy server for heavy traffic times, but allow a direct connection when traffic is light.</source>
          <target>This function is particularly useful for situations where you want to use a proxy server for heavy traffic times, but allow a direct connection when traffic is light.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>