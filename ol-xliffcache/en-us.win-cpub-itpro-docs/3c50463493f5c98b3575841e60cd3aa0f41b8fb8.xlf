<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">mdop\appv-v5\how-to-install-the-app-v-databases-and-convert-the-associated-security-identifiers--by-using-powershell.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">3c50463493f5c98b3575841e60cd3aa0f41b8fb8</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>How to Install the App-V Databases and Convert the Associated Security Identifiers by Using PowerShell</source>
          <target>How to Install the App-V Databases and Convert the Associated Security Identifiers by Using PowerShell</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>How to Install the App-V Databases and Convert the Associated Security Identifiers by Using PowerShell</source>
          <target>How to Install the App-V Databases and Convert the Associated Security Identifiers by Using PowerShell</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>How to Install the App-V Databases and Convert the Associated Security Identifiers by Using PowerShell</source>
          <target>How to Install the App-V Databases and Convert the Associated Security Identifiers by Using PowerShell</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Use the following PowerShell procedure to convert any number of Active Directory Domain Services (AD DS) user or machine accounts into formatted Security Identifiers (SIDs) both in the standard format and in the hexadecimal format used by Microsoft SQL Server when running SQL scripts.</source>
          <target>Use the following PowerShell procedure to convert any number of Active Directory Domain Services (AD DS) user or machine accounts into formatted Security Identifiers (SIDs) both in the standard format and in the hexadecimal format used by Microsoft SQL Server when running SQL scripts.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Before attempting this procedure, you should read and understand the information and examples displayed in the following list:</source>
          <target>Before attempting this procedure, you should read and understand the information and examples displayed in the following list:</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">.INPUTS</pc> – The account or accounts used to convert to SID format.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">.INPUTS</pc> – The account or accounts used to convert to SID format.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>This can be a single account name or an array of account names.</source>
          <target>This can be a single account name or an array of account names.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">.OUTPUTS</pc> - A list of account names with the corresponding SID in standard and hexadecimal formats.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">.OUTPUTS</pc> - A list of account names with the corresponding SID in standard and hexadecimal formats.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\_</data>
          <data id="id6">\\</data>
          <data id="id7">\_</data>
          <data id="id8">\\</data>
          <data id="id9">\_</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">.<ph dataRef="id3" id="ph1" />ConvertToSID.ps1 DOMAIN<ph dataRef="id4" id="ph2" />user<ph dataRef="id5" id="ph3" />account1 DOMAIN<ph dataRef="id6" id="ph4" />machine<ph dataRef="id7" id="ph5" />account1$ DOMAIN<ph dataRef="id8" id="ph6" />user<ph dataRef="id9" id="ph7" />account2 | Format-List</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">.<ph dataRef="id3" id="ph1" />ConvertToSID.ps1 DOMAIN<ph dataRef="id4" id="ph2" />user<ph dataRef="id5" id="ph3" />account1 DOMAIN<ph dataRef="id6" id="ph4" />machine<ph dataRef="id7" id="ph5" />account1$ DOMAIN<ph dataRef="id8" id="ph6" />user<ph dataRef="id9" id="ph7" />account2 | Format-List</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\_</data>
          <data id="id3">\\</data>
          <data id="id4">\_</data>
          <data id="id5">\_</data>
          <data id="id6">\_</data>
        </originalData>
        <segment state="initial">
          <source>$accountsArray = @("DOMAIN<ph dataRef="id1" id="ph1" />user<ph dataRef="id2" id="ph2" />account1", "DOMAIN<ph dataRef="id3" id="ph3" />machine<ph dataRef="id4" id="ph4" />account1$", "DOMAIN<ph dataRef="id5" id="ph5" />user<ph dataRef="id6" id="ph6" />account2")</source>
          <target>$accountsArray = @("DOMAIN<ph dataRef="id1" id="ph1" />user<ph dataRef="id2" id="ph2" />account1", "DOMAIN<ph dataRef="id3" id="ph3" />machine<ph dataRef="id4" id="ph4" />account1$", "DOMAIN<ph dataRef="id5" id="ph5" />user<ph dataRef="id6" id="ph6" />account2")</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>.<ph dataRef="id1" id="ph1" />ConvertToSID.ps1 $accountsArray | Write-Output -FilePath .<ph dataRef="id2" id="ph2" />SIDs.txt -Width 200</source>
          <target>.<ph dataRef="id1" id="ph1" />ConvertToSID.ps1 $accountsArray | Write-Output -FilePath .<ph dataRef="id2" id="ph2" />SIDs.txt -Width 200</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>To convert any number of Active Directory Domain Services (AD DS) user or machine accounts into formatted Security Identifiers (SIDs)</source>
          <target>To convert any number of Active Directory Domain Services (AD DS) user or machine accounts into formatted Security Identifiers (SIDs)</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Copy the following script into a text editor and save it as a PowerShell script file, for example <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ConvertToSIDs.ps1</pc>.</source>
          <target>Copy the following script into a text editor and save it as a PowerShell script file, for example <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ConvertToSIDs.ps1</pc>.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>To open a PowerShell console click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc> and type <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PowerShell</pc>.</source>
          <target>To open a PowerShell console click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc> and type <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PowerShell</pc>.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Right-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows PowerShell</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run as Administrator</pc>.</source>
          <target>Right-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows PowerShell</pc> and select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run as Administrator</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>{</source>
          <target>{</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">\[</data>
          <data id="id2">\]</data>
        </originalData>
        <segment state="initial">
          <source>param(<ph dataRef="id1" id="ph1" />System.Security.Principal.SecurityIdentifier<ph dataRef="id2" id="ph2" />$sidToConvert)</source>
          <target>param(<ph dataRef="id1" id="ph1" />System.Security.Principal.SecurityIdentifier<ph dataRef="id2" id="ph2" />$sidToConvert)</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>{</source>
          <target>{</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Run the script you saved in step one of this procedure passing the accounts to convert as arguments.</source>
          <target>Run the script you saved in step one of this procedure passing the accounts to convert as arguments.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>For example,</source>
          <target>For example,</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\_</data>
          <data id="id4">\\</data>
          <data id="id5">\_</data>
          <data id="id6">\\</data>
          <data id="id7">\_</data>
          <data id="id8">\\</data>
          <data id="id9">\_</data>
          <data id="id10">\\</data>
          <data id="id11">\_</data>
          <data id="id12">\_</data>
          <data id="id13">\_</data>
        </originalData>
        <segment state="initial">
          <source>.<ph dataRef="id1" id="ph1" />ConvertToSID.ps1 DOMAIN<ph dataRef="id2" id="ph2" />user<ph dataRef="id3" id="ph3" />account1 DOMAIN<ph dataRef="id4" id="ph4" />machine<ph dataRef="id5" id="ph5" />account1$ DOMAIN<ph dataRef="id6" id="ph6" />user<ph dataRef="id7" id="ph7" />account2 | Format-List” or “$accountsArray = @("DOMAIN<ph dataRef="id8" id="ph8" />user<ph dataRef="id9" id="ph9" />account1", "DOMAIN<ph dataRef="id10" id="ph10" />machine<ph dataRef="id11" id="ph11" />account1$", "DOMAIN<ph dataRef="id12" id="ph12" />user<ph dataRef="id13" id="ph13" />account2")</source>
          <target>.<ph dataRef="id1" id="ph1" />ConvertToSID.ps1 DOMAIN<ph dataRef="id2" id="ph2" />user<ph dataRef="id3" id="ph3" />account1 DOMAIN<ph dataRef="id4" id="ph4" />machine<ph dataRef="id5" id="ph5" />account1$ DOMAIN<ph dataRef="id6" id="ph6" />user<ph dataRef="id7" id="ph7" />account2 | Format-List” or “$accountsArray = @("DOMAIN<ph dataRef="id8" id="ph8" />user<ph dataRef="id9" id="ph9" />account1", "DOMAIN<ph dataRef="id10" id="ph10" />machine<ph dataRef="id11" id="ph11" />account1$", "DOMAIN<ph dataRef="id12" id="ph12" />user<ph dataRef="id13" id="ph13" />account2")</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>.<ph dataRef="id1" id="ph1" />ConvertToSID.ps1 $accountsArray | Write-Output -FilePath .<ph dataRef="id2" id="ph2" />SIDs.txt -Width 200”</source>
          <target>.<ph dataRef="id1" id="ph1" />ConvertToSID.ps1 $accountsArray | Write-Output -FilePath .<ph dataRef="id2" id="ph2" />SIDs.txt -Width 200”</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Got a suggestion for App-V</pc>?</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Got a suggestion for App-V</pc>?</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://appv.uservoice.com/forums/280448-microsoft-application-virtualization)</data>
        </originalData>
        <segment state="initial">
          <source>Add or vote on suggestions <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</source>
          <target>Add or vote on suggestions <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc>.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Got an App-V issu</pc>e?</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Got an App-V issu</pc>e?</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://social.technet.microsoft.com/Forums/home?forum=mdopappv)</data>
        </originalData>
        <segment state="initial">
          <source>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App-V TechNet Forum</pc>.</source>
          <target>Use the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">App-V TechNet Forum</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Administering App-V by Using PowerShell</source>
          <target>Administering App-V by Using PowerShell</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>