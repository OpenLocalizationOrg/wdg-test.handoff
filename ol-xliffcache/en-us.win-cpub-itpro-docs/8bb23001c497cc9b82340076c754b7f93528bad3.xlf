<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\deploy\configure-mdt-deployment-share-rules.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">8bb23001c497cc9b82340076c754b7f93528bad3</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Configure MDT deployment share rules (Windows 10)</source>
          <target>Configure MDT deployment share rules (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>In this topic, you will learn how to configure the MDT rules engine to reach out to other resources, including external scripts, databases, and web services, for additional information instead of storing settings directly in the rules engine.</source>
          <target>In this topic, you will learn how to configure the MDT rules engine to reach out to other resources, including external scripts, databases, and web services, for additional information instead of storing settings directly in the rules engine.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Configure MDT deployment share rules</source>
          <target>Configure MDT deployment share rules</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>In this topic, you will learn how to configure the MDT rules engine to reach out to other resources, including external scripts, databases, and web services, for additional information instead of storing settings directly in the rules engine.</source>
          <target>In this topic, you will learn how to configure the MDT rules engine to reach out to other resources, including external scripts, databases, and web services, for additional information instead of storing settings directly in the rules engine.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>The rules engine in MDT is powerful: most of the settings used for operating system deployments are retrieved and assigned via the rules engine.</source>
          <target>The rules engine in MDT is powerful: most of the settings used for operating system deployments are retrieved and assigned via the rules engine.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>In its simplest form, the rules engine is the CustomSettings.ini text file.</source>
          <target>In its simplest form, the rules engine is the CustomSettings.ini text file.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Assign settings</source>
          <target>Assign settings</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>When using MDT, you can assign setting in three distinct ways:</source>
          <target>When using MDT, you can assign setting in three distinct ways:</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>You can pre-stage the information before deployment.</source>
          <target>You can pre-stage the information before deployment.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>You can prompt the user or technician for information.</source>
          <target>You can prompt the user or technician for information.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>You can have MDT generate the settings automatically.</source>
          <target>You can have MDT generate the settings automatically.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>In order illustrate these three options, let's look at some sample configurations.</source>
          <target>In order illustrate these three options, let's look at some sample configurations.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Sample configurations</source>
          <target>Sample configurations</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Before adding the more advanced components like scripts, databases, and web services, consider the commonly used configurations below; they demonstrate the power of the rules engine.</source>
          <target>Before adding the more advanced components like scripts, databases, and web services, consider the commonly used configurations below; they demonstrate the power of the rules engine.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Set computer name by MAC Address</source>
          <target>Set computer name by MAC Address</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>If you have a small test environment, or simply want to assign settings to a very limited number of machines, you can edit the rules to assign settings directly for a given MAC Address.</source>
          <target>If you have a small test environment, or simply want to assign settings to a very limited number of machines, you can edit the rules to assign settings directly for a given MAC Address.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>If you have many machines, it makes sense to use the database instead.</source>
          <target>If you have many machines, it makes sense to use the database instead.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>In the preceding sample, you set the PC00075 computer name for a machine with a MAC Address of 00:15:5D:85:6B:00.</source>
          <target>In the preceding sample, you set the PC00075 computer name for a machine with a MAC Address of 00:15:5D:85:6B:00.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Set computer name by serial number</source>
          <target>Set computer name by serial number</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Another way to assign a computer name is to identify the machine via its serial number.</source>
          <target>Another way to assign a computer name is to identify the machine via its serial number.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>In this sample, you set the PC00075 computer name for a machine with a serial number of CND0370RJ7.</source>
          <target>In this sample, you set the PC00075 computer name for a machine with a serial number of CND0370RJ7.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Generate a computer name based on a serial number</source>
          <target>Generate a computer name based on a serial number</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>You also can configure the rules engine to use a known property, like a serial number, to generate a computer name on the fly.</source>
          <target>You also can configure the rules engine to use a known property, like a serial number, to generate a computer name on the fly.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>In this sample, you configure the rules to set the computer name to a prefix (PC-) and then the serial number.</source>
          <target>In this sample, you configure the rules to set the computer name to a prefix (PC-) and then the serial number.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>If the serial number of the machine is CND0370RJ7, the preceding configuration sets the computer name to PC-CND0370RJ7.</source>
          <target>If the serial number of the machine is CND0370RJ7, the preceding configuration sets the computer name to PC-CND0370RJ7.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Be careful when using the serial number to assign computer names.</source>
          <target>Be careful when using the serial number to assign computer names.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>A serial number can contain more than 15 characters, but the Windows setup limits a computer name to 15 characters.</source>
          <target>A serial number can contain more than 15 characters, but the Windows setup limits a computer name to 15 characters.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Generate a limited computer name based on a serial number</source>
          <target>Generate a limited computer name based on a serial number</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>To avoid assigning a computer name longer than 15 characters, you can configure the rules in more detail by adding VBScript functions, as follows:</source>
          <target>To avoid assigning a computer name longer than 15 characters, you can configure the rules in more detail by adding VBScript functions, as follows:</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>In the preceding sample, you still configure the rules to set the computer name to a prefix (PC-) followed by the serial number.</source>
          <target>In the preceding sample, you still configure the rules to set the computer name to a prefix (PC-) followed by the serial number.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>However, by adding the Left VBScript function, you configure the rule to use only the first 12 serial-number characters for the name.</source>
          <target>However, by adding the Left VBScript function, you configure the rule to use only the first 12 serial-number characters for the name.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Add laptops to a different organizational unit (OU) in Active Directory</source>
          <target>Add laptops to a different organizational unit (OU) in Active Directory</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>In the rules, you find built-in properties that use a Windows Management Instrumentation (WMI) query to determine whether the machine you are deploying is a laptop, desktop, or server.</source>
          <target>In the rules, you find built-in properties that use a Windows Management Instrumentation (WMI) query to determine whether the machine you are deploying is a laptop, desktop, or server.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>In this sample, we assume you want to add laptops to different OUs in Active Directory.</source>
          <target>In this sample, we assume you want to add laptops to different OUs in Active Directory.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Note that ByLaptopType is not a reserved word; rather, it is the name of the section to read.</source>
          <target>Note that ByLaptopType is not a reserved word; rather, it is the name of the section to read.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Set up MDT for BitLocker</source>
          <target>Set up MDT for BitLocker</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Configure MDT for UserExit scripts</source>
          <target>Configure MDT for UserExit scripts</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Simulate a Windows 10 deployment in a test environment</source>
          <target>Simulate a Windows 10 deployment in a test environment</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Use the MDT database to stage Windows 10 deployment information</source>
          <target>Use the MDT database to stage Windows 10 deployment information</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Assign applications using roles in MDT</source>
          <target>Assign applications using roles in MDT</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Use web services in MDT</source>
          <target>Use web services in MDT</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Use Orchestrator runbooks with MDT</source>
          <target>Use Orchestrator runbooks with MDT</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>