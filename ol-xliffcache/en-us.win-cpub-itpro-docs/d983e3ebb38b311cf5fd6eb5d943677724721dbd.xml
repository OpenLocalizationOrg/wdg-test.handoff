{"nodes":[{"content":"Understanding AppLocker rule collections (Windows 10)","pos":[11,64]},{"content":"This topic explains the five different types of AppLocker rules used to enforce AppLocker policies.","pos":[78,177]},{"content":"Understanding AppLocker rule collections","pos":[333,373]},{"content":"Applies to","pos":[377,387]},{"content":"Windows 10","pos":[394,404]},{"content":"This topic explains the five different types of AppLocker rules used to enforce AppLocker policies.","pos":[406,505]},{"content":"An AppLocker rule collection is a set of rules that apply to one of five types:","pos":[507,586]},{"content":"Executable files: .exe and .com","pos":[592,623]},{"content":"Windows Installer files: .msi, mst, and .msp","pos":[628,672]},{"content":"Scripts: .ps1, .bat, .cmd, .vbs, and .js","pos":[677,717]},{"content":"DLLs: .dll and .ocx","pos":[722,741]},{"content":"Packaged apps and packaged app installers: .appx","pos":[746,794]},{"content":"If you use DLL rules, a DLL allow rule has to be created for each DLL that is used by all of the allowed apps.","pos":[796,906]},{"content":"<bpt id=\"p1\">**</bpt>Important:<ept id=\"p1\">**</ept>  Each app can load several DLLs, and AppLocker must check each DLL before it is allowed to run.","pos":[909,1019]},{"content":"Therefore, creating DLL rules might cause performance problems on some computers.","pos":[1020,1101]},{"content":"Denying some DLLs from running can also create app compatibility problems.","pos":[1102,1176]},{"content":"As a result, the DLL rule collection is not enabled by default.","pos":[1177,1240]},{"pos":[1243,1369],"content":"For info about how to enable the DLL rule collection, see <bpt id=\"p1\">[</bpt>Enable the DLL rule collection<ept id=\"p1\">](enable-the-dll-rule-collection.md)</ept>."},{"content":"Related topics","pos":[1374,1388]},{"content":"How AppLocker works","pos":[1393,1412]}],"content":"---\ntitle: Understanding AppLocker rule collections (Windows 10)\ndescription: This topic explains the five different types of AppLocker rules used to enforce AppLocker policies.\nms.assetid: 03c05466-4fb3-4880-8d3c-0f6f59fc5579\nms.prod: w10\nms.mktglfcycl: deploy\nms.sitesec: library\nms.pagetype: security\nauthor: brianlic-msft\n---\n\n# Understanding AppLocker rule collections\n\n**Applies to**\n-   Windows 10\n\nThis topic explains the five different types of AppLocker rules used to enforce AppLocker policies.\n\nAn AppLocker rule collection is a set of rules that apply to one of five types:\n\n-   Executable files: .exe and .com\n-   Windows Installer files: .msi, mst, and .msp\n-   Scripts: .ps1, .bat, .cmd, .vbs, and .js\n-   DLLs: .dll and .ocx\n-   Packaged apps and packaged app installers: .appx\n\nIf you use DLL rules, a DLL allow rule has to be created for each DLL that is used by all of the allowed apps.\n\n>**Important:**  Each app can load several DLLs, and AppLocker must check each DLL before it is allowed to run. Therefore, creating DLL rules might cause performance problems on some computers. Denying some DLLs from running can also create app compatibility problems. As a result, the DLL rule collection is not enabled by default.\n \nFor info about how to enable the DLL rule collection, see [Enable the DLL rule collection](enable-the-dll-rule-collection.md).\n\n## Related topics\n\n- [How AppLocker works](how-applocker-works-techref.md)\n"}