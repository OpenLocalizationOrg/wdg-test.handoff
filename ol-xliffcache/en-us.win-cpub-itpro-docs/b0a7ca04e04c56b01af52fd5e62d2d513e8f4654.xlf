<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\working-with-applocker-rules.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">b0a7ca04e04c56b01af52fd5e62d2d513e8f4654</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Working with AppLocker rules (Windows 10)</source>
          <target>Working with AppLocker rules (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This topic for IT professionals describes AppLocker rule types and how to work with them for your application control policies.</source>
          <target>This topic for IT professionals describes AppLocker rule types and how to work with them for your application control policies.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Working with AppLocker rules</source>
          <target>Working with AppLocker rules</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This topic for IT professionals describes AppLocker rule types and how to work with them for your application control policies.</source>
          <target>This topic for IT professionals describes AppLocker rule types and how to work with them for your application control policies.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>In this section</source>
          <target>In this section</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Topic</source>
          <target>Topic</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Create a rule that uses a file hash condition</source>
          <target>Create a rule that uses a file hash condition</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>This topic for IT professionals shows how to create an AppLocker rule with a file hash condition.</source>
          <target>This topic for IT professionals shows how to create an AppLocker rule with a file hash condition.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Create a rule that uses a path condition</source>
          <target>Create a rule that uses a path condition</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>This topic for IT professionals shows how to create an AppLocker rule with a path condition.</source>
          <target>This topic for IT professionals shows how to create an AppLocker rule with a path condition.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Create a rule that uses a publisher condition</source>
          <target>Create a rule that uses a publisher condition</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>This topic for IT professionals shows how to create an AppLocker rule with a publisher condition.</source>
          <target>This topic for IT professionals shows how to create an AppLocker rule with a publisher condition.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Create AppLocker default rules</source>
          <target>Create AppLocker default rules</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>This topic for IT professionals describes the steps to create a standard set of AppLocker rules that will allow Windows system files to run.</source>
          <target>This topic for IT professionals describes the steps to create a standard set of AppLocker rules that will allow Windows system files to run.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Add exceptions for an AppLocker rule</source>
          <target>Add exceptions for an AppLocker rule</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>This topic for IT professionals describes the steps to specify which apps can or cannot run as exceptions to an AppLocker rule.</source>
          <target>This topic for IT professionals describes the steps to specify which apps can or cannot run as exceptions to an AppLocker rule.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Create a rule for packaged apps</source>
          <target>Create a rule for packaged apps</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>This topic for IT professionals shows how to create an AppLocker rule for packaged apps with a publisher condition.</source>
          <target>This topic for IT professionals shows how to create an AppLocker rule for packaged apps with a publisher condition.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Delete an AppLocker rule</source>
          <target>Delete an AppLocker rule</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>This topic for IT professionals describes the steps to delete an AppLocker rule.</source>
          <target>This topic for IT professionals describes the steps to delete an AppLocker rule.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Edit AppLocker rules</source>
          <target>Edit AppLocker rules</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>This topic for IT professionals describes the steps to edit a publisher rule, path rule, and file hash rule in AppLocker.</source>
          <target>This topic for IT professionals describes the steps to edit a publisher rule, path rule, and file hash rule in AppLocker.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Enable the DLL rule collection</source>
          <target>Enable the DLL rule collection</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>This topic for IT professionals describes the steps to enable the DLL rule collection feature for AppLocker.</source>
          <target>This topic for IT professionals describes the steps to enable the DLL rule collection feature for AppLocker.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Enforce AppLocker rules</source>
          <target>Enforce AppLocker rules</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>This topic for IT professionals describes how to enforce application control rules by using AppLocker.</source>
          <target>This topic for IT professionals describes how to enforce application control rules by using AppLocker.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Run the Automatically Generate Rules wizard</source>
          <target>Run the Automatically Generate Rules wizard</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>This topic for IT professionals describes steps to run the wizard to create AppLocker rules on a reference device.</source>
          <target>This topic for IT professionals describes steps to run the wizard to create AppLocker rules on a reference device.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>The three AppLocker enforcement modes are described in the following table.</source>
          <target>The three AppLocker enforcement modes are described in the following table.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>The enforcement mode setting defined here can be overwritten by the setting derived from a linked Group Policy Object (GPO) with a higher precedence.</source>
          <target>The enforcement mode setting defined here can be overwritten by the setting derived from a linked Group Policy Object (GPO) with a higher precedence.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Enforcement mode</source>
          <target>Enforcement mode</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Not configured</source>
          <target>Not configured</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>This is the default setting which means that the rules defined here will be enforced unless a linked GPO with a higher precedence has a different value for this setting.</source>
          <target>This is the default setting which means that the rules defined here will be enforced unless a linked GPO with a higher precedence has a different value for this setting.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Enforce rules</source>
          <target>Enforce rules</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Rules are enforced.</source>
          <target>Rules are enforced.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Audit only</source>
          <target>Audit only</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Rules are audited but not enforced.</source>
          <target>Rules are audited but not enforced.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>When a user runs an app that is affected by an AppLocker rule, the app is allowed to run and the info about the app is added to the AppLocker event log.</source>
          <target>When a user runs an app that is affected by an AppLocker rule, the app is allowed to run and the info about the app is added to the AppLocker event log.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>The Audit-only enforcement mode helps you determine which apps will be affected by the policy before the policy is enforced.</source>
          <target>The Audit-only enforcement mode helps you determine which apps will be affected by the policy before the policy is enforced.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When the AppLocker policy for a rule collection is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit only</pc>, rules for that rule collection are not enforced</source>
          <target>When the AppLocker policy for a rule collection is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit only</pc>, rules for that rule collection are not enforced</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>When AppLocker policies from various GPOs are merged, the rules from all the GPOs are merged and the enforcement mode setting of the winning GPO is applied.</source>
          <target>When AppLocker policies from various GPOs are merged, the rules from all the GPOs are merged and the enforcement mode setting of the winning GPO is applied.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Rule collections</source>
          <target>Rule collections</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>The AppLocker console is organized into rule collections, which are executable files, scripts, Windows Installer files, packaged apps and packaged app installers, and DLL files.</source>
          <target>The AppLocker console is organized into rule collections, which are executable files, scripts, Windows Installer files, packaged apps and packaged app installers, and DLL files.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>These collections give you an easy way to differentiate the rules for different types of apps.</source>
          <target>These collections give you an easy way to differentiate the rules for different types of apps.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>The following table lists the file formats that are included in each rule collection.</source>
          <target>The following table lists the file formats that are included in each rule collection.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Rule collection</source>
          <target>Rule collection</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Associated file formats</source>
          <target>Associated file formats</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Executable files</source>
          <target>Executable files</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>.exe</source>
          <target>.exe</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>.com</source>
          <target>.com</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Scripts</source>
          <target>Scripts</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>.ps1</source>
          <target>.ps1</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>.bat</source>
          <target>.bat</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>.cmd</source>
          <target>.cmd</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>.vbs</source>
          <target>.vbs</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>.js</source>
          <target>.js</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Windows Installer files</source>
          <target>Windows Installer files</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>.msi</source>
          <target>.msi</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>.msp</source>
          <target>.msp</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>.mst</source>
          <target>.mst</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Packaged apps and packaged app installers</source>
          <target>Packaged apps and packaged app installers</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>.appx</source>
          <target>.appx</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>DLL files</source>
          <target>DLL files</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>.dll</source>
          <target>.dll</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>.ocx</source>
          <target>.ocx</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  If you use DLL rules, you need to create an allow rule for each DLL that is used by all of the allowed apps.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  If you use DLL rules, you need to create an allow rule for each DLL that is used by all of the allowed apps.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>When DLL rules are used, AppLocker must check each DLL that an application loads.</source>
          <target>When DLL rules are used, AppLocker must check each DLL that an application loads.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Therefore, users may experience a reduction in performance if DLL rules are used.</source>
          <target>Therefore, users may experience a reduction in performance if DLL rules are used.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>The DLL rule collection is not enabled by default.</source>
          <target>The DLL rule collection is not enabled by default.</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#bkmk-dllrulecollections)</data>
        </originalData>
        <segment state="initial">
          <source>To learn how to enable the DLL rule collection, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DLL rule collections</pc>.</source>
          <target>To learn how to enable the DLL rule collection, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">DLL rule collections</pc>.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Rule conditions</source>
          <target>Rule conditions</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Rule conditions are criteria that help AppLocker identify the apps to which the rule applies.</source>
          <target>Rule conditions are criteria that help AppLocker identify the apps to which the rule applies.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>The three primary rule conditions are publisher, path, and file hash.</source>
          <target>The three primary rule conditions are publisher, path, and file hash.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#bkmk-publisher)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Publisher</pc>: Identifies an app based on its digital signature</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Publisher</pc>: Identifies an app based on its digital signature</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#bkmk-path)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Path</pc>: Identifies an app by its location in the file system of the computer or on the network</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Path</pc>: Identifies an app by its location in the file system of the computer or on the network</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#bkmk-filehash)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File hash</pc>: Represents the system computed cryptographic hash of the identified file</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File hash</pc>: Represents the system computed cryptographic hash of the identified file</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Publisher</source>
          <target>Publisher</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>This condition identifies an app based on its digital signature and extended attributes when available.</source>
          <target>This condition identifies an app based on its digital signature and extended attributes when available.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>The digital signature contains info about the company that created the app (the publisher).</source>
          <target>The digital signature contains info about the company that created the app (the publisher).</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Executable files, dlls, Windows installers, packaged apps and packaged app installers also have extended attributes, which are obtained from the binary resource.</source>
          <target>Executable files, dlls, Windows installers, packaged apps and packaged app installers also have extended attributes, which are obtained from the binary resource.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>In case of executable files, dlls and Windows installers, these attributes contain the name of the product that the file is a part of, the original name of the file as supplied by the publisher, and the version number of the file.</source>
          <target>In case of executable files, dlls and Windows installers, these attributes contain the name of the product that the file is a part of, the original name of the file as supplied by the publisher, and the version number of the file.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>In case of packaged apps and packaged app installers, these extended attributes contain the name and the version of the app package.</source>
          <target>In case of packaged apps and packaged app installers, these extended attributes contain the name and the version of the app package.</target>
        </segment>
      </unit>
      <unit id="187">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Rules created in the packaged apps and packaged app installers rule collection can only have publisher conditions since Windows does not support unsigned packaged apps and packaged app installers.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Rules created in the packaged apps and packaged app installers rule collection can only have publisher conditions since Windows does not support unsigned packaged apps and packaged app installers.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Use a publisher rule condition when possible because they can survive app updates as well as a change in the location of files.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Use a publisher rule condition when possible because they can survive app updates as well as a change in the location of files.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>When you select a reference file for a publisher condition, the wizard creates a rule that specifies the publisher, product, file name, and version number.</source>
          <target>When you select a reference file for a publisher condition, the wizard creates a rule that specifies the publisher, product, file name, and version number.</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">\*</data>
        </originalData>
        <segment state="initial">
          <source>You can make the rule more generic by moving the slider up or by using a wildcard character (<ph dataRef="id1" id="ph1" />) in the product, file name, or version number fields.</source>
          <target>You can make the rule more generic by moving the slider up or by using a wildcard character (<ph dataRef="id1" id="ph1" />) in the product, file name, or version number fields.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  To enter custom values for any of the fields of a publisher rule condition in the Create Rules Wizard, you must select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Use custom values</pc> check box.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  To enter custom values for any of the fields of a publisher rule condition in the Create Rules Wizard, you must select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Use custom values</pc> check box.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>When this check box is selected, you cannot use the slider.</source>
          <target>When this check box is selected, you cannot use the slider.</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File version</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Package version</pc> control whether a user can run a specific version, earlier versions, or later versions of the app.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">File version</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Package version</pc> control whether a user can run a specific version, earlier versions, or later versions of the app.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>You can choose a version number and then configure the following options:</source>
          <target>You can choose a version number and then configure the following options:</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Exactly.</source>
          <target>Exactly.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>The rule applies only to this version of the app</source>
          <target>The rule applies only to this version of the app</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>And above.</source>
          <target>And above.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>The rule applies to this version and all later versions.</source>
          <target>The rule applies to this version and all later versions.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>And below.</source>
          <target>And below.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>The rule applies to this version and all earlier versions.</source>
          <target>The rule applies to this version and all earlier versions.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>The following table describes how a publisher condition is applied.</source>
          <target>The following table describes how a publisher condition is applied.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>| Option | The publisher condition allows or denies…</source>
          <target>| Option | The publisher condition allows or denies…</target>
        </segment>
      </unit>
      <unit id="203">
        <originalData>
          <data id="id1">| </data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">| </data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">| </data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">| </data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">| </data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">| </data>
          <data id="id17">**</data>
          <data id="id18">**</data>
        </originalData>
        <segment state="initial">
          <source>| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">All signed files</pc> | All files that are signed by any publisher.| <ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">Publisher only</pc>| All files that are signed by the named publisher.| <ph dataRef="id7" id="ph3" /><pc dataRefEnd="id9" dataRefStart="id8" id="p3">Publisher and product name</pc>| All files for the specified product that are signed by the named publisher.| <ph dataRef="id10" id="ph4" /><pc dataRefEnd="id12" dataRefStart="id11" id="p4">Publisher and product name, and file name</pc>| Any version of the named file or package for the named product that are signed by the publisher.| <ph dataRef="id13" id="ph5" /><pc dataRefEnd="id15" dataRefStart="id14" id="p5">Publisher, product name, file name, and file version</pc><ph dataRef="id16" id="ph6" /><pc dataRefEnd="id18" dataRefStart="id17" id="p6">Exactly</pc></source>
          <target>| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">All signed files</pc> | All files that are signed by any publisher.| <ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">Publisher only</pc>| All files that are signed by the named publisher.| <ph dataRef="id7" id="ph3" /><pc dataRefEnd="id9" dataRefStart="id8" id="p3">Publisher and product name</pc>| All files for the specified product that are signed by the named publisher.| <ph dataRef="id10" id="ph4" /><pc dataRefEnd="id12" dataRefStart="id11" id="p4">Publisher and product name, and file name</pc>| Any version of the named file or package for the named product that are signed by the publisher.| <ph dataRef="id13" id="ph5" /><pc dataRefEnd="id15" dataRefStart="id14" id="p5">Publisher, product name, file name, and file version</pc><ph dataRef="id16" id="ph6" /><pc dataRefEnd="id18" dataRefStart="id17" id="p6">Exactly</pc></target>
        </segment>
      </unit>
      <unit id="204">
        <originalData>
          <data id="id1">| </data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">| </data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The specified version of the named file or package for the named product that are signed by the publisher.| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Publisher, product name, file name, and file version</pc><ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">And above</pc></source>
          <target>The specified version of the named file or package for the named product that are signed by the publisher.| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Publisher, product name, file name, and file version</pc><ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">And above</pc></target>
        </segment>
      </unit>
      <unit id="205">
        <originalData>
          <data id="id1">| </data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">| </data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>The specified version of the named file or package and any new releases for the product that are signed by the publisher.| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Publisher, product name, file name, and file version</pc><ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">And below</pc></source>
          <target>The specified version of the named file or package and any new releases for the product that are signed by the publisher.| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Publisher, product name, file name, and file version</pc><ph dataRef="id4" id="ph2" /><pc dataRefEnd="id6" dataRefStart="id5" id="p2">And below</pc></target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">| </data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
        </originalData>
        <segment state="initial">
          <source>The specified version of the named file or package and any earlier versions for the product that are signed by the publisher.| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Custom</pc>| You can edit the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Publisher</pc>, <pc dataRefEnd="id7" dataRefStart="id6" id="p3">Product name</pc>, <pc dataRefEnd="id9" dataRefStart="id8" id="p4">File name</pc>, <pc dataRefEnd="id11" dataRefStart="id10" id="p5">Version</pc><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Package name</pc>, and <pc dataRefEnd="id15" dataRefStart="id14" id="p7">Package version</pc> fields to create a custom rule.|</source>
          <target>The specified version of the named file or package and any earlier versions for the product that are signed by the publisher.| <ph dataRef="id1" id="ph1" /><pc dataRefEnd="id3" dataRefStart="id2" id="p1">Custom</pc>| You can edit the <pc dataRefEnd="id5" dataRefStart="id4" id="p2">Publisher</pc>, <pc dataRefEnd="id7" dataRefStart="id6" id="p3">Product name</pc>, <pc dataRefEnd="id9" dataRefStart="id8" id="p4">File name</pc>, <pc dataRefEnd="id11" dataRefStart="id10" id="p5">Version</pc><pc dataRefEnd="id13" dataRefStart="id12" id="p6">Package name</pc>, and <pc dataRefEnd="id15" dataRefStart="id14" id="p7">Package version</pc> fields to create a custom rule.|</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Path</source>
          <target>Path</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>This rule condition identifies an application by its location in the file system of the computer or on the network.</source>
          <target>This rule condition identifies an application by its location in the file system of the computer or on the network.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>AppLocker uses custom path variables for well-known paths, such as Program Files and Windows.</source>
          <target>AppLocker uses custom path variables for well-known paths, such as Program Files and Windows.</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>The following table details these path variables.</source>
          <target>The following table details these path variables.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>Windows directory or disk</source>
          <target>Windows directory or disk</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>AppLocker path variable</source>
          <target>AppLocker path variable</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Windows environment variable</source>
          <target>Windows environment variable</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>Windows</source>
          <target>Windows</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>%WINDIR%</source>
          <target>%WINDIR%</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>%SystemRoot%</source>
          <target>%SystemRoot%</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>System32</source>
          <target>System32</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>%SYSTEM32%</source>
          <target>%SYSTEM32%</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>%SystemDirectory%</source>
          <target>%SystemDirectory%</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Windows installation directory</source>
          <target>Windows installation directory</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>%OSDRIVE%</source>
          <target>%OSDRIVE%</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>%SystemDrive%</source>
          <target>%SystemDrive%</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>Program Files</source>
          <target>Program Files</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>%PROGRAMFILES%</source>
          <target>%PROGRAMFILES%</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>%ProgramFiles% and %ProgramFiles(x86)%</source>
          <target>%ProgramFiles% and %ProgramFiles(x86)%</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>Removable media (for example, a CD or DVD)</source>
          <target>Removable media (for example, a CD or DVD)</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>%REMOVABLE%</source>
          <target>%REMOVABLE%</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>Removable storage device (for example, a USB flash drive)</source>
          <target>Removable storage device (for example, a USB flash drive)</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>%HOT%</source>
          <target>%HOT%</target>
        </segment>
      </unit>
      <unit id="230">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  Because a path rule condition can be configured to include a large number of folders and files, path conditions should be carefully planned.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  Because a path rule condition can be configured to include a large number of folders and files, path conditions should be carefully planned.</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>For example, if an allow rule with a path condition includes a folder location that non-administrators are allowed to write data into, a user can copy unapproved files into that location and run the files.</source>
          <target>For example, if an allow rule with a path condition includes a folder location that non-administrators are allowed to write data into, a user can copy unapproved files into that location and run the files.</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>For this reason, it is a best practice to not create path conditions for standard user writable locations, such as a user profile.</source>
          <target>For this reason, it is a best practice to not create path conditions for standard user writable locations, such as a user profile.</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>File hash</source>
          <target>File hash</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>When you choose the file hash rule condition, the system computes a cryptographic hash of the identified file.</source>
          <target>When you choose the file hash rule condition, the system computes a cryptographic hash of the identified file.</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>The advantage of this rule condition is that because each file has a unique hash, a file hash rule condition applies to only one file.</source>
          <target>The advantage of this rule condition is that because each file has a unique hash, a file hash rule condition applies to only one file.</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>The disadvantage is that each time the file is updated (such as a security update or upgrade) the file's hash will change.</source>
          <target>The disadvantage is that each time the file is updated (such as a security update or upgrade) the file's hash will change.</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>As a result, you must manually update file hash rules.</source>
          <target>As a result, you must manually update file hash rules.</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>AppLocker default rules</source>
          <target>AppLocker default rules</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>AppLocker allows you to generate default rules for each rule collection.</source>
          <target>AppLocker allows you to generate default rules for each rule collection.</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>Executable default rule types include:</source>
          <target>Executable default rule types include:</target>
        </segment>
      </unit>
      <unit id="241">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all apps.</source>
          <target>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all apps.</target>
        </segment>
      </unit>
      <unit id="242">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run apps that are located in the Windows folder.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run apps that are located in the Windows folder.</target>
        </segment>
      </unit>
      <unit id="243">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run apps that are located in the Program Files folder.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run apps that are located in the Program Files folder.</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>Script default rule types include:</source>
          <target>Script default rule types include:</target>
        </segment>
      </unit>
      <unit id="245">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all scripts.</source>
          <target>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all scripts.</target>
        </segment>
      </unit>
      <unit id="246">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run scripts that are located in the Program Files folder.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run scripts that are located in the Program Files folder.</target>
        </segment>
      </unit>
      <unit id="247">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run scripts that are located in the Windows folder.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run scripts that are located in the Windows folder.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>Windows Installer default rule types include:</source>
          <target>Windows Installer default rule types include:</target>
        </segment>
      </unit>
      <unit id="249">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all Windows Installer files.</source>
          <target>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all Windows Installer files.</target>
        </segment>
      </unit>
      <unit id="250">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run all digitally signed Windows Installer files.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run all digitally signed Windows Installer files.</target>
        </segment>
      </unit>
      <unit id="251">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run all Windows Installer files that are located in the Windows<ph dataRef="id3" id="ph1" />Installer folder.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run all Windows Installer files that are located in the Windows<ph dataRef="id3" id="ph1" />Installer folder.</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>DLL default rule types:</source>
          <target>DLL default rule types:</target>
        </segment>
      </unit>
      <unit id="253">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all DLLs.</source>
          <target>Allow members of the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group to run all DLLs.</target>
        </segment>
      </unit>
      <unit id="254">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run DLLs that are located in the Program Files folder.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run DLLs that are located in the Program Files folder.</target>
        </segment>
      </unit>
      <unit id="255">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run DLLs that are located in the Windows folder.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to run DLLs that are located in the Windows folder.</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>Packaged apps default rule types:</source>
          <target>Packaged apps default rule types:</target>
        </segment>
      </unit>
      <unit id="257">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to install and run all signed packaged apps and packaged app installers.</source>
          <target>Allow members of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Everyone</pc> group to install and run all signed packaged apps and packaged app installers.</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>AppLocker rule behavior</source>
          <target>AppLocker rule behavior</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>If no AppLocker rules for a specific rule collection exist, all files with that file format are allowed to run.</source>
          <target>If no AppLocker rules for a specific rule collection exist, all files with that file format are allowed to run.</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>However, when an AppLocker rule for a specific rule collection is created, only the files explicitly allowed in a rule are permitted to run.</source>
          <target>However, when an AppLocker rule for a specific rule collection is created, only the files explicitly allowed in a rule are permitted to run.</target>
        </segment>
      </unit>
      <unit id="261">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>For example, if you create an executable rule that allows .exe files in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">%SystemDrive%<ph dataRef="id3" id="ph1" />FilePath</pc> to run, only executable files located in that path are allowed to run.</source>
          <target>For example, if you create an executable rule that allows .exe files in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">%SystemDrive%<ph dataRef="id3" id="ph1" />FilePath</pc> to run, only executable files located in that path are allowed to run.</target>
        </segment>
      </unit>
      <unit id="262">
        <segment state="initial">
          <source>A rule can be configured to use allow or deny actions:</source>
          <target>A rule can be configured to use allow or deny actions:</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>Allow.</source>
          <target>Allow.</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source>You can specify which files are allowed to run in your environment, and for which users or groups of users.</source>
          <target>You can specify which files are allowed to run in your environment, and for which users or groups of users.</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>You can also configure exceptions to identify files that are excluded from the rule.</source>
          <target>You can also configure exceptions to identify files that are excluded from the rule.</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>Deny.</source>
          <target>Deny.</target>
        </segment>
      </unit>
      <unit id="267">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>You can specify which files are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">not</pc> allowed to run in your environment, and for which users or groups of users.</source>
          <target>You can specify which files are <pc dataRefEnd="id2" dataRefStart="id1" id="p1">not</pc> allowed to run in your environment, and for which users or groups of users.</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source>You can also configure exceptions to identify files that are excluded from the rule.</source>
          <target>You can also configure exceptions to identify files that are excluded from the rule.</target>
        </segment>
      </unit>
      <unit id="269">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  For a best practice, use allow actions with exceptions.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  For a best practice, use allow actions with exceptions.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>You can use a combination of allow and deny actions but understand that deny actions override allow actions in all cases, and can be circumvented.</source>
          <target>You can use a combination of allow and deny actions but understand that deny actions override allow actions in all cases, and can be circumvented.</target>
        </segment>
      </unit>
      <unit id="271">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  If you join a computer running at least Windows Server 2012 or Windows 8 to a domain that already enforces AppLocker rules for executable files, users will not be able to run any packaged apps unless you also create rules for packaged apps.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  If you join a computer running at least Windows Server 2012 or Windows 8 to a domain that already enforces AppLocker rules for executable files, users will not be able to run any packaged apps unless you also create rules for packaged apps.</target>
        </segment>
      </unit>
      <unit id="272">
        <segment state="initial">
          <source>If you want to allow any packaged apps in your environment while continuing to control executable files, you should create the default rules for packaged apps and set the enforcement mode to Audit-only for the packaged apps rule collection.</source>
          <target>If you want to allow any packaged apps in your environment while continuing to control executable files, you should create the default rules for packaged apps and set the enforcement mode to Audit-only for the packaged apps rule collection.</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>Rule exceptions</source>
          <target>Rule exceptions</target>
        </segment>
      </unit>
      <unit id="274">
        <segment state="initial">
          <source>You can apply AppLocker rules to individual users or to a group of users.</source>
          <target>You can apply AppLocker rules to individual users or to a group of users.</target>
        </segment>
      </unit>
      <unit id="275">
        <segment state="initial">
          <source>If you apply a rule to a group of users, all users in that group are affected by that rule.</source>
          <target>If you apply a rule to a group of users, all users in that group are affected by that rule.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source>If you need to allow a subset of a user group to use an app, you can create a special rule for that subset.</source>
          <target>If you need to allow a subset of a user group to use an app, you can create a special rule for that subset.</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source>For example, the rule "Allow everyone to run Windows except Registry Editor" allows everyone in the organization to run the Windows operating system, but it does not allow anyone to run Registry Editor.</source>
          <target>For example, the rule "Allow everyone to run Windows except Registry Editor" allows everyone in the organization to run the Windows operating system, but it does not allow anyone to run Registry Editor.</target>
        </segment>
      </unit>
      <unit id="278">
        <segment state="initial">
          <source>The effect of this rule would prevent users such as Help Desk personnel from running a program that is necessary for their support tasks.</source>
          <target>The effect of this rule would prevent users such as Help Desk personnel from running a program that is necessary for their support tasks.</target>
        </segment>
      </unit>
      <unit id="279">
        <segment state="initial">
          <source>To resolve this problem, create a second rule that applies to the Help Desk user group: "Allow Help Desk to run Registry Editor."</source>
          <target>To resolve this problem, create a second rule that applies to the Help Desk user group: "Allow Help Desk to run Registry Editor."</target>
        </segment>
      </unit>
      <unit id="280">
        <segment state="initial">
          <source>If you create a deny rule that does not allow any users to run Registry Editor, the deny rule will override the second rule that allows the Help Desk user group to run Registry Editor.</source>
          <target>If you create a deny rule that does not allow any users to run Registry Editor, the deny rule will override the second rule that allows the Help Desk user group to run Registry Editor.</target>
        </segment>
      </unit>
      <unit id="281">
        <segment state="initial">
          <source>DLL rule collection</source>
          <target>DLL rule collection</target>
        </segment>
      </unit>
      <unit id="282">
        <segment state="initial">
          <source>Because the DLL rule collection is not enabled by default, you must perform the following procedure before you can create and enforce DLL rules.</source>
          <target>Because the DLL rule collection is not enabled by default, you must perform the following procedure before you can create and enforce DLL rules.</target>
        </segment>
      </unit>
      <unit id="283">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Membership in the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group, or equivalent, is the minimum required to complete this procedure.</source>
          <target>Membership in the local <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Administrators</pc> group, or equivalent, is the minimum required to complete this procedure.</target>
        </segment>
      </unit>
      <unit id="284">
        <segment state="initial">
          <source>To enable the DLL rule collection</source>
          <target>To enable the DLL rule collection</target>
        </segment>
      </unit>
      <unit id="285">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc>, type <pc dataRefEnd="id4" dataRefStart="id3" id="p2">secpol.msc</pc>, and then press ENTER.</source>
          <target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc>, type <pc dataRefEnd="id4" dataRefStart="id3" id="p2">secpol.msc</pc>, and then press ENTER.</target>
        </segment>
      </unit>
      <unit id="286">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control</pc> dialog box appears, confirm that the action it displays is what you want, and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Yes</pc>.</source>
          <target>If the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">User Account Control</pc> dialog box appears, confirm that the action it displays is what you want, and then click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Yes</pc>.</target>
        </segment>
      </unit>
      <unit id="287">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>In the console tree, double-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Control Policies</pc>, right-click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AppLocker</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Properties</pc>.</source>
          <target>In the console tree, double-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Application Control Policies</pc>, right-click <pc dataRefEnd="id4" dataRefStart="id3" id="p2">AppLocker</pc>, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Properties</pc>.</target>
        </segment>
      </unit>
      <unit id="288">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Advanced</pc> tab, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enable the DLL rule collection</pc> check box, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc>.</source>
          <target>Click the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Advanced</pc> tab, select the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Enable the DLL rule collection</pc> check box, and then click <pc dataRefEnd="id6" dataRefStart="id5" id="p3">OK</pc>.</target>
        </segment>
      </unit>
      <unit id="289">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  Before you enforce DLL rules, make sure that there are allow rules for each DLL that is used by any of the allowed apps.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  Before you enforce DLL rules, make sure that there are allow rules for each DLL that is used by any of the allowed apps.</target>
        </segment>
      </unit>
      <unit id="290">
        <segment state="initial">
          <source>AppLocker wizards</source>
          <target>AppLocker wizards</target>
        </segment>
      </unit>
      <unit id="291">
        <segment state="initial">
          <source>You can create rules by using two AppLocker wizards:</source>
          <target>You can create rules by using two AppLocker wizards:</target>
        </segment>
      </unit>
      <unit id="292">
        <segment state="initial">
          <source>The Create Rules Wizard enables you to create one rule at a time.</source>
          <target>The Create Rules Wizard enables you to create one rule at a time.</target>
        </segment>
      </unit>
      <unit id="293">
        <segment state="initial">
          <source>The Automatically Generate Rules Wizard allows you to create multiple rules at one time.</source>
          <target>The Automatically Generate Rules Wizard allows you to create multiple rules at one time.</target>
        </segment>
      </unit>
      <unit id="294">
        <segment state="initial">
          <source>You can either select a folder and let the wizard create rules for the relevant files within that folder or in case of packaged apps let the wizard create rules for all packaged apps installed on the computer.</source>
          <target>You can either select a folder and let the wizard create rules for the relevant files within that folder or in case of packaged apps let the wizard create rules for all packaged apps installed on the computer.</target>
        </segment>
      </unit>
      <unit id="295">
        <segment state="initial">
          <source>You can also specify the user or group to which to apply the rules.</source>
          <target>You can also specify the user or group to which to apply the rules.</target>
        </segment>
      </unit>
      <unit id="296">
        <segment state="initial">
          <source>This wizard automatically generates allow rules only.</source>
          <target>This wizard automatically generates allow rules only.</target>
        </segment>
      </unit>
      <unit id="297">
        <segment state="initial">
          <source>Additional considerations</source>
          <target>Additional considerations</target>
        </segment>
      </unit>
      <unit id="298">
        <segment state="initial">
          <source>By default, AppLocker rules do not allow users to open or run any files that are not specifically allowed.</source>
          <target>By default, AppLocker rules do not allow users to open or run any files that are not specifically allowed.</target>
        </segment>
      </unit>
      <unit id="299">
        <segment state="initial">
          <source>Administrators should maintain an up-to-date list of allowed applications.</source>
          <target>Administrators should maintain an up-to-date list of allowed applications.</target>
        </segment>
      </unit>
      <unit id="300">
        <segment state="initial">
          <source>There are two types of AppLocker conditions that do not persist following an update of an app:</source>
          <target>There are two types of AppLocker conditions that do not persist following an update of an app:</target>
        </segment>
      </unit>
      <unit id="301">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">A file hash condition</pc> File hash rule conditions can be used with any app because a cryptographic hash value of the app is generated at the time the rule is created.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">A file hash condition</pc> File hash rule conditions can be used with any app because a cryptographic hash value of the app is generated at the time the rule is created.</target>
        </segment>
      </unit>
      <unit id="302">
        <segment state="initial">
          <source>However, the hash value is specific to that exact version of the app.</source>
          <target>However, the hash value is specific to that exact version of the app.</target>
        </segment>
      </unit>
      <unit id="303">
        <segment state="initial">
          <source>If there are several versions of the application in use within the organization, you need to create file hash conditions for each version in use and for any new versions that are released.</source>
          <target>If there are several versions of the application in use within the organization, you need to create file hash conditions for each version in use and for any new versions that are released.</target>
        </segment>
      </unit>
      <unit id="304">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">A publisher condition with a specific product version set</pc> If you create a publisher rule condition that uses the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Exactly</pc> version option, the rule cannot persist if a new version of the app is installed.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">A publisher condition with a specific product version set</pc> If you create a publisher rule condition that uses the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Exactly</pc> version option, the rule cannot persist if a new version of the app is installed.</target>
        </segment>
      </unit>
      <unit id="305">
        <segment state="initial">
          <source>A new publisher condition must be created, or the version must be edited in the rule to be made less specific.</source>
          <target>A new publisher condition must be created, or the version must be edited in the rule to be made less specific.</target>
        </segment>
      </unit>
      <unit id="306">
        <segment state="initial">
          <source>If an app is not digitally signed, you cannot use a publisher rule condition for that app.</source>
          <target>If an app is not digitally signed, you cannot use a publisher rule condition for that app.</target>
        </segment>
      </unit>
      <unit id="307">
        <segment state="initial">
          <source>AppLocker rules cannot be used to manage computers running a Windows operating system earlier than Windows Server 2008 R2 or Windows 7.</source>
          <target>AppLocker rules cannot be used to manage computers running a Windows operating system earlier than Windows Server 2008 R2 or Windows 7.</target>
        </segment>
      </unit>
      <unit id="308">
        <segment state="initial">
          <source>Software Restriction Policies must be used instead.</source>
          <target>Software Restriction Policies must be used instead.</target>
        </segment>
      </unit>
      <unit id="309">
        <segment state="initial">
          <source>If AppLocker rules are defined in a Group Policy Object (GPO), only those rules are applied.</source>
          <target>If AppLocker rules are defined in a Group Policy Object (GPO), only those rules are applied.</target>
        </segment>
      </unit>
      <unit id="310">
        <segment state="initial">
          <source>To ensure interoperability between Software Restriction Policies rules and AppLocker rules, define Software Restriction Policies rules and AppLocker rules in different GPOs.</source>
          <target>To ensure interoperability between Software Restriction Policies rules and AppLocker rules, define Software Restriction Policies rules and AppLocker rules in different GPOs.</target>
        </segment>
      </unit>
      <unit id="311">
        <segment state="initial">
          <source>The packaged apps and packaged apps installer rule collection is available on devices running at least Windows Server 2012 and Windows 8.</source>
          <target>The packaged apps and packaged apps installer rule collection is available on devices running at least Windows Server 2012 and Windows 8.</target>
        </segment>
      </unit>
      <unit id="312">
        <segment state="initial">
          <source>When the rules for the executable rule collection are enforced and the packaged apps and packaged app installers rule collection does not contain any rules, no packaged apps and packaged app installers are allowed to run.</source>
          <target>When the rules for the executable rule collection are enforced and the packaged apps and packaged app installers rule collection does not contain any rules, no packaged apps and packaged app installers are allowed to run.</target>
        </segment>
      </unit>
      <unit id="313">
        <segment state="initial">
          <source>In order to allow any packaged apps and packaged app installers, you must create rules for the packaged apps and packaged app installers rule collection.</source>
          <target>In order to allow any packaged apps and packaged app installers, you must create rules for the packaged apps and packaged app installers rule collection.</target>
        </segment>
      </unit>
      <unit id="314">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>When an AppLocker rule collection is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit only</pc>, the rules are not enforced.</source>
          <target>When an AppLocker rule collection is set to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Audit only</pc>, the rules are not enforced.</target>
        </segment>
      </unit>
      <unit id="315">
        <segment state="initial">
          <source>When a user runs an application that is included in the rule, the app is opened and runs normally, and information about that app is added to the AppLocker event log.</source>
          <target>When a user runs an application that is included in the rule, the app is opened and runs normally, and information about that app is added to the AppLocker event log.</target>
        </segment>
      </unit>
      <unit id="316">
        <segment state="initial">
          <source>A custom configured URL can be included in the message that is displayed when an app is blocked.</source>
          <target>A custom configured URL can be included in the message that is displayed when an app is blocked.</target>
        </segment>
      </unit>
      <unit id="317">
        <segment state="initial">
          <source>Expect an increase in the number of Help Desk calls initially because of blocked apps until users understand that they cannot run apps that are not allowed.</source>
          <target>Expect an increase in the number of Help Desk calls initially because of blocked apps until users understand that they cannot run apps that are not allowed.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>