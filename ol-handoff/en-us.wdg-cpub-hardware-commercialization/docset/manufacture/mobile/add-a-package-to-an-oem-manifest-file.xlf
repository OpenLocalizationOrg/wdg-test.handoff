<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\manufacture\mobile\add-a-package-to-an-oem-manifest-file.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">9f3bc190db920c30c1ddd20a4e1b7f952426d34a</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>You can use a feature manifest (FM) file to define specific types of image builds that contain different sets of optional packages.</source>
          <target>You can use a feature manifest (FM) file to define specific types of image builds that contain different sets of optional packages.</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Add a package to an OEM manifest file</source>
          <target>Add a package to an OEM manifest file</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Add a package to an OEM manifest file</source>
          <target>Add a package to an OEM manifest file</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>You can use a feature manifest (FM) file to define specific types of image builds that contain different sets of optional packages.</source>
          <target>You can use a feature manifest (FM) file to define specific types of image builds that contain different sets of optional packages.</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/dn756745)</data>
        </originalData>
        <segment state="initial">
          <source>To learn more about FM files, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature manifest file contents</pc>.</source>
          <target>To learn more about FM files, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature manifest file contents</pc>.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/dn756740)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about additional logic that you can add to the build system, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature groupings and constraints</pc>.</source>
          <target>For more information about additional logic that you can add to the build system, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature groupings and constraints</pc>.</target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](creating-mobile-packages.md)</data>
        </originalData>
        <segment state="initial">
          <source>In this walkthrough, we will add the packages you created in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Creating mobile packages</pc>, to an FM file to define new OEM features that you can later include to build a mobile OS image.</source>
          <target>In this walkthrough, we will add the packages you created in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Creating mobile packages</pc>, to an FM file to define new OEM features that you can later include to build a mobile OS image.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>To add a package to an FM file</source>
          <target>To add a package to an FM file</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Create a new FM file or modify an existing FM file to include the two packages that you created and define feature IDs for these packages.</source>
          <target>Create a new FM file or modify an existing FM file to include the two packages that you created and define feature IDs for these packages.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>For an example of what the FM file looks like, see %WPDKCONTENTROOT%<ph dataRef="id1" id="ph1" />FMFiles<ph dataRef="id2" id="ph2" />arm<ph dataRef="id3" id="ph3" />MSOptionalFeatures.xml in your kit installation folder.</source>
          <target>For an example of what the FM file looks like, see %WPDKCONTENTROOT%<ph dataRef="id1" id="ph1" />FMFiles<ph dataRef="id2" id="ph2" />arm<ph dataRef="id3" id="ph3" />MSOptionalFeatures.xml in your kit installation folder.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>The following example shows what your FM file may look like.</source>
          <target>The following example shows what your FM file may look like.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OEMDevicePlatformPackages</pc> element and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BasePackages</pc> element are placeholders and are only there to show you what other options are available to configure in the FM file.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">OEMDevicePlatformPackages</pc> element and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">BasePackages</pc> element are placeholders and are only there to show you what other options are available to configure in the FM file.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/dn756745)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about creating an FM file and other elements that you may need to fully define your feature, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature manifest file contents</pc>.</source>
          <target>For more information about creating an FM file and other elements that you may need to fully define your feature, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature manifest file contents</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/hardware/dn756740)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about additional logic that you can add to the build system, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature groupings and constraints</pc>.</source>
          <target>For more information about additional logic that you can add to the build system, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Feature groupings and constraints</pc>.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">*</data>
          <data id="id8">*</data>
        </originalData>
        <segment state="initial">
          <source>In the first <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PackageFile</pc> element within the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">OEM</pc> section, replace <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SourceDirectoryA</pc> with the location of the folder that contains the Echo driver package and replace <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MyEchoDriver.spkg</pc> with the real name of the .spkg containing the driver.</source>
          <target>In the first <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PackageFile</pc> element within the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">OEM</pc> section, replace <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SourceDirectoryA</pc> with the location of the folder that contains the Echo driver package and replace <pc dataRefEnd="id8" dataRefStart="id7" id="p4">MyEchoDriver.spkg</pc> with the real name of the .spkg containing the driver.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
          <data id="id7">*</data>
          <data id="id8">*</data>
        </originalData>
        <segment state="initial">
          <source>In the second <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PackageFile</pc> element within the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">OEM</pc> section, replace <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SourceDirectoryB</pc> with the location of the folder that contains the customization setting package and replace <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Contoso.Customization.Notifications.QuickActions.spkg</pc> with the real name of the .spkg containing the customization setting.</source>
          <target>In the second <pc dataRefEnd="id2" dataRefStart="id1" id="p1">PackageFile</pc> element within the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">OEM</pc> section, replace <pc dataRefEnd="id6" dataRefStart="id5" id="p3">SourceDirectoryB</pc> with the location of the folder that contains the customization setting package and replace <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Contoso.Customization.Notifications.QuickActions.spkg</pc> with the real name of the .spkg containing the customization setting.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
        </originalData>
        <segment state="initial">
          <source>Save your FM file in the %WPDKCONTENTROOT%<ph dataRef="id1" id="ph1" />FMFiles<ph dataRef="id2" id="ph2" />arm folder.</source>
          <target>Save your FM file in the %WPDKCONTENTROOT%<ph dataRef="id1" id="ph1" />FMFiles<ph dataRef="id2" id="ph2" />arm folder.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>For this example, let's name the file as ContosoOptionalFeatures.xml.</source>
          <target>For this example, let's name the file as ContosoOptionalFeatures.xml.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>