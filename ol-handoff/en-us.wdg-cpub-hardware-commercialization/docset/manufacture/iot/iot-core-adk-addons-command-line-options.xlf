<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\manufacture\iot\iot-core-adk-addons-command-line-options.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">8ef39cb893f631dc78ec0b60522cecb531d8e318</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>IoT Core Add-ons command-line options</source>
          <target>IoT Core Add-ons command-line options</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>IoT Core Add-ons command-line options</source>
          <target>IoT Core Add-ons command-line options</target>
        </segment>
      </unit>
      <unit id="103">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=735028)</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>These tools are part of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 10 IoT Core (IoT Core) ADK Add-Ons</pc>, in the <ph dataRef="id3" id="ph1" />Tools folder.</source>
          <target>These tools are part of the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 10 IoT Core (IoT Core) ADK Add-Ons</pc>, in the <ph dataRef="id3" id="ph1" />Tools folder.</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](iot-core-adk-addons.md)</data>
        </originalData>
        <segment state="initial">
          <source>To learn more about these tools, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">What's in the Windows ADK IoT Core Add-ons</pc>.</source>
          <target>To learn more about these tools, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">What's in the Windows ADK IoT Core Add-ons</pc>.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>IoTCoreShell.lnk</source>
          <target>IoTCoreShell.lnk</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Opens the IoT Core Shell.</source>
          <target>Opens the IoT Core Shell.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>You should run this program as an administrator.</source>
          <target>You should run this program as an administrator.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>If you have installed the IoTCore ADK Addons in a different path, modify the shortcut to the installed path:</source>
          <target>If you have installed the IoTCore ADK Addons in a different path, modify the shortcut to the installed path:</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>To set this command to always run as an administrator:</source>
          <target>To set this command to always run as an administrator:</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In Windows Explorer, right-click the shortcut, and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</source>
          <target>In Windows Explorer, right-click the shortcut, and select <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>.</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">&amp;gt;</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">&amp;gt;</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source>In the Shortcut tab, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Advanced</pc>, and check <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run as administrator</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">OK</pc><ph dataRef="id8" id="ph2" /><pc dataRefEnd="id10" dataRefStart="id9" id="p4">Apply</pc>.</source>
          <target>In the Shortcut tab, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Advanced</pc>, and check <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run as administrator</pc><ph dataRef="id5" id="ph1" /><pc dataRefEnd="id7" dataRefStart="id6" id="p3">OK</pc><ph dataRef="id8" id="ph2" /><pc dataRefEnd="id10" dataRefStart="id9" id="p4">Apply</pc>.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>After you open IoTCoreShell, you'll be prompted to choose a default architecture (ARM or x86) for the devices you'll be building.</source>
          <target>After you open IoTCoreShell, you'll be prompted to choose a default architecture (ARM or x86) for the devices you'll be building.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>This sets your default starting set of system variables.</source>
          <target>This sets your default starting set of system variables.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>setenv.cmd</source>
          <target>setenv.cmd</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>: Architecture to be set.</source>
          <target>: Architecture to be set.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">`arm`</data>
          <data id="id2">`x86`</data>
        </originalData>
        <segment state="initial">
          <source>(<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />).</source>
          <target>(<ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" />).</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Description: This command resets your environment variables.</source>
          <target>Description: This command resets your environment variables.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\_</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">\_</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">\_</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">\_</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">\_</data>
          <data id="id16">**</data>
          <data id="id17">**</data>
          <data id="id18">\_</data>
        </originalData>
        <segment state="initial">
          <source>Common variables used include <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IOTADK<ph dataRef="id3" id="ph1" />ROOT</pc>, <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COMMON<ph dataRef="id6" id="ph2" />DIR</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p3">SRC<ph dataRef="id9" id="ph3" />DIR</pc>, <pc dataRefEnd="id11" dataRefStart="id10" id="p4">BLD<ph dataRef="id12" id="ph4" />DIR</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p5">PKGBLD<ph dataRef="id15" id="ph5" />DIR</pc>, <pc dataRefEnd="id17" dataRefStart="id16" id="p6">TOOLS<ph dataRef="id18" id="ph6" />DIR</pc>, and more.</source>
          <target>Common variables used include <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IOTADK<ph dataRef="id3" id="ph1" />ROOT</pc>, <pc dataRefEnd="id5" dataRefStart="id4" id="p2">COMMON<ph dataRef="id6" id="ph2" />DIR</pc>, <pc dataRefEnd="id8" dataRefStart="id7" id="p3">SRC<ph dataRef="id9" id="ph3" />DIR</pc>, <pc dataRefEnd="id11" dataRefStart="id10" id="p4">BLD<ph dataRef="id12" id="ph4" />DIR</pc>, <pc dataRefEnd="id14" dataRefStart="id13" id="p5">PKGBLD<ph dataRef="id15" id="ph5" />DIR</pc>, <pc dataRefEnd="id17" dataRefStart="id16" id="p6">TOOLS<ph dataRef="id18" id="ph6" />DIR</pc>, and more.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Open setenv.cmd in a text editor to see the full list of variables set.</source>
          <target>Open setenv.cmd in a text editor to see the full list of variables set.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>setversion.cmd</source>
          <target>setversion.cmd</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>: Four-part version number to be used for packages</source>
          <target>: Four-part version number to be used for packages</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Description: This command sets the version numbers used when creating a package with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">createpkg.cmd</pc> or a provisioning package with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">createprovpkg.cmd</pc>.</source>
          <target>Description: This command sets the version numbers used when creating a package with <pc dataRefEnd="id2" dataRefStart="id1" id="p1">createpkg.cmd</pc> or a provisioning package with <pc dataRefEnd="id4" dataRefStart="id3" id="p2">createprovpkg.cmd</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>(Why a four-part version number?</source>
          <target>(Why a four-part version number?</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../../service/mobile/update-requirements.md)</data>
        </originalData>
        <segment state="initial">
          <source>Learn about versioning schemes in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Update requirements</pc>.)</source>
          <target>Learn about versioning schemes in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Update requirements</pc>.)</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">\_</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>This version information is stored in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">%PRJ<ph dataRef="id3" id="ph1" />DIR%<ph dataRef="id4" id="ph2" />versioninfo.txt</pc> and loaded back when the IoT Core Shell is launched again.</source>
          <target>This version information is stored in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">%PRJ<ph dataRef="id3" id="ph1" />DIR%<ph dataRef="id4" id="ph2" />versioninfo.txt</pc> and loaded back when the IoT Core Shell is launched again.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Note that whenever the package contents are changed, the version has to be updated and all packages need to be recreated.</source>
          <target>Note that whenever the package contents are changed, the version has to be updated and all packages need to be recreated.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>buildpkg.cmd</source>
          <target>buildpkg.cmd</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>: Use this to refer to the package by its ComponentName.SubComponent Name.</source>
          <target>: Use this to refer to the package by its ComponentName.SubComponent Name.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>: Use this to refer to the package by its package definition XML file.</source>
          <target>: Use this to refer to the package by its package definition XML file.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>: Use this to build all packages in the \Sources-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages folder.</source>
          <target>: Use this to build all packages in the \Sources-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages folder.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>This is the same as the buildallpackages command.</source>
          <target>This is the same as the buildallpackages command.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">\&amp;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>: Use this to erase everything in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder.</source>
          <target>: Use this to erase everything in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Recommended before building all packages.</source>
          <target>Recommended before building all packages.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>: Optional, used to specify a version number.</source>
          <target>: Optional, used to specify a version number.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>If you don't specify one, the default is to use the version defined in the variable %BSP<ph dataRef="id1" id="ph1" />VERSION%.</source>
          <target>If you don't specify one, the default is to use the version defined in the variable %BSP<ph dataRef="id1" id="ph1" />VERSION%.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Description: Builds a package from \Sources-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages.</source>
          <target>Description: Builds a package from \Sources-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages.</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">\&amp;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Buildpkg saves the package in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder as a .cab file (example: Contoso.Provisioning.Auto.cab).</source>
          <target>Buildpkg saves the package in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder as a .cab file (example: Contoso.Provisioning.Auto.cab).</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">\&amp;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>For troubleshooting, Buildpkg saves logs at \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs\logs.</source>
          <target>For troubleshooting, Buildpkg saves logs at \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs\logs.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>createpkg.cmd</source>
          <target>createpkg.cmd</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">`createpkg &lt;packagefile.pkg.xml&gt;/&lt;CompName.SubCompName&gt; [version]`</data>
        </originalData>
        <segment state="initial">
          <source>Usage: <ph dataRef="id1" id="ph1" /> Parameters:</source>
          <target>Usage: <ph dataRef="id1" id="ph1" /> Parameters:</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>: Use this to identify the package by its package definition XML file.</source>
          <target>: Use this to identify the package by its package definition XML file.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>: Use this to identify the package by its ComponentName.SubComponent Name.</source>
          <target>: Use this to identify the package by its ComponentName.SubComponent Name.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>: Optional, used to specify a version number.</source>
          <target>: Optional, used to specify a version number.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>If you don't specify one, the default is to use the version defined in the variable %BSP<ph dataRef="id1" id="ph1" />VERSION%.</source>
          <target>If you don't specify one, the default is to use the version defined in the variable %BSP<ph dataRef="id1" id="ph1" />VERSION%.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Description: Creates a packaging definition file (.pkg.xml) using the pkggen tool and parameters set in the environment defined by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IoTCoreShell.lnk</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">setversion.cmd</pc>.</source>
          <target>Description: Creates a packaging definition file (.pkg.xml) using the pkggen tool and parameters set in the environment defined by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IoTCoreShell.lnk</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">setversion.cmd</pc>.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">\&amp;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Createpkg saves the package in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder as a .cab file (example: Contoso.Provisioning.Auto.cab).</source>
          <target>Createpkg saves the package in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder as a .cab file (example: Contoso.Provisioning.Auto.cab).</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Examples:</source>
          <target>Examples:</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>createprovpkg.cmd</source>
          <target>createprovpkg.cmd</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>: Input file with Windows Customizations contents</source>
          <target>: Input file with Windows Customizations contents</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>: Output filename (.ppkg) with full path</source>
          <target>: Output filename (.ppkg) with full path</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Description: Creates a provisioning package using the icd.exe tool and parameters set in the environment defined by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IoTCoreShell.lnk</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">setversion.cmd</pc>.</source>
          <target>Description: Creates a provisioning package using the icd.exe tool and parameters set in the environment defined by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IoTCoreShell.lnk</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">setversion.cmd</pc>.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>The output file (.ppkg) is created at the specified output location.</source>
          <target>The output file (.ppkg) is created at the specified output location.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>createupdatepkgs.cmd</source>
          <target>createupdatepkgs.cmd</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>: Name of the update.</source>
          <target>: Name of the update.</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Description: Creates an update package using the packaging definition files (.pkg.xml) in the update folder.</source>
          <target>Description: Creates an update package using the packaging definition files (.pkg.xml) in the update folder.</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>It uses the pkggen tool and parameters set in the environment defined by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IoTCoreShell.lnk</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">setversion.cmd</pc>.</source>
          <target>It uses the pkggen tool and parameters set in the environment defined by <pc dataRefEnd="id2" dataRefStart="id1" id="p1">IoTCoreShell.lnk</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">setversion.cmd</pc>.</target>
        </segment>
      </unit>
      <unit id="171">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">&amp;lt;</data>
          <data id="id3">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The output files are stored in the Build directory (%BLD<ph dataRef="id1" id="ph1" />DIR%), in the <ph dataRef="id2" id="ph2" />updatename<ph dataRef="id3" id="ph3" /> folder.</source>
          <target>The output files are stored in the Build directory (%BLD<ph dataRef="id1" id="ph1" />DIR%), in the <ph dataRef="id2" id="ph2" />updatename<ph dataRef="id3" id="ph3" /> folder.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>In this example, the output is stored at %BLD<ph dataRef="id1" id="ph1" />DIR%<ph dataRef="id2" id="ph2" />Update1<ph dataRef="id3" id="ph3" />.</source>
          <target>In this example, the output is stored at %BLD<ph dataRef="id1" id="ph1" />DIR%<ph dataRef="id2" id="ph2" />Update1<ph dataRef="id3" id="ph3" />.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>createimage.cmd</source>
          <target>createimage.cmd</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>: Name of the product to be built.</source>
          <target>: Name of the product to be built.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Retail</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Test</pc></source>
          <target>: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Retail</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Test</pc></target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>Description: Creates the image file (FFU), using the product-specific packages.</source>
          <target>Description: Creates the image file (FFU), using the product-specific packages.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>It uses the createpkg.cmd with the imggen tool and the parameters set in the command environment.</source>
          <target>It uses the createpkg.cmd with the imggen tool and the parameters set in the command environment.</target>
        </segment>
      </unit>
      <unit id="181">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>The output files are available in the Build (%BLD<ph dataRef="id1" id="ph1" />DIR%) folder.</source>
          <target>The output files are available in the Build (%BLD<ph dataRef="id1" id="ph1" />DIR%) folder.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\\&lt;productname&gt;\\</data>
        </originalData>
        <segment state="initial">
          <source>createupdatepkgs saves the FFU at %BLD<ph dataRef="id1" id="ph1" />DIR%<ph dataRef="id2" id="ph2" />(Test or Retail)</source>
          <target>createupdatepkgs saves the FFU at %BLD<ph dataRef="id1" id="ph1" />DIR%<ph dataRef="id2" id="ph2" />(Test or Retail)</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>inf2cab.cmd</source>
          <target>inf2cab.cmd</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>: Required, input file for the driver.</source>
          <target>: Required, input file for the driver.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>: Optional, refers to the driver package by its ComponentName.SubComponent Name.</source>
          <target>: Optional, refers to the driver package by its ComponentName.SubComponent Name.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Description: Converts a .inf driver package to a .cab file.</source>
          <target>Description: Converts a .inf driver package to a .cab file.</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">\&amp;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Inf2cab saves the package in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder  (example: Drivers.GPIO.cab).</source>
          <target>Inf2cab saves the package in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder  (example: Drivers.GPIO.cab).</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>newappxpkg.cmd</source>
          <target>newappxpkg.cmd</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>: Required, input file for the Appx package.</source>
          <target>: Required, input file for the Appx package.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>: Optional, creates the working folder using the name: ComponentName.SubComponent.</source>
          <target>: Optional, creates the working folder using the name: ComponentName.SubComponent.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Description: Creates a new working folder to help you convert Appx packages to .cab files.</source>
          <target>Description: Creates a new working folder to help you convert Appx packages to .cab files.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>After using this command, use the buildpkg command to create your final .cab file.</source>
          <target>After using this command, use the buildpkg command to create your final .cab file.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Note: This tool expects a subfolder named "dependencies" with any of the .appx dependency packages.</source>
          <target>Note: This tool expects a subfolder named "dependencies" with any of the .appx dependency packages.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>This command creates the working folder in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</source>
          <target>This command creates the working folder in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>If you run this command without any variables, you'll also see the other working folders in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</source>
          <target>If you run this command without any variables, you'll also see the other working folders in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>newdrvpkg.cmd</source>
          <target>newdrvpkg.cmd</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>: Required, input .inf file for the driver package.</source>
          <target>: Required, input .inf file for the driver package.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>: Optional, creates the working folder using the name: ComponentName.SubComponent.</source>
          <target>: Optional, creates the working folder using the name: ComponentName.SubComponent.</target>
        </segment>
      </unit>
      <unit id="208">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>The default is Drivers.<ph dataRef="id1" id="ph1" />filename<ph dataRef="id2" id="ph2" />.</source>
          <target>The default is Drivers.<ph dataRef="id1" id="ph1" />filename<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>Description: Creates a new working folder to help you convert driver packages to .cab files.</source>
          <target>Description: Creates a new working folder to help you convert driver packages to .cab files.</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>After using this command, use the buildpkg command to create your final .cab file.</source>
          <target>After using this command, use the buildpkg command to create your final .cab file.</target>
        </segment>
      </unit>
      <unit id="211">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>This command creates the working folder in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</source>
          <target>This command creates the working folder in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</target>
        </segment>
      </unit>
      <unit id="212">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>If you run this command without any variables, you'll also see the other working folders in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</source>
          <target>If you run this command without any variables, you'll also see the other working folders in the \Source-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages\ folder.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>newcommonpkg.cmd</source>
          <target>newcommonpkg.cmd</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>: Required, creates the working folder using the name ComponentName.SubComponent.</source>
          <target>: Required, creates the working folder using the name ComponentName.SubComponent.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>Description: Creates a new working folder to help you save files, folders, registry keys, and provisioning packages as .cab files.</source>
          <target>Description: Creates a new working folder to help you save files, folders, registry keys, and provisioning packages as .cab files.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>After using this command, use the buildpkg command to create your final .cab file.</source>
          <target>After using this command, use the buildpkg command to create your final .cab file.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>This command creates the working folder in the \Common\Packages\ folder.</source>
          <target>This command creates the working folder in the \Common\Packages\ folder.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>If you run this command without any variables, you'll also see the other working folders in the \Common\Packages\ folder.</source>
          <target>If you run this command without any variables, you'll also see the other working folders in the \Common\Packages\ folder.</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>newproduct.cmd</source>
          <target>newproduct.cmd</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>: Name of the product to be created</source>
          <target>: Name of the product to be created</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>Description: Creates a new working product directory under Products and copies the contents from the template file.</source>
          <target>Description: Creates a new working product directory under Products and copies the contents from the template file.</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>newupdate.cmd</source>
          <target>newupdate.cmd</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>: Name of the update to be created</source>
          <target>: Name of the update to be created</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>: Version number (x.y.z.a)</source>
          <target>: Version number (x.y.z.a)</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Description: Creates a new working directory under Updates and copies the contents from the template file.</source>
          <target>Description: Creates a new working directory under Updates and copies the contents from the template file.</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>Older tools</source>
          <target>Older tools</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>buildallpackages.cmd</source>
          <target>buildallpackages.cmd</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>This tool has been replaced with the tool: buildpkg All.</source>
          <target>This tool has been replaced with the tool: buildpkg All.</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="240">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Description: Builds all of the packages in \Sources-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages, including a few sample packages that help do things like install apps.</source>
          <target>Description: Builds all of the packages in \Sources-<ph dataRef="id1" id="ph1" />arch<ph dataRef="id2" id="ph2" />\Packages, including a few sample packages that help do things like install apps.</target>
        </segment>
      </unit>
      <unit id="241">
        <originalData>
          <data id="id1">\&amp;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Buildallpackages saves the packages in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder as .cab files (example: Contoso.Provisioning.Auto.cab).</source>
          <target>Buildallpackages saves the packages in the \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs folder as .cab files (example: Contoso.Provisioning.Auto.cab).</target>
        </segment>
      </unit>
      <unit id="242">
        <originalData>
          <data id="id1">\&amp;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>For troubleshooting, BuildAllPackages saves logs at \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs\logs.</source>
          <target>For troubleshooting, BuildAllPackages saves logs at \Build<ph dataRef="id1" id="ph1" />lt;arch<ph dataRef="id2" id="ph2" />\pkgs\logs.</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>newpkg.cmd</source>
          <target>newpkg.cmd</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>Usage:</source>
          <target>Usage:</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>This tool has been replaced with the tools: newappxpkg, newdrvpkg, and newcommonpkg.</source>
          <target>This tool has been replaced with the tools: newappxpkg, newdrvpkg, and newcommonpkg.</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>Parameters:</source>
          <target>Parameters:</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>:       The type of package created.</source>
          <target>:       The type of package created.</target>
        </segment>
      </unit>
      <unit id="249">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>Must be: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pkgAppx</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">pkgDrv</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">pkgFile</pc>.</source>
          <target>Must be: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">pkgAppx</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">pkgDrv</pc>, or <pc dataRefEnd="id6" dataRefStart="id5" id="p3">pkgFile</pc>.</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>:     Component name for the package.</source>
          <target>:     Component name for the package.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Examples include "App", "Driver", "File", "Registry", though you can use any naming scheme you like.</source>
          <target>Examples include "App", "Driver", "File", "Registry", though you can use any naming scheme you like.</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>: Sub-component name for the package.</source>
          <target>: Sub-component name for the package.</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>Examples include "Blinky"</source>
          <target>Examples include "Blinky"</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>Description: Creates a new working package directory under Packages, and creates a package definition file using a template file.</source>
          <target>Description: Creates a new working package directory under Packages, and creates a package definition file using a template file.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>Some of these package definition files include sample entries to help you add more items.</source>
          <target>Some of these package definition files include sample entries to help you add more items.</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>For example, the pkgFile type includes a sample entry for a Registry Key.</source>
          <target>For example, the pkgFile type includes a sample entry for a Registry Key.</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>Example:</source>
          <target>Example:</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>What's in the Windows ADK IoT Core Add-ons</source>
          <target>What's in the Windows ADK IoT Core Add-ons</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>IoT Core manufacturing guides</source>
          <target>IoT Core manufacturing guides</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>