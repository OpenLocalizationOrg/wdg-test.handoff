<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\manufacture\desktop\winpe-add-packages--optional-components-reference.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">902c88018ba2b8e48acbbe218f7c6c97cdd8d47f</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>WinPE: Add packages (Optional Components Reference)</source>
          <target>WinPE: Add packages (Optional Components Reference)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>WinPE: Add packages (Optional Components Reference)</source>
          <target>WinPE: Add packages (Optional Components Reference)</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>WinPE: Add packages (Optional Components Reference)</source>
          <target>WinPE: Add packages (Optional Components Reference)</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Add feature packages, also known as optional components, to Windows PE (WinPE).</source>
          <target>Add feature packages, also known as optional components, to Windows PE (WinPE).</target>
        </segment>
      </unit>
      <unit id="105">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Languages</pc>: When you install each optional component, you must first install the language-neutral optional component and then install the language-specific optional component.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Languages</pc>: When you install each optional component, you must first install the language-neutral optional component and then install the language-specific optional component.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>The required language resources must be the same version as the language-neutral resources.</source>
          <target>The required language resources must be the same version as the language-neutral resources.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Language resources are in a folder that has the same name as the language that is installed in the directory of optional components.</source>
          <target>Language resources are in a folder that has the same name as the language that is installed in the directory of optional components.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Adding optional components</source>
          <target>Adding optional components</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
          <data id="id5">\\</data>
          <data id="id6">\\</data>
          <data id="id7">\\</data>
          <data id="id8">\_</data>
          <data id="id9">\\</data>
        </originalData>
        <segment state="initial">
          <source>Optional components are included in the Windows Assessment and Deployment Kit (Windows ADK), in the C:<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />Windows Kits<ph dataRef="id3" id="ph3" />10<ph dataRef="id4" id="ph4" />Assessment and Deployment Kit<ph dataRef="id5" id="ph5" />Windows Preinstallation Environment<ph dataRef="id6" id="ph6" />amd64<ph dataRef="id7" id="ph7" />WinPE<ph dataRef="id8" id="ph8" />OCs<ph dataRef="id9" id="ph9" /> folder.</source>
          <target>Optional components are included in the Windows Assessment and Deployment Kit (Windows ADK), in the C:<ph dataRef="id1" id="ph1" />Program Files<ph dataRef="id2" id="ph2" />Windows Kits<ph dataRef="id3" id="ph3" />10<ph dataRef="id4" id="ph4" />Assessment and Deployment Kit<ph dataRef="id5" id="ph5" />Windows Preinstallation Environment<ph dataRef="id6" id="ph6" />amd64<ph dataRef="id7" id="ph7" />WinPE<ph dataRef="id8" id="ph8" />OCs<ph dataRef="id9" id="ph9" /> folder.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Get the Windows Assessment and Deployment Kit with Windows PE tools</source>
          <target>Get the Windows Assessment and Deployment Kit with Windows PE tools</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=526803)</data>
        </originalData>
        <segment state="initial">
          <source>Install the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Assessment and Deployment Kit (Windows ADK) Technical Reference</pc>, including the Windows PE feature.</source>
          <target>Install the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows Assessment and Deployment Kit (Windows ADK) Technical Reference</pc>, including the Windows PE feature.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Create a set of either 32-bit or 64-bit Windows PE files</source>
          <target>Create a set of either 32-bit or 64-bit Windows PE files</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc>, and type <pc dataRefEnd="id4" dataRefStart="id3" id="p2">deployment</pc>.</source>
          <target>Click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Start</pc>, and type <pc dataRefEnd="id4" dataRefStart="id3" id="p2">deployment</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Right-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deployment and Imaging Tools Environment</pc> and then select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run as administrator</pc>.</source>
          <target>Right-click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deployment and Imaging Tools Environment</pc> and then select <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Run as administrator</pc>.</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deployment Tools and Imaging Environment</pc>, copy the Windows PE files for the PCs you want to boot.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deployment Tools and Imaging Environment</pc>, copy the Windows PE files for the PCs you want to boot.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>The 64-bit version can boot 64-bit UEFI and 64-bit BIOS PCs.</source>
          <target>The 64-bit version can boot 64-bit UEFI and 64-bit BIOS PCs.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>The 32-bit version can boot 32-bit UEFI, 32-bit BIOS, and 64-bit BIOS PCs.</source>
          <target>The 32-bit version can boot 32-bit UEFI, 32-bit BIOS, and 64-bit BIOS PCs.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Mount the Windows PE boot image</source>
          <target>Mount the Windows PE boot image</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Mount the Windows PE image.</source>
          <target>Mount the Windows PE image.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Add optional components (packages or .cab files)</source>
          <target>Add optional components (packages or .cab files)</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Add the optional component into Windows PE.</source>
          <target>Add the optional component into Windows PE.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>To add optional components, you need to add both the optional component and its associated language packs.</source>
          <target>To add optional components, you need to add both the optional component and its associated language packs.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Important</source>
          <target>Important</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Some optional components have prerequisites that must be installed in order.</source>
          <target>Some optional components have prerequisites that must be installed in order.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>See the list of optional components on this page.</source>
          <target>See the list of optional components on this page.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Verify that the optional component is part of the image:</source>
          <target>Verify that the optional component is part of the image:</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Review the resulting list of packages and verify that the list contains the optional component and its associated language pack.</source>
          <target>Review the resulting list of packages and verify that the list contains the optional component and its associated language pack.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Add more languages to images that include optional components</source>
          <target>Add more languages to images that include optional components</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>List the optional components in the Windows PE image:</source>
          <target>List the optional components in the Windows PE image:</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Review the resulting list of packages, and add the corresponding language packs for each package in the image, including the base Windows PE language pack.</source>
          <target>Review the resulting list of packages, and add the corresponding language packs for each package in the image, including the base Windows PE language pack.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>where …</source>
          <target>where …</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">\_</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
        </originalData>
        <segment state="initial">
          <source>WinPE<ph dataRef="id1" id="ph1" />OCs<ph dataRef="id2" id="ph2" />fr-fr<ph dataRef="id3" id="ph3" />lp.cab represents the base Windows PE language pack.</source>
          <target>WinPE<ph dataRef="id1" id="ph1" />OCs<ph dataRef="id2" id="ph2" />fr-fr<ph dataRef="id3" id="ph3" />lp.cab represents the base Windows PE language pack.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>If you're adding language packs for Japan, Korea, or China, add the font packages for these languages.</source>
          <target>If you're adding language packs for Japan, Korea, or China, add the font packages for these languages.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Here's an example for Japan:</source>
          <target>Here's an example for Japan:</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Verify that the language packs are part of the image:</source>
          <target>Verify that the language packs are part of the image:</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Review the resulting list of packages and verify that the for each optional component, including the base Windows PE image, that there is an associated language pack.</source>
          <target>Review the resulting list of packages and verify that the for each optional component, including the base Windows PE image, that there is an associated language pack.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Change the regional settings to the language you'd like to use:</source>
          <target>Change the regional settings to the language you'd like to use:</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">`wpeutil setmuilanguage`</data>
        </originalData>
        <segment state="initial">
          <source>To switch languages while in Windows PE, use <ph dataRef="id1" id="ph1" />.</source>
          <target>To switch languages while in Windows PE, use <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Unmount the Windows PE image and create media</source>
          <target>Unmount the Windows PE image and create media</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Unmount the Windows PE image.</source>
          <target>Unmount the Windows PE image.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Create bootable media, such as a USB flash drive.</source>
          <target>Create bootable media, such as a USB flash drive.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Boot the media.</source>
          <target>Boot the media.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Windows PE starts automatically.</source>
          <target>Windows PE starts automatically.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>After the Windows PE window appears, the wpeinit command runs automatically.</source>
          <target>After the Windows PE window appears, the wpeinit command runs automatically.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>This may take a few minutes.</source>
          <target>This may take a few minutes.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Verify your customizations.</source>
          <target>Verify your customizations.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>List of Optional Components</source>
          <target>List of Optional Components</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Area/Optional component name</source>
          <target>Area/Optional component name</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Database/WinPE-MDAC</source>
          <target>Database/WinPE-MDAC</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>WinPE-MDAC supports Microsoft® Open Database Connectivity (ODBC), OLE DB, and Microsoft ActiveX® Data Objects (ADO).</source>
          <target>WinPE-MDAC supports Microsoft® Open Database Connectivity (ODBC), OLE DB, and Microsoft ActiveX® Data Objects (ADO).</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>This set of technologies provides access to various data sources, such as Microsoft SQL Server®.</source>
          <target>This set of technologies provides access to various data sources, such as Microsoft SQL Server®.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>For example, this access enables queries to Microsoft SQL Server installations that contain ADO objects.</source>
          <target>For example, this access enables queries to Microsoft SQL Server installations that contain ADO objects.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>You can build a dynamic answer file from unique system information.</source>
          <target>You can build a dynamic answer file from unique system information.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Similarly, you can build data-driven client or server applications that integrate information from a variety of data sources, both relational (SQL Server) and non-relational.</source>
          <target>Similarly, you can build data-driven client or server applications that integrate information from a variety of data sources, both relational (SQL Server) and non-relational.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>File management/WinPE-FMAPI</source>
          <target>File management/WinPE-FMAPI</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>WinPE-FMAPI provides access to the Windows PE File Management API (FMAPI) for discovering and restoring deleted files from unencrypted volumes.</source>
          <target>WinPE-FMAPI provides access to the Windows PE File Management API (FMAPI) for discovering and restoring deleted files from unencrypted volumes.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>The FMAPI also provides the ability to use a password or recovery key file for the discovery and recovery of deleted files from Windows BitLocker Drive Encryption encrypted volumes.</source>
          <target>The FMAPI also provides the ability to use a password or recovery key file for the discovery and recovery of deleted files from Windows BitLocker Drive Encryption encrypted volumes.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Fonts/WinPE-Fonts-Legacy</source>
          <target>Fonts/WinPE-Fonts-Legacy</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>WinPE-Fonts-Legacy contains 32 font files for various languages/writing scripts.</source>
          <target>WinPE-Fonts-Legacy contains 32 font files for various languages/writing scripts.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Some of these fonts are no longer used as UI fonts.</source>
          <target>Some of these fonts are no longer used as UI fonts.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>For example, scripts such as Bangla, Devanagari, Gujarati, Gurmukhi, Kannada, Malayalam, Odia, Tamil, Telugu, and Sinhalese were covered by Mangal, Latha, Vrinda, Gautami, Kalinga, artika, Raavi, Shruti, and Tunga, but in Windows 8, they were all unified under Nirmala UI, a single, pan-Indian font.</source>
          <target>For example, scripts such as Bangla, Devanagari, Gujarati, Gurmukhi, Kannada, Malayalam, Odia, Tamil, Telugu, and Sinhalese were covered by Mangal, Latha, Vrinda, Gautami, Kalinga, artika, Raavi, Shruti, and Tunga, but in Windows 8, they were all unified under Nirmala UI, a single, pan-Indian font.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>The following list shows the fonts and languages included in this optional component:</source>
          <target>The following list shows the fonts and languages included in this optional component:</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>estre.ttf Estrangelo Edessa (Syriac)</source>
          <target>estre.ttf Estrangelo Edessa (Syriac)</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>mvboli.ttf MV Boli (Thaana)</source>
          <target>mvboli.ttf MV Boli (Thaana)</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>KhmerUI.ttf Khmer UI (Khmer UI)</source>
          <target>KhmerUI.ttf Khmer UI (Khmer UI)</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>KhmerUIB.ttf Khmer UI Bold (Khmer UI)</source>
          <target>KhmerUIB.ttf Khmer UI Bold (Khmer UI)</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Laoui.ttf Lao UI (Lao)</source>
          <target>Laoui.ttf Lao UI (Lao)</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Laouib.ttf Lao UI Bold (Lao)</source>
          <target>Laouib.ttf Lao UI Bold (Lao)</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>daunpenh.ttf DaunPenh (Khmer)</source>
          <target>daunpenh.ttf DaunPenh (Khmer)</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>moolbor.ttf MoolBoran (Khmer)</source>
          <target>moolbor.ttf MoolBoran (Khmer)</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>dokchamp.ttf DokChampa (Lao)</source>
          <target>dokchamp.ttf DokChampa (Lao)</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Himalaya.ttf Microsoft Himalaya (Tibetan)</source>
          <target>Himalaya.ttf Microsoft Himalaya (Tibetan)</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>monbaiti.ttf Mongolian Baiti (Mongolian)</source>
          <target>monbaiti.ttf Mongolian Baiti (Mongolian)</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>MSYI.ttf Microsoft Yi Baiti (Yi Syllables)</source>
          <target>MSYI.ttf Microsoft Yi Baiti (Yi Syllables)</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>nyala.ttf Nyala (Ethiopic)</source>
          <target>nyala.ttf Nyala (Ethiopic)</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">&amp;amp;</data>
        </originalData>
        <segment state="initial">
          <source>sylfaen.ttf Sylfaen (Armenian <ph dataRef="id1" id="ph1" /> Georgian)</source>
          <target>sylfaen.ttf Sylfaen (Armenian <ph dataRef="id1" id="ph1" /> Georgian)</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>euphemia.ttf Euphemia (Unified Canadian Aboriginal Syllabics)</source>
          <target>euphemia.ttf Euphemia (Unified Canadian Aboriginal Syllabics)</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>plantc.ttf Plantagenet Cherokee (Cherokee)</source>
          <target>plantc.ttf Plantagenet Cherokee (Cherokee)</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Fonts/WinPE-Font Support-JA-JP</source>
          <target>Fonts/WinPE-Font Support-JA-JP</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>WinPE-Font Support-JA-JP contains two Japanese font families that are packaged as TrueType Collection (TTC) files.</source>
          <target>WinPE-Font Support-JA-JP contains two Japanese font families that are packaged as TrueType Collection (TTC) files.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>MS Gothic is the Windows Japanese user interface font in versions of Windows before Windows Vista.</source>
          <target>MS Gothic is the Windows Japanese user interface font in versions of Windows before Windows Vista.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>MS Gothic contains a large character set and embedded bitmaps to ensure legible rendering at small sizes.</source>
          <target>MS Gothic contains a large character set and embedded bitmaps to ensure legible rendering at small sizes.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Meiryo, a font that was introduced in Windows Vista, is designed specifically for use in a Microsoft ClearType® rendering environment.</source>
          <target>Meiryo, a font that was introduced in Windows Vista, is designed specifically for use in a Microsoft ClearType® rendering environment.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Meiryo does not include embedded bitmaps.</source>
          <target>Meiryo does not include embedded bitmaps.</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Instead, Meiryo relies on hinting instructions to produce legible characters at small sizes.</source>
          <target>Instead, Meiryo relies on hinting instructions to produce legible characters at small sizes.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>In addition, the module contains two Japanese bitmap fonts, App932.fon and Vga932.fon.</source>
          <target>In addition, the module contains two Japanese bitmap fonts, App932.fon and Vga932.fon.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>The module also contains a bitmap-only TrueType font, Jpn_font.ttf.</source>
          <target>The module also contains a bitmap-only TrueType font, Jpn_font.ttf.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>This font is used on boot screens.</source>
          <target>This font is used on boot screens.</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Fonts/WinPE-Font Support-KO-KR</source>
          <target>Fonts/WinPE-Font Support-KO-KR</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>WinPE-Font Support-KO-KR contains three core Korean font families: Gulim, Batang and Malgun Gothic.</source>
          <target>WinPE-Font Support-KO-KR contains three core Korean font families: Gulim, Batang and Malgun Gothic.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Gulim is the legacy UI font and, as a TTC file, contains Gulim, GulimChe, Dotum and DotumChe.</source>
          <target>Gulim is the legacy UI font and, as a TTC file, contains Gulim, GulimChe, Dotum and DotumChe.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Batang is the legacy text font and is also a TTC file, containing Batang, BatangChe, GungSuh and GungSuhChe.</source>
          <target>Batang is the legacy text font and is also a TTC file, containing Batang, BatangChe, GungSuh and GungSuhChe.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Malgun Gothic, a font that was introduced in Windows Vista, is designed specifically for use in a ClearType rendering environment.</source>
          <target>Malgun Gothic, a font that was introduced in Windows Vista, is designed specifically for use in a ClearType rendering environment.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Malgun Gothic does not include embedded bitmaps and instead relies on hinting instructions to produce legible characters at small sizes.</source>
          <target>Malgun Gothic does not include embedded bitmaps and instead relies on hinting instructions to produce legible characters at small sizes.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Fonts/WinPE-Font Support-ZH-CN</source>
          <target>Fonts/WinPE-Font Support-ZH-CN</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>WinPE-Font Support-ZH-CN contains two Chinese font families that are packaged as TTC files.</source>
          <target>WinPE-Font Support-ZH-CN contains two Chinese font families that are packaged as TTC files.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Simsun is the Simplified Chinese user interface font in Windows versions before Windows Vista.</source>
          <target>Simsun is the Simplified Chinese user interface font in Windows versions before Windows Vista.</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Simsun contains embedded bitmaps to ensure legible rendering at small sizes.</source>
          <target>Simsun contains embedded bitmaps to ensure legible rendering at small sizes.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>The other TTC font is MingLiu.</source>
          <target>The other TTC font is MingLiu.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>MingLiu has embedded bitmaps and provides support for the Hong Kong Supplementary Character Set (HKSCS).</source>
          <target>MingLiu has embedded bitmaps and provides support for the Hong Kong Supplementary Character Set (HKSCS).</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>YaHei, a font that was introduced in Windows Vista, is designed specifically for use in a ClearType rendering environment.</source>
          <target>YaHei, a font that was introduced in Windows Vista, is designed specifically for use in a ClearType rendering environment.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>YaHei does not include embedded bitmaps.</source>
          <target>YaHei does not include embedded bitmaps.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>YaHei relies on hinting instructions to produce legible characters at small sizes.</source>
          <target>YaHei relies on hinting instructions to produce legible characters at small sizes.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>In addition, the module contains one bitmap-only TrueType font, Chs_boot.ttf.</source>
          <target>In addition, the module contains one bitmap-only TrueType font, Chs_boot.ttf.</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>This font is used on boot screens.</source>
          <target>This font is used on boot screens.</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Fonts/WinPE-Font Support-ZH-HK</source>
          <target>Fonts/WinPE-Font Support-ZH-HK</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>and</source>
          <target>and</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>WinPE-Font Support-ZH-TW</source>
          <target>WinPE-Font Support-ZH-TW</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>The Hong Kong and Taiwan optional components contain two Chinese font families that are packaged as TTC files.</source>
          <target>The Hong Kong and Taiwan optional components contain two Chinese font families that are packaged as TTC files.</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>Simsun is the Simplified Chinese user interface font in Windows versions before Windows Vista.</source>
          <target>Simsun is the Simplified Chinese user interface font in Windows versions before Windows Vista.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>Simsun contains embedded bitmaps to ensure legible rendering at small sizes.</source>
          <target>Simsun contains embedded bitmaps to ensure legible rendering at small sizes.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>MingLiu has embedded bitmaps and provides support for the HKSCS.</source>
          <target>MingLiu has embedded bitmaps and provides support for the HKSCS.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>JhengHei, a font that was introduced in Windows Vista, is designed specifically for use in a ClearType rendering environment.</source>
          <target>JhengHei, a font that was introduced in Windows Vista, is designed specifically for use in a ClearType rendering environment.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>JhengHei does not include embedded bitmaps.</source>
          <target>JhengHei does not include embedded bitmaps.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>JhengHei relies on hinting instructions to produce legible characters at small sizes.</source>
          <target>JhengHei relies on hinting instructions to produce legible characters at small sizes.</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>In addition, the module contains one bitmap-only TrueType font, Cht_boot.ttf.</source>
          <target>In addition, the module contains one bitmap-only TrueType font, Cht_boot.ttf.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>This font is used on boot screens.</source>
          <target>This font is used on boot screens.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>HTML/WinPE-HTA</source>
          <target>HTML/WinPE-HTA</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>WinPE-HTA provides HTML Application (HTA) support to create GUI applications through the Windows Internet Explorer® script engine and HTML services.</source>
          <target>WinPE-HTA provides HTML Application (HTA) support to create GUI applications through the Windows Internet Explorer® script engine and HTML services.</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>These applications are trusted and display only the menus, icons, toolbars, and title information that you create.</source>
          <target>These applications are trusted and display only the menus, icons, toolbars, and title information that you create.</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>Microsoft .NET/WinPE-NetFX</source>
          <target>Microsoft .NET/WinPE-NetFX</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>WinPE-NetFX contains a subset of the .NET Framework 4.5 that is designed for client applications.</source>
          <target>WinPE-NetFX contains a subset of the .NET Framework 4.5 that is designed for client applications.</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>Not all Windows binaries are present in Windows PE, and therefore not all Windows APIs are present or usable.</source>
          <target>Not all Windows binaries are present in Windows PE, and therefore not all Windows APIs are present or usable.</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>Due to the limited API set, the following .NET Framework features have no or reduced functionality in Windows PE:</source>
          <target>Due to the limited API set, the following .NET Framework features have no or reduced functionality in Windows PE:</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>Windows Presentation Foundation (WPF)</source>
          <target>Windows Presentation Foundation (WPF)</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>Windows Runtime</source>
          <target>Windows Runtime</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>.NET Framework Fusion APIs</source>
          <target>.NET Framework Fusion APIs</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>Windows Control Library event logging</source>
          <target>Windows Control Library event logging</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>.NET Framework COM Interoperability</source>
          <target>.NET Framework COM Interoperability</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>.NET Framework Cryptography Model</source>
          <target>.NET Framework Cryptography Model</target>
        </segment>
      </unit>
      <unit id="232">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-NetFX<ph dataRef="id5" id="ph5" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-NetFX<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>Network/WinPE-Dot3Svc</source>
          <target>Network/WinPE-Dot3Svc</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Adds support for the IEEE 802.X authentication protocol on wired networks.</source>
          <target>Adds support for the IEEE 802.X authentication protocol on wired networks.</target>
        </segment>
      </unit>
      <unit id="235">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](winpe-network-drivers-initializing-and-adding-drivers.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinPE Network Drivers: Initializing and adding drivers</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WinPE Network Drivers: Initializing and adding drivers</pc>.</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>Network/WinPE-PPPoE</source>
          <target>Network/WinPE-PPPoE</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>WinPE-PPPoE enables you to use Point-to-Point Protocol over Ethernet (PPPoE) to create, connect, disconnect, and delete PPPoE connections from Windows PE.</source>
          <target>WinPE-PPPoE enables you to use Point-to-Point Protocol over Ethernet (PPPoE) to create, connect, disconnect, and delete PPPoE connections from Windows PE.</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>PPPoE is a network protocol for encapsulating Point-to-Point Protocol (PPP) frames inside Ethernet frames.</source>
          <target>PPPoE is a network protocol for encapsulating Point-to-Point Protocol (PPP) frames inside Ethernet frames.</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>PPPoE enables Windows users to remotely connect their computers to the web.</source>
          <target>PPPoE enables Windows users to remotely connect their computers to the web.</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>By using PPPoE, users can virtually dial from one computer to another over an Ethernet network, to establish a point-to-point connection between the computers.</source>
          <target>By using PPPoE, users can virtually dial from one computer to another over an Ethernet network, to establish a point-to-point connection between the computers.</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>The computers can use this point-to-point connection to transport data packets.</source>
          <target>The computers can use this point-to-point connection to transport data packets.</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>Network/WinPE-RNDIS</source>
          <target>Network/WinPE-RNDIS</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>WinPE-RNDIS contains Remote Network Driver Interface Specification (Remote NDIS) support.</source>
          <target>WinPE-RNDIS contains Remote Network Driver Interface Specification (Remote NDIS) support.</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>WinPE-RNDIS enables network support for devices that implement the Remote NDIS specification over USB.</source>
          <target>WinPE-RNDIS enables network support for devices that implement the Remote NDIS specification over USB.</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>Remote NDIS defines a bus-independent message set and a description of how this message set operates over various I/O buses.</source>
          <target>Remote NDIS defines a bus-independent message set and a description of how this message set operates over various I/O buses.</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>Therefore, hardware vendors do not have to write an NDIS miniport device driver.</source>
          <target>Therefore, hardware vendors do not have to write an NDIS miniport device driver.</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>Because this Remote NDIS interface is standardized, one set of host drivers can support any number of bus-attached networking devices.</source>
          <target>Because this Remote NDIS interface is standardized, one set of host drivers can support any number of bus-attached networking devices.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>Network/WinPE-WDS-Tools</source>
          <target>Network/WinPE-WDS-Tools</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>WinPE-WDS-Tools includes APIs to enable the Image Capture tool and a multicast scenario that involves a custom Windows Deployment Services client.</source>
          <target>WinPE-WDS-Tools includes APIs to enable the Image Capture tool and a multicast scenario that involves a custom Windows Deployment Services client.</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>It must be installed if you intend to run the Windows Deployment Services client on a custom Windows PE image.</source>
          <target>It must be installed if you intend to run the Windows Deployment Services client on a custom Windows PE image.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>Network/WinPE-WiFi-Package</source>
          <target>Network/WinPE-WiFi-Package</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>Used by Windows RE for recovery scenarios.</source>
          <target>Used by Windows RE for recovery scenarios.</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>New in Windows 10.</source>
          <target>New in Windows 10.</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>Although this package has en-US in the file description, it is not language-specific, and does not need to be added or removed when changing the available languages.</source>
          <target>Although this package has en-US in the file description, it is not language-specific, and does not need to be added or removed when changing the available languages.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>Windows PowerShell/WinPE-PlatformID</source>
          <target>Windows PowerShell/WinPE-PlatformID</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>WinPE-PlatformID contains the Windows PowerShell cmdlets to retrieve the Platform Identifier of the physical machine.</source>
          <target>WinPE-PlatformID contains the Windows PowerShell cmdlets to retrieve the Platform Identifier of the physical machine.</target>
        </segment>
      </unit>
      <unit id="257">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
          <data id="id6">&lt;strong&gt;</data>
          <data id="id7">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />WinPE-SecureStartup<ph dataRef="id5" id="ph5" /> before you install <ph dataRef="id6" id="ph6" />WinPE-PlatformID<ph dataRef="id7" id="ph7" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /> and <ph dataRef="id4" id="ph4" />WinPE-SecureStartup<ph dataRef="id5" id="ph5" /> before you install <ph dataRef="id6" id="ph6" />WinPE-PlatformID<ph dataRef="id7" id="ph7" />.</target>
        </segment>
      </unit>
      <unit id="258">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>To use the Windows PowerShell cmdlet to retrieve the Platform Identifier, you will need install <ph dataRef="id1" id="ph1" />WinPE-PowerShell<ph dataRef="id2" id="ph2" /> package.</source>
          <target>To use the Windows PowerShell cmdlet to retrieve the Platform Identifier, you will need install <ph dataRef="id1" id="ph1" />WinPE-PowerShell<ph dataRef="id2" id="ph2" /> package.</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>Windows PowerShell/WinPE-PowerShell</source>
          <target>Windows PowerShell/WinPE-PowerShell</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>WinPE-PowerShell contains Windows PowerShell–based diagnostics that simplify using Windows Management Instrumentation (WMI) to query the hardware during manufacturing.</source>
          <target>WinPE-PowerShell contains Windows PowerShell–based diagnostics that simplify using Windows Management Instrumentation (WMI) to query the hardware during manufacturing.</target>
        </segment>
      </unit>
      <unit id="261">
        <segment state="initial">
          <source>You can create Windows PowerShell–based deployment and administrative Windows PE–based tools.</source>
          <target>You can create Windows PowerShell–based deployment and administrative Windows PE–based tools.</target>
        </segment>
      </unit>
      <unit id="262">
        <segment state="initial">
          <source>In addition to deployment, you can use Windows PowerShell for recovery scenarios.</source>
          <target>In addition to deployment, you can use Windows PowerShell for recovery scenarios.</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>Customers can boot in Windows RE and then use Windows PowerShell scripts to resolve issues.</source>
          <target>Customers can boot in Windows RE and then use Windows PowerShell scripts to resolve issues.</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source>Customers are not limited to the toolsets that run in Windows PE.</source>
          <target>Customers are not limited to the toolsets that run in Windows PE.</target>
        </segment>
      </unit>
      <unit id="265">
        <segment state="initial">
          <source>Similarly, you can build scripted offline solutions to recover some computers from no-boot scenarios.</source>
          <target>Similarly, you can build scripted offline solutions to recover some computers from no-boot scenarios.</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>WinPE-PowerShell has the following known limitations:</source>
          <target>WinPE-PowerShell has the following known limitations:</target>
        </segment>
      </unit>
      <unit id="267">
        <segment state="initial">
          <source>Windows PowerShell remoting is not supported.</source>
          <target>Windows PowerShell remoting is not supported.</target>
        </segment>
      </unit>
      <unit id="268">
        <segment state="initial">
          <source>Any cmdlets that have remoting functionality will return an error.</source>
          <target>Any cmdlets that have remoting functionality will return an error.</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source>The Windows PowerShell Integrated Scripting Environment (ISE) is not supported.</source>
          <target>The Windows PowerShell Integrated Scripting Environment (ISE) is not supported.</target>
        </segment>
      </unit>
      <unit id="270">
        <segment state="initial">
          <source>Windows PowerShell 2.0 is not supported.</source>
          <target>Windows PowerShell 2.0 is not supported.</target>
        </segment>
      </unit>
      <unit id="271">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&amp;gt;</data>
          <data id="id8">&lt;strong&gt;</data>
          <data id="id9">&lt;/strong&gt;</data>
          <data id="id10">&lt;strong&gt;</data>
          <data id="id11">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /> before you install <ph dataRef="id10" id="ph10" />WinPE-PowerShell<ph dataRef="id11" id="ph11" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /> before you install <ph dataRef="id10" id="ph10" />WinPE-PowerShell<ph dataRef="id11" id="ph11" />.</target>
        </segment>
      </unit>
      <unit id="272">
        <segment state="initial">
          <source>Windows PowerShell/WinPE-DismCmdlets</source>
          <target>Windows PowerShell/WinPE-DismCmdlets</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>WinPE-DismCmdlets contains the DISM PowerShell module, which includes cmdlets used for managing and servicing Windows images.</source>
          <target>WinPE-DismCmdlets contains the DISM PowerShell module, which includes cmdlets used for managing and servicing Windows images.</target>
        </segment>
      </unit>
      <unit id="274">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=290822)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deployment Imaging Servicing Management (DISM) Cmdlets in Windows PowerShell</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Deployment Imaging Servicing Management (DISM) Cmdlets in Windows PowerShell</pc>.</target>
        </segment>
      </unit>
      <unit id="275">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&amp;gt;</data>
          <data id="id8">&lt;strong&gt;</data>
          <data id="id9">&lt;/strong&gt;</data>
          <data id="id10">&amp;gt;</data>
          <data id="id11">&lt;strong&gt;</data>
          <data id="id12">&lt;/strong&gt;</data>
          <data id="id13">&lt;strong&gt;</data>
          <data id="id14">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /><ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />WinPE-PowerShell<ph dataRef="id12" id="ph12" /> before you install <ph dataRef="id13" id="ph13" />WinPE-DismCmdlets<ph dataRef="id14" id="ph14" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /><ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />WinPE-PowerShell<ph dataRef="id12" id="ph12" /> before you install <ph dataRef="id13" id="ph13" />WinPE-DismCmdlets<ph dataRef="id14" id="ph14" />.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source>Windows PowerShell/WinPE-SecureBootCmdlets</source>
          <target>Windows PowerShell/WinPE-SecureBootCmdlets</target>
        </segment>
      </unit>
      <unit id="277">
        <segment state="initial">
          <source>WinPE-SecureBootCmdlets contains the PowerShell cmdlets for managing the UEFI (Unified Extensible Firmware Interface) environment variables for Secure Boot.</source>
          <target>WinPE-SecureBootCmdlets contains the PowerShell cmdlets for managing the UEFI (Unified Extensible Firmware Interface) environment variables for Secure Boot.</target>
        </segment>
      </unit>
      <unit id="278">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&amp;gt;</data>
          <data id="id8">&lt;strong&gt;</data>
          <data id="id9">&lt;/strong&gt;</data>
          <data id="id10">&amp;gt;</data>
          <data id="id11">&lt;strong&gt;</data>
          <data id="id12">&lt;/strong&gt;</data>
          <data id="id13">&lt;strong&gt;</data>
          <data id="id14">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /><ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />WinPE-PowerShell<ph dataRef="id12" id="ph12" /> before you install <ph dataRef="id13" id="ph13" />WinPE-SecureBootCmdlets<ph dataRef="id14" id="ph14" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /><ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />WinPE-PowerShell<ph dataRef="id12" id="ph12" /> before you install <ph dataRef="id13" id="ph13" />WinPE-SecureBootCmdlets<ph dataRef="id14" id="ph14" />.</target>
        </segment>
      </unit>
      <unit id="279">
        <segment state="initial">
          <source>Windows PowerShell/WinPE-StorageWMI</source>
          <target>Windows PowerShell/WinPE-StorageWMI</target>
        </segment>
      </unit>
      <unit id="280">
        <segment state="initial">
          <source>WinPE-StorageWMI contains PowerShell cmdlets for storage management.</source>
          <target>WinPE-StorageWMI contains PowerShell cmdlets for storage management.</target>
        </segment>
      </unit>
      <unit id="281">
        <segment state="initial">
          <source>These cmdlets use the Windows Storage Management API (SMAPI) to manage local storage, such as disk, partition, and volume objects.</source>
          <target>These cmdlets use the Windows Storage Management API (SMAPI) to manage local storage, such as disk, partition, and volume objects.</target>
        </segment>
      </unit>
      <unit id="282">
        <segment state="initial">
          <source>Or, these cmdlets use the Windows SMAPI together with array storage management by using a storage management provider.</source>
          <target>Or, these cmdlets use the Windows SMAPI together with array storage management by using a storage management provider.</target>
        </segment>
      </unit>
      <unit id="283">
        <segment state="initial">
          <source>WinPE-StorageWMI also contains Internet SCSI (iSCSI) Initiator cmdlets for connecting a host computer or server to virtual disks on external iSCSI-based storage arrays through an Ethernet network adapter or iSCSI Host Bus Adapter (HBA).</source>
          <target>WinPE-StorageWMI also contains Internet SCSI (iSCSI) Initiator cmdlets for connecting a host computer or server to virtual disks on external iSCSI-based storage arrays through an Ethernet network adapter or iSCSI Host Bus Adapter (HBA).</target>
        </segment>
      </unit>
      <unit id="284">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">&lt;strong&gt;</data>
          <data id="id6">&lt;/strong&gt;</data>
          <data id="id7">&amp;gt;</data>
          <data id="id8">&lt;strong&gt;</data>
          <data id="id9">&lt;/strong&gt;</data>
          <data id="id10">&amp;gt;</data>
          <data id="id11">&lt;strong&gt;</data>
          <data id="id12">&lt;/strong&gt;</data>
          <data id="id13">&lt;strong&gt;</data>
          <data id="id14">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /><ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />WinPE-PowerShell<ph dataRef="id12" id="ph12" /> before you install <ph dataRef="id13" id="ph13" />WinPE-StorageWMI<ph dataRef="id14" id="ph14" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /><ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />WinPE-NetFX<ph dataRef="id6" id="ph6" /><ph dataRef="id7" id="ph7" /><ph dataRef="id8" id="ph8" />WinPE-Scripting<ph dataRef="id9" id="ph9" /><ph dataRef="id10" id="ph10" /><ph dataRef="id11" id="ph11" />WinPE-PowerShell<ph dataRef="id12" id="ph12" /> before you install <ph dataRef="id13" id="ph13" />WinPE-StorageWMI<ph dataRef="id14" id="ph14" />.</target>
        </segment>
      </unit>
      <unit id="285">
        <segment state="initial">
          <source>Recovery/WinPE-Rejuv</source>
          <target>Recovery/WinPE-Rejuv</target>
        </segment>
      </unit>
      <unit id="286">
        <segment state="initial">
          <source>WinPE-Rejuv is used by Windows Recovery Environment (Windows RE).</source>
          <target>WinPE-Rejuv is used by Windows Recovery Environment (Windows RE).</target>
        </segment>
      </unit>
      <unit id="287">
        <segment state="initial">
          <source>This package is included in the base winre.wim file.</source>
          <target>This package is included in the base winre.wim file.</target>
        </segment>
      </unit>
      <unit id="288">
        <segment state="initial">
          <source>Recovery/WinPE-SRT</source>
          <target>Recovery/WinPE-SRT</target>
        </segment>
      </unit>
      <unit id="289">
        <segment state="initial">
          <source>WinPE-SRT is used by Windows RE.</source>
          <target>WinPE-SRT is used by Windows RE.</target>
        </segment>
      </unit>
      <unit id="290">
        <segment state="initial">
          <source>This package is included in the base winre.wim file.</source>
          <target>This package is included in the base winre.wim file.</target>
        </segment>
      </unit>
      <unit id="291">
        <segment state="initial">
          <source>Recovery/WinPE-WinReCfg</source>
          <target>Recovery/WinPE-WinReCfg</target>
        </segment>
      </unit>
      <unit id="292">
        <segment state="initial">
          <source>WinPE-WinReCfg contains the Winrecfg.exe tool, and it enables the following scenarios:</source>
          <target>WinPE-WinReCfg contains the Winrecfg.exe tool, and it enables the following scenarios:</target>
        </segment>
      </unit>
      <unit id="293">
        <segment state="initial">
          <source>Boot from x86-based Windows PE to configure Windows RE settings on an offline x64-based operating system image.</source>
          <target>Boot from x86-based Windows PE to configure Windows RE settings on an offline x64-based operating system image.</target>
        </segment>
      </unit>
      <unit id="294">
        <segment state="initial">
          <source>Boot from x64-based Windows PE to configure Windows RE settings on an offline x86-based operating system image.</source>
          <target>Boot from x64-based Windows PE to configure Windows RE settings on an offline x86-based operating system image.</target>
        </segment>
      </unit>
      <unit id="295">
        <segment state="initial">
          <source>Scripting/WinPE-Scripting</source>
          <target>Scripting/WinPE-Scripting</target>
        </segment>
      </unit>
      <unit id="296">
        <segment state="initial">
          <source>WinPE-Scripting contains a multiple-language scripting environment that is ideal for automating system administration tasks, such as batch file processing.</source>
          <target>WinPE-Scripting contains a multiple-language scripting environment that is ideal for automating system administration tasks, such as batch file processing.</target>
        </segment>
      </unit>
      <unit id="297">
        <segment state="initial">
          <source>Scripts that run in the Windows Script Host (WSH) environment can call WSH objects and other COM-based technologies that support Automation, such as WMI, to manage the Windows subsystems that are central to many system administration tasks.</source>
          <target>Scripts that run in the Windows Script Host (WSH) environment can call WSH objects and other COM-based technologies that support Automation, such as WMI, to manage the Windows subsystems that are central to many system administration tasks.</target>
        </segment>
      </unit>
      <unit id="298">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install WinPE-Scripting to make sure that full scripting functionality is available when you are using WinPE-NetFX and WinPE-HTA.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install WinPE-Scripting to make sure that full scripting functionality is available when you are using WinPE-NetFX and WinPE-HTA.</target>
        </segment>
      </unit>
      <unit id="299">
        <segment state="initial">
          <source>The installation order is irrelevant.</source>
          <target>The installation order is irrelevant.</target>
        </segment>
      </unit>
      <unit id="300">
        <segment state="initial">
          <source>Scripting/WinPE-WMI</source>
          <target>Scripting/WinPE-WMI</target>
        </segment>
      </unit>
      <unit id="301">
        <segment state="initial">
          <source>WinPE-WMI contains a subset of the Windows Management Instrumentation (WMI) providers that enable minimal system diagnostics.</source>
          <target>WinPE-WMI contains a subset of the Windows Management Instrumentation (WMI) providers that enable minimal system diagnostics.</target>
        </segment>
      </unit>
      <unit id="302">
        <segment state="initial">
          <source>WMI is the infrastructure for management data and operations on Windows-based operating systems.</source>
          <target>WMI is the infrastructure for management data and operations on Windows-based operating systems.</target>
        </segment>
      </unit>
      <unit id="303">
        <segment state="initial">
          <source>You can write WMI scripts or applications to automate administrative tasks on remote computers.</source>
          <target>You can write WMI scripts or applications to automate administrative tasks on remote computers.</target>
        </segment>
      </unit>
      <unit id="304">
        <segment state="initial">
          <source>Additionally, WMI supplies management data to other parts of the operating system and products.</source>
          <target>Additionally, WMI supplies management data to other parts of the operating system and products.</target>
        </segment>
      </unit>
      <unit id="305">
        <segment state="initial">
          <source>Setup/Winpe-LegacySetup</source>
          <target>Setup/Winpe-LegacySetup</target>
        </segment>
      </unit>
      <unit id="306">
        <segment state="initial">
          <source>Winpe-LegacySetup contains all Setup files from the \Sources folder on the Windows media.</source>
          <target>Winpe-LegacySetup contains all Setup files from the \Sources folder on the Windows media.</target>
        </segment>
      </unit>
      <unit id="307">
        <segment state="initial">
          <source>Add this optional component when you service Setup or the \Sources folder on the Windows media.</source>
          <target>Add this optional component when you service Setup or the \Sources folder on the Windows media.</target>
        </segment>
      </unit>
      <unit id="308">
        <segment state="initial">
          <source>You must add this optional component together with the optional component for the Setup feature.</source>
          <target>You must add this optional component together with the optional component for the Setup feature.</target>
        </segment>
      </unit>
      <unit id="309">
        <segment state="initial">
          <source>To add a new Boot.wim file to the media, add the parent WinPE-Setup, either of the children (WinPE-Setup-Client or WinPE-Setup-Server), and Media optional components.</source>
          <target>To add a new Boot.wim file to the media, add the parent WinPE-Setup, either of the children (WinPE-Setup-Client or WinPE-Setup-Server), and Media optional components.</target>
        </segment>
      </unit>
      <unit id="310">
        <segment state="initial">
          <source>Media Setup is required to support Windows Server 2008 R2 installation.</source>
          <target>Media Setup is required to support Windows Server 2008 R2 installation.</target>
        </segment>
      </unit>
      <unit id="311">
        <segment state="initial">
          <source>Setup/WinPE-Setup</source>
          <target>Setup/WinPE-Setup</target>
        </segment>
      </unit>
      <unit id="312">
        <segment state="initial">
          <source>WinPE-Setup is the parent of WinPE-Setup-Client and WinPE-Setup-Server.</source>
          <target>WinPE-Setup is the parent of WinPE-Setup-Client and WinPE-Setup-Server.</target>
        </segment>
      </unit>
      <unit id="313">
        <segment state="initial">
          <source>It contains all Setup files from the \Sources folder that are common to the client and the server.</source>
          <target>It contains all Setup files from the \Sources folder that are common to the client and the server.</target>
        </segment>
      </unit>
      <unit id="314">
        <segment state="initial">
          <source>Setup/WinPE-Setup-Client</source>
          <target>Setup/WinPE-Setup-Client</target>
        </segment>
      </unit>
      <unit id="315">
        <segment state="initial">
          <source>WinPE-Setup-Client contains the client branding files for the parent WinPE-Setup optional component.</source>
          <target>WinPE-Setup-Client contains the client branding files for the parent WinPE-Setup optional component.</target>
        </segment>
      </unit>
      <unit id="316">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-Setup<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-Setup-Client<ph dataRef="id5" id="ph5" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-Setup<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-Setup-Client<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="317">
        <segment state="initial">
          <source>Setup/WinPE-Setup-Server</source>
          <target>Setup/WinPE-Setup-Server</target>
        </segment>
      </unit>
      <unit id="318">
        <segment state="initial">
          <source>WinPE-Setup-Server includes the server branding files for the parent WinPE-Setup optional component.</source>
          <target>WinPE-Setup-Server includes the server branding files for the parent WinPE-Setup optional component.</target>
        </segment>
      </unit>
      <unit id="319">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-Setup<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-Setup-Server<ph dataRef="id5" id="ph5" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-Setup<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-Setup-Server<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="320">
        <segment state="initial">
          <source>Startup/WinPE-SecureStartup</source>
          <target>Startup/WinPE-SecureStartup</target>
        </segment>
      </unit>
      <unit id="321">
        <segment state="initial">
          <source>WinPE-SecureStartup enables provisioning and management of BitLocker and the Trusted Platform Module (TPM).</source>
          <target>WinPE-SecureStartup enables provisioning and management of BitLocker and the Trusted Platform Module (TPM).</target>
        </segment>
      </unit>
      <unit id="322">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>It includes BitLocker command-line tools, BitLocker WMI management libraries, a TPM driver, TPM Base Services (TBS), the <ph dataRef="id1" id="ph1" />Win32_TPM<ph dataRef="id2" id="ph2" /> class, the BitLocker Unlock Wizard, and BitLocker UI libraries.</source>
          <target>It includes BitLocker command-line tools, BitLocker WMI management libraries, a TPM driver, TPM Base Services (TBS), the <ph dataRef="id1" id="ph1" />Win32_TPM<ph dataRef="id2" id="ph2" /> class, the BitLocker Unlock Wizard, and BitLocker UI libraries.</target>
        </segment>
      </unit>
      <unit id="323">
        <segment state="initial">
          <source>The TPM driver provides better support for both BitLocker and the TPM in this preboot environment.</source>
          <target>The TPM driver provides better support for both BitLocker and the TPM in this preboot environment.</target>
        </segment>
      </unit>
      <unit id="324">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
          <data id="id4">&lt;strong&gt;</data>
          <data id="id5">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-SecureStartup<ph dataRef="id5" id="ph5" />.</source>
          <target>Dependencies<ph dataRef="id1" id="ph1" />: Install <ph dataRef="id2" id="ph2" />WinPE-WMI<ph dataRef="id3" id="ph3" /> before you install <ph dataRef="id4" id="ph4" />WinPE-SecureStartup<ph dataRef="id5" id="ph5" />.</target>
        </segment>
      </unit>
      <unit id="325">
        <segment state="initial">
          <source>Storage/WinPE-EnhancedStorage</source>
          <target>Storage/WinPE-EnhancedStorage</target>
        </segment>
      </unit>
      <unit id="326">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>WinPE-EnhancedStorage enables Windows to discover additional functionality for storage devices, such as encrypted drives, and implementations that combine Trusted Computing Group (TCG) and IEEE 1667 (<ph dataRef="id1" id="ph1" />Standard Protocol for Authentication in Host Attachments of Transient Storage Devices<ph dataRef="id2" id="ph2" />) specifications.</source>
          <target>WinPE-EnhancedStorage enables Windows to discover additional functionality for storage devices, such as encrypted drives, and implementations that combine Trusted Computing Group (TCG) and IEEE 1667 (<ph dataRef="id1" id="ph1" />Standard Protocol for Authentication in Host Attachments of Transient Storage Devices<ph dataRef="id2" id="ph2" />) specifications.</target>
        </segment>
      </unit>
      <unit id="327">
        <segment state="initial">
          <source>This optional component enables Windows to manage these storage devices natively by using BitLocker.</source>
          <target>This optional component enables Windows to manage these storage devices natively by using BitLocker.</target>
        </segment>
      </unit>
      <unit id="328">
        <segment state="initial">
          <source>Windows RE optional components</source>
          <target>Windows RE optional components</target>
        </segment>
      </unit>
      <unit id="329">
        <segment state="initial">
          <source>The default Windows RE image contains the following built-in optional components:</source>
          <target>The default Windows RE image contains the following built-in optional components:</target>
        </segment>
      </unit>
      <unit id="330">
        <segment state="initial">
          <source>WinPE-EnhancedStorage</source>
          <target>WinPE-EnhancedStorage</target>
        </segment>
      </unit>
      <unit id="331">
        <segment state="initial">
          <source>WinPE-Rejuv</source>
          <target>WinPE-Rejuv</target>
        </segment>
      </unit>
      <unit id="332">
        <segment state="initial">
          <source>WinPE-Scripting</source>
          <target>WinPE-Scripting</target>
        </segment>
      </unit>
      <unit id="333">
        <segment state="initial">
          <source>WinPE-SecureStartup</source>
          <target>WinPE-SecureStartup</target>
        </segment>
      </unit>
      <unit id="334">
        <segment state="initial">
          <source>WinPE-Setup</source>
          <target>WinPE-Setup</target>
        </segment>
      </unit>
      <unit id="335">
        <segment state="initial">
          <source>WinPE-SRT</source>
          <target>WinPE-SRT</target>
        </segment>
      </unit>
      <unit id="336">
        <segment state="initial">
          <source>WinPE-WDS-Tools</source>
          <target>WinPE-WDS-Tools</target>
        </segment>
      </unit>
      <unit id="337">
        <segment state="initial">
          <source>WinPE-WMI</source>
          <target>WinPE-WMI</target>
        </segment>
      </unit>
      <unit id="338">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="339">
        <segment state="initial">
          <source>WinPE for Windows 10</source>
          <target>WinPE for Windows 10</target>
        </segment>
      </unit>
      <unit id="340">
        <segment state="initial">
          <source>WinPE: Mount and Customize</source>
          <target>WinPE: Mount and Customize</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>