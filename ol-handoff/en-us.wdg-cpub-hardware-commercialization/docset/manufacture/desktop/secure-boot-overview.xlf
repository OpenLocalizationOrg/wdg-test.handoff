<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\manufacture\desktop\secure-boot-overview.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">626bbf3a1ac736356ec12b9fe6628c81177b69c3</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Secure Boot</source>
          <target>Secure Boot</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Secure Boot</source>
          <target>Secure Boot</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Secure Boot</source>
          <target>Secure Boot</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Secure Boot is a security standard developed by members of the PC industry to help make sure that your PC boots using only software that is trusted by the PC manufacturer.</source>
          <target>Secure Boot is a security standard developed by members of the PC industry to help make sure that your PC boots using only software that is trusted by the PC manufacturer.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Support for Secure Boot was introduced in Windows 8.</source>
          <target>Support for Secure Boot was introduced in Windows 8.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>When the PC starts, the firmware checks the signature of each piece of boot software, including firmware drivers (Option ROMs) and the operating system.</source>
          <target>When the PC starts, the firmware checks the signature of each piece of boot software, including firmware drivers (Option ROMs) and the operating system.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>If the signatures are good, the PC boots, and the firmware gives control to the operating system.</source>
          <target>If the signatures are good, the PC boots, and the firmware gives control to the operating system.</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Did you see the "Secure Boot isn't configured correctly" watermark after upgrading to Windows 8.1, Windows Server 2012 R2, or Windows RT 8.1?</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Did you see the "Secure Boot isn't configured correctly" watermark after upgrading to Windows 8.1, Windows Server 2012 R2, or Windows RT 8.1?</pc>
          </target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?linkid=329932)</data>
        </originalData>
        <segment state="initial">
          <source>If so, install this patch: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Knowledge Base Article ID 2902864</pc>.</source>
          <target>If so, install this patch: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Microsoft Knowledge Base Article ID 2902864</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Frequently asked questions:</source>
          <target>Frequently asked questions:</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Do I need Secure Boot in order to upgrade to the latest version of Windows?</source>
          <target>Do I need Secure Boot in order to upgrade to the latest version of Windows?</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>No.</source>
          <target>No.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>There are no additional hardware requirements from Windows Vista or Windows 7.</source>
          <target>There are no additional hardware requirements from Windows Vista or Windows 7.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Secure Boot is an optional feature that can be activated by a PC manufacturer to enhance the security of a PC, and you’ll find it on all new logo-certified Windows devices.</source>
          <target>Secure Boot is an optional feature that can be activated by a PC manufacturer to enhance the security of a PC, and you’ll find it on all new logo-certified Windows devices.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>What happens if my new hardware isn’t trusted?</source>
          <target>What happens if my new hardware isn’t trusted?</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Your PC may not be able to boot.</source>
          <target>Your PC may not be able to boot.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>There are two kinds of problems that can occur:</source>
          <target>There are two kinds of problems that can occur:</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>The firmware may not trust the operating system, option ROM, driver, or app because it is not trusted by the Secure Boot database.</source>
          <target>The firmware may not trust the operating system, option ROM, driver, or app because it is not trusted by the Secure Boot database.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Some hardware requires kernel-mode drivers that must be signed.</source>
          <target>Some hardware requires kernel-mode drivers that must be signed.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Note: many older 32-bit (x86) drivers are not signed, because kernel-mode driver signing is a recent requirement for Secure Boot.</source>
          <target>Note: many older 32-bit (x86) drivers are not signed, because kernel-mode driver signing is a recent requirement for Secure Boot.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://msdn.microsoft.com/library/windows/desktop/hh848062.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Secure boot feature signing requirements for kernel-mode drivers</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Secure boot feature signing requirements for kernel-mode drivers</pc>.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://support.microsoft.com/kb/2800988)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8 with Secure Boot enabled may no longer boot after installing new hardware</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8 with Secure Boot enabled may no longer boot after installing new hardware</pc>.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>How can I add hardware or run software or operating systems that haven’t been trusted by my manufacturer?</source>
          <target>How can I add hardware or run software or operating systems that haven’t been trusted by my manufacturer?</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>You can check for software updates from Microsoft and/or the PC manufacturer.</source>
          <target>You can check for software updates from Microsoft and/or the PC manufacturer.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>You can contact your manufacturer to request new hardware or software to be added to the Secure Boot database.</source>
          <target>You can contact your manufacturer to request new hardware or software to be added to the Secure Boot database.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>For most PCs, you can disable Secure Boot through the PC’s BIOS.</source>
          <target>For most PCs, you can disable Secure Boot through the PC’s BIOS.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](disabling-secure-boot.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabling Secure Boot</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Disabling Secure Boot</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>For logo-certified PCs, Secure Boot is required to be configured so that it cannot be disabled.</source>
          <target>For logo-certified PCs, Secure Boot is required to be configured so that it cannot be disabled.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>How do I edit my PC’s Secure Boot database?</source>
          <target>How do I edit my PC’s Secure Boot database?</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>This can only be done by the PC manufacturer.</source>
          <target>This can only be done by the PC manufacturer.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Manufacturing Requirements</source>
          <target>Manufacturing Requirements</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Secure Boot requires a PC that meets the UEFI Specifications Version 2.3.1, Errata C or higher.</source>
          <target>Secure Boot requires a PC that meets the UEFI Specifications Version 2.3.1, Errata C or higher.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Secure Boot is supported for UEFI Class 2 and Class 3 PCs.</source>
          <target>Secure Boot is supported for UEFI Class 2 and Class 3 PCs.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>For UEFI Class 2 PCs, when Secure Boot is enabled, the compatibility support module (CSM) must be disabled so that the PC can only boot authorized, UEFI-based operating systems.</source>
          <target>For UEFI Class 2 PCs, when Secure Boot is enabled, the compatibility support module (CSM) must be disabled so that the PC can only boot authorized, UEFI-based operating systems.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Secure Boot does not require a Trusted Platform Module (TPM).</source>
          <target>Secure Boot does not require a Trusted Platform Module (TPM).</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>To enable kernel-mode debugging, enable TESTSIGNING, or to disable NX, you must disable Secure Boot.</source>
          <target>To enable kernel-mode debugging, enable TESTSIGNING, or to disable NX, you must disable Secure Boot.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](windows-secure-boot-key-creation-and-management-guidance.md)</data>
        </originalData>
        <segment state="initial">
          <source>For detailed info for OEMs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 Secure Boot Key Creation and Management Guidance</pc>.</source>
          <target>For detailed info for OEMs, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 Secure Boot Key Creation and Management Guidance</pc>.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>How it works</source>
          <target>How it works</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>The OEM uses instructions from the firmware manufacturer to create Secure Boot keys and to store them in the PC firmware.</source>
          <target>The OEM uses instructions from the firmware manufacturer to create Secure Boot keys and to store them in the PC firmware.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](windows-secure-boot-key-creation-and-management-guidance.md)</data>
          <data id="id3">[</data>
          <data id="id4">](secure-boot-key-generation-and-signing-using-hsm--example.md)</data>
        </originalData>
        <segment state="initial">
          <source>For info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 Secure Boot Key Creation and Management Guidance</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Secure Boot Key Generation and Signing Using HSM (Example)</pc>, or contact your hardware manufacturer.</source>
          <target>For info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 Secure Boot Key Creation and Management Guidance</pc>, <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Secure Boot Key Generation and Signing Using HSM (Example)</pc>, or contact your hardware manufacturer.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>When you add UEFI drivers (also known as Option ROMs), you'll also need to make sure these are signed and included in the Secure Boot database.</source>
          <target>When you add UEFI drivers (also known as Option ROMs), you'll also need to make sure these are signed and included in the Secure Boot database.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](uefi-validation-option-rom-validation-guidance.md)</data>
        </originalData>
        <segment state="initial">
          <source>For info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UEFI Validation Option ROM Validation Guidance</pc>.</source>
          <target>For info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">UEFI Validation Option ROM Validation Guidance</pc>.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>When Secure Boot is activated on a PC, the PC checks each piece of software, including the Option ROMs and the operating system, against databases of known-good signatures maintained in the firmware.</source>
          <target>When Secure Boot is activated on a PC, the PC checks each piece of software, including the Option ROMs and the operating system, against databases of known-good signatures maintained in the firmware.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>If each piece of software is valid, the firmware runs the software and the operating system.</source>
          <target>If each piece of software is valid, the firmware runs the software and the operating system.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Signature Databases and Keys</source>
          <target>Signature Databases and Keys</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Before the PC is deployed, the OEM stores the Secure Boot databases onto the PC.</source>
          <target>Before the PC is deployed, the OEM stores the Secure Boot databases onto the PC.</target>
        </segment>
      </unit>
      <unit id="147">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
          <data id="id5">*</data>
          <data id="id6">*</data>
        </originalData>
        <segment state="initial">
          <source>This includes the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">signature database</pc> (db), <pc dataRefEnd="id4" dataRefStart="id3" id="p2">revoked signatures database</pc> (dbx), and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Key Enrollment Key database</pc> (KEK) onto the PC.</source>
          <target>This includes the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">signature database</pc> (db), <pc dataRefEnd="id4" dataRefStart="id3" id="p2">revoked signatures database</pc> (dbx), and <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Key Enrollment Key database</pc> (KEK) onto the PC.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>These databases are stored on the firmware nonvolatile RAM (NV-RAM) at manufacturing time.</source>
          <target>These databases are stored on the firmware nonvolatile RAM (NV-RAM) at manufacturing time.</target>
        </segment>
      </unit>
      <unit id="149">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">signature database</pc> (db) and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">revoked signatures database</pc> (dbx) list the signers or image hashes of UEFI applications, operating system loaders (such as the Microsoft Operating System Loader, or Boot Manager), and UEFI drivers that can be loaded on the individual PC, and the revoked images for items that are no longer trusted and may not be loaded.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">signature database</pc> (db) and the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">revoked signatures database</pc> (dbx) list the signers or image hashes of UEFI applications, operating system loaders (such as the Microsoft Operating System Loader, or Boot Manager), and UEFI drivers that can be loaded on the individual PC, and the revoked images for items that are no longer trusted and may not be loaded.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Enrollment Key database</pc> (KEK) is a separate database of signing keys that can be used to update the signature database and revoked signatures database.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Key Enrollment Key database</pc> (KEK) is a separate database of signing keys that can be used to update the signature database and revoked signatures database.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Microsoft requires a specified key to be included in the KEK database so that in the future Microsoft can add new operating systems to the signature database or add known bad images to the revoked signatures database.</source>
          <target>Microsoft requires a specified key to be included in the KEK database so that in the future Microsoft can add new operating systems to the signature database or add known bad images to the revoked signatures database.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>After these databases have been added, and after final firmware validation and testing, the OEM locks the firmware from editing, except for updates that are signed with the correct key or updates by a physically present user who is using firmware menus, and then generates a platform key (PK).</source>
          <target>After these databases have been added, and after final firmware validation and testing, the OEM locks the firmware from editing, except for updates that are signed with the correct key or updates by a physically present user who is using firmware menus, and then generates a platform key (PK).</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>The PK can be used to sign updates to the KEK or to turn off Secure Boot.</source>
          <target>The PK can be used to sign updates to the KEK or to turn off Secure Boot.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>OEMs should contact their firmware manufacturer for tools and assistance in creating these databases.</source>
          <target>OEMs should contact their firmware manufacturer for tools and assistance in creating these databases.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](windows-secure-boot-key-creation-and-management-guidance.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 Secure Boot Key Creation and Management Guidance</pc>.</source>
          <target>For more info, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows 8.1 Secure Boot Key Creation and Management Guidance</pc>.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Boot Sequence</source>
          <target>Boot Sequence</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>After the PC is turned on, the signature databases are each checked against the platform key.</source>
          <target>After the PC is turned on, the signature databases are each checked against the platform key.</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>If the firmware is not trusted, the UEFI firmware must initiate OEM-specific recovery to restore trusted firmware.</source>
          <target>If the firmware is not trusted, the UEFI firmware must initiate OEM-specific recovery to restore trusted firmware.</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>If there is a problem with Windows Boot Manager, the firmware will attempt to boot a backup copy of Windows Boot Manager.</source>
          <target>If there is a problem with Windows Boot Manager, the firmware will attempt to boot a backup copy of Windows Boot Manager.</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>If this also fails, the firmware must initiate OEM-specific remediation.</source>
          <target>If this also fails, the firmware must initiate OEM-specific remediation.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>After Windows Boot Manager has started running, if there is a problem with the drivers or NTOS kernel, Windows Recovery Environment (Windows RE) is loaded so that these drivers or the kernel image can be recovered.</source>
          <target>After Windows Boot Manager has started running, if there is a problem with the drivers or NTOS kernel, Windows Recovery Environment (Windows RE) is loaded so that these drivers or the kernel image can be recovered.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>Windows loads antimalware software.</source>
          <target>Windows loads antimalware software.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Windows loads other kernel drivers and initializes the user mode processes.</source>
          <target>Windows loads other kernel drivers and initializes the user mode processes.</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/?LinkId=278911)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see the whitepaper: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Secured Boot and Measured Boot: Hardening Early Boot Components Against Malware</pc>.</source>
          <target>For more information, see the whitepaper: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Secured Boot and Measured Boot: Hardening Early Boot Components Against Malware</pc>.</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>Secure Boot isn't configured correctly: troubleshooting</source>
          <target>Secure Boot isn't configured correctly: troubleshooting</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>Secure Boot isn't configured correctly: Determine if the PC is in a manufacturing mode (info for manufacturers)</source>
          <target>Secure Boot isn't configured correctly: Determine if the PC is in a manufacturing mode (info for manufacturers)</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Secured Boot and Measured Boot: Hardening Early Boot Components Against Malware</source>
          <target>Secured Boot and Measured Boot: Hardening Early Boot Components Against Malware</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>UEFI Firmware</source>
          <target>UEFI Firmware</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>