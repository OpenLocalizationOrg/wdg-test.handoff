<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\windows-store-app-analysis.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">6c81b4efe383d50381d816e50a64146ce9a09fe2</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Windows Store App Analysis</source>
          <target>Windows Store App Analysis</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Windows Store App Analysis</source>
          <target>Windows Store App Analysis</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Windows Store App Analysis</source>
          <target>Windows Store App Analysis</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>WPA now includes capabilities that help you analyze Windows Store app performance.</source>
          <target>WPA now includes capabilities that help you analyze Windows Store app performance.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Watch the video below for a quick overview of some of these features:</source>
          <target>Watch the video below for a quick overview of some of these features:</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Send feedback on this video, or request new performance analysis videos.</source>
          <target>Send feedback on this video, or request new performance analysis videos.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Windows Store App Profiles</source>
          <target>Windows Store App Profiles</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>WPA includes a set of profiles that help jumpstart your Windows Store app analysis.</source>
          <target>WPA includes a set of profiles that help jumpstart your Windows Store app analysis.</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>These profiles are contained in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile Catalog</pc> that can be found when you apply a profile to an open trace:</source>
          <target>These profiles are contained in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile Catalog</pc> that can be found when you apply a profile to an open trace:</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>AppLaunch – Contains presets in a view that is geared for app launch analysis.</source>
          <target>AppLaunch – Contains presets in a view that is geared for app launch analysis.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>XAMLApplicationAnalysis – Contains all the presets and views necessary to get started with analyzing your XAML-based Windows Store app.</source>
          <target>XAMLApplicationAnalysis – Contains all the presets and views necessary to get started with analyzing your XAML-based Windows Store app.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>HTMLApplicationAnalysis – Contains all the presets and views necessary to get started with analyzing your HTML-based Windows Store app.</source>
          <target>HTMLApplicationAnalysis – Contains all the presets and views necessary to get started with analyzing your HTML-based Windows Store app.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](view-profiles.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about profiles, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View Profiles</pc>.</source>
          <target>For more information about profiles, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">View Profiles</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>For more information, including videos that get you started with the Windows store app analysis profiles, see the following links:</source>
          <target>For more information, including videos that get you started with the Windows store app analysis profiles, see the following links:</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Big Picture</source>
          <target>Big Picture</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Frame Analysis</source>
          <target>Frame Analysis</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Attributed CPU Usage</source>
          <target>Attributed CPU Usage</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Attributed CPU Usage</pc> graph, CPU usage is attributed to different activities.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Attributed CPU Usage</pc> graph, CPU usage is attributed to different activities.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>For example, one section of activity might be attributed to drawing content on the screen, while another section might be attributed to processing JavaScript code.</source>
          <target>For example, one section of activity might be attributed to drawing content on the screen, while another section might be attributed to processing JavaScript code.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>These identifying tags help you to more easily identify how your app is spending time.</source>
          <target>These identifying tags help you to more easily identify how your app is spending time.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>regions of interest graph</source>
          <target>regions of interest graph</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>The Attributed CPU Usage graph contains the following presets that break down CPU usage in your Windows Store app:</source>
          <target>The Attributed CPU Usage graph contains the following presets that break down CPU usage in your Windows Store app:</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>DWM Thread CPU Breakdown</source>
          <target>DWM Thread CPU Breakdown</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>HTML Render Thread CPU Breakdown</source>
          <target>HTML Render Thread CPU Breakdown</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>HTML UI Thread CPU Breakdown</source>
          <target>HTML UI Thread CPU Breakdown</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Known Thread CPU Breakdown</source>
          <target>Known Thread CPU Breakdown</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Utilization by Process, Thread, Activity</source>
          <target>Utilization by Process, Thread, Activity</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>XAML Render Thread CPU Breakdown</source>
          <target>XAML Render Thread CPU Breakdown</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>XAML UI Thread CPU Breakdown</source>
          <target>XAML UI Thread CPU Breakdown</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>If you hover over the bars in the graph, you can see additional metadata for the corresponding activity.</source>
          <target>If you hover over the bars in the graph, you can see additional metadata for the corresponding activity.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Attributed CPU Usage</pc> table, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Thread Name</pc> column helps you quickly identify key threads in your app.</source>
          <target>In the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Attributed CPU Usage</pc> table, the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Thread Name</pc> column helps you quickly identify key threads in your app.</target>
        </segment>
      </unit>
      <unit id="132">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In the screenshot below, you can see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HTML UI Thread</pc>, a named thread that does some work during the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Layout</pc> activity:</source>
          <target>In the screenshot below, you can see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HTML UI Thread</pc>, a named thread that does some work during the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Layout</pc> activity:</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>known thread cpu breakdown table</source>
          <target>known thread cpu breakdown table</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Warning</source>
          <target>Warning</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Attributed CPU Usage</pc> table relies on regions of interest definitions to attribute CPU usage to different activities.</source>
          <target>The <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Attributed CPU Usage</pc> table relies on regions of interest definitions to attribute CPU usage to different activities.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>When you use multiple regions files, different regions of interest can overlap and conflict.</source>
          <target>When you use multiple regions files, different regions of interest can overlap and conflict.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>When these conflicts occur, WPA is unable to accurately attribute a single activity to a given thread in a given time range.</source>
          <target>When these conflicts occur, WPA is unable to accurately attribute a single activity to a given thread in a given time range.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>To avoid these potential conflicts, use only one region definition file at a time.</source>
          <target>To avoid these potential conflicts, use only one region definition file at a time.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Thread Naming</source>
          <target>Thread Naming</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Windows Store apps use different threads to do different types of work.</source>
          <target>Windows Store apps use different threads to do different types of work.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>For example, the XAML UI thread passes work to the render thread to draw to the screen.</source>
          <target>For example, the XAML UI thread passes work to the render thread to draw to the screen.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>WPA uses descriptive thread names to clearly identify what the thread is doing.</source>
          <target>WPA uses descriptive thread names to clearly identify what the thread is doing.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Knowing which of the many threads in your table is the render thread and which is the XAML UI thread allows you to look for particular patterns of behavior, especially between threads.</source>
          <target>Knowing which of the many threads in your table is the render thread and which is the XAML UI thread allows you to look for particular patterns of behavior, especially between threads.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>descriptive thread names in wpa</source>
          <target>descriptive thread names in wpa</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>The image above shows activity from the XAML UI thread, the XAML Render thread, and the Desktop Window Manager (DWM) thread.</source>
          <target>The image above shows activity from the XAML UI thread, the XAML Render thread, and the Desktop Window Manager (DWM) thread.</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>