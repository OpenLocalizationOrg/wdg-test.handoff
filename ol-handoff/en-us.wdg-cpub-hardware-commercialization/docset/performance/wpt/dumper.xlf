<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\dumper.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">abdde63ac7a6f44b5c5d828e02a39c619b660af0</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>dumper</source>
          <target>dumper</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>dumper</source>
          <target>dumper</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>dumper</source>
          <target>dumper</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>This action produces an ANSI text file of the ETL trace log.</source>
          <target>This action produces an ANSI text file of the ETL trace log.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Options</source>
          <target>Options</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-range</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 T2</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-range</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T1 T2</pc>
          </target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>Dumps only data between times <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>, both in microseconds.</source>
          <target>Dumps only data between times <pc dataRefEnd="id2" dataRefStart="id1" id="p1">T1</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">T2</pc>, both in microseconds.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>-stacktimeshifting</source>
          <target>-stacktimeshifting</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Combines user and kernel stack fragments and places them after the trigger event.</source>
          <target>Combines user and kernel stack fragments and places them after the trigger event.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>-exc<ph dataRef="id1" id="ph1" />dpcisr</source>
          <target>-exc<ph dataRef="id1" id="ph1" />dpcisr</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Excludes time spent in DPCs or ISRs.</source>
          <target>Excludes time spent in DPCs or ISRs.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>DPC and interrupt tracing must be enabled for this option to have any effect.</source>
          <target>DPC and interrupt tracing must be enabled for this option to have any effect.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>Currently this affects only <pc dataRefEnd="id2" dataRefStart="id1" id="p1">cswitch</pc> events.</source>
          <target>Currently this affects only <pc dataRefEnd="id2" dataRefStart="id1" id="p1">cswitch</pc> events.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-provider</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">id1 id2 …</pc>
          </source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">-provider</pc>
            <pc dataRefEnd="id4" dataRefStart="id3" id="p2">id1 id2 …</pc>
          </target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Dumps events for the specified provider(s).</source>
          <target>Dumps events for the specified provider(s).</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Takes as input any number of provider GUIDs.</source>
          <target>Takes as input any number of provider GUIDs.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>-add<ph dataRef="id1" id="ph1" />rawdata</source>
          <target>-add<ph dataRef="id1" id="ph1" />rawdata</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Adds a raw information line before each event.</source>
          <target>Adds a raw information line before each event.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>-add<ph dataRef="id1" id="ph1" />pgodata</source>
          <target>-add<ph dataRef="id1" id="ph1" />pgodata</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Adds PGO training information to each stack frame.</source>
          <target>Adds PGO training information to each stack frame.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">\_</data>
        </originalData>
        <segment state="initial">
          <source>-add<ph dataRef="id1" id="ph1" />inline</source>
          <target>-add<ph dataRef="id1" id="ph1" />inline</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Appends inline function names to the end of each stack frame.</source>
          <target>Appends inline function names to the end of each stack frame.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Events in the trace are dumped in text form.</source>
          <target>Events in the trace are dumped in text form.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Example</source>
          <target>Example</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>The following is an example of this action with providers specified.</source>
          <target>The following is an example of this action with providers specified.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Xperf Actions</source>
          <target>Xperf Actions</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Time and Timestamp Formats</source>
          <target>Time and Timestamp Formats</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>