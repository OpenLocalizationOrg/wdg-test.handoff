<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\xperf-built-in-profiles.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">f8d77544da6aeaf88ea804d4caa12136ffac6346</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Xperf Built-in Profiles</source>
          <target>Xperf Built-in Profiles</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Xperf Built-in Profiles</source>
          <target>Xperf Built-in Profiles</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Xperf Built-in Profiles</source>
          <target>Xperf Built-in Profiles</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>To display all the built-in Xperf profiles, run the following command.</source>
          <target>To display all the built-in Xperf profiles, run the following command.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>The following table describes available profiles.</source>
          <target>The following table describes available profiles.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Profile</source>
          <target>Profile</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>perf!FileIOProfiles.InSequentialFile</source>
          <target>perf!FileIOProfiles.InSequentialFile</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>File I/O tracing profile in a sequential file.</source>
          <target>File I/O tracing profile in a sequential file.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>perf!FileIOProfiles.InBuffer</source>
          <target>perf!FileIOProfiles.InBuffer</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>File I/O tracing profile in a buffer.</source>
          <target>File I/O tracing profile in a buffer.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>perf!GeneralProfiles.InSequentialFile</source>
          <target>perf!GeneralProfiles.InSequentialFile</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Common system metrics tracing profile in a sequential file.</source>
          <target>Common system metrics tracing profile in a sequential file.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>perf!GeneralProfiles.InBuffer</source>
          <target>perf!GeneralProfiles.InBuffer</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Common system metrics tracing profile in a buffer.</source>
          <target>Common system metrics tracing profile in a buffer.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>perf!PerfCoreProfiles.InSequentialFile</source>
          <target>perf!PerfCoreProfiles.InSequentialFile</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Basic system metrics tracing profile (included with all built-in profiles) in a sequential file.</source>
          <target>Basic system metrics tracing profile (included with all built-in profiles) in a sequential file.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>perf!PerfCoreProfiles.InBuffer</source>
          <target>perf!PerfCoreProfiles.InBuffer</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Basic system metrics tracing profile (included with all built-in profiles) in a buffer.</source>
          <target>Basic system metrics tracing profile (included with all built-in profiles) in a buffer.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>perf!RegistryProfiles.InSequentialFile</source>
          <target>perf!RegistryProfiles.InSequentialFile</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Registry tracing profile in a sequential file.</source>
          <target>Registry tracing profile in a sequential file.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>perf!RegistryProfiles.InBuffer</source>
          <target>perf!RegistryProfiles.InBuffer</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Registry tracing profile in a buffer.</source>
          <target>Registry tracing profile in a buffer.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>perf!StdProfile</source>
          <target>perf!StdProfile</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Common definitions used in built-in profiles (not startable).</source>
          <target>Common definitions used in built-in profiles (not startable).</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Examples</source>
          <target>Examples</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>The following examples turn on several ETW sessions and merge them into a single trace file as needed.</source>
          <target>The following examples turn on several ETW sessions and merge them into a single trace file as needed.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Memory-based trace profile</source>
          <target>Memory-based trace profile</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>For an in-memory repeated snapshots trace profile, run the following command.</source>
          <target>For an in-memory repeated snapshots trace profile, run the following command.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Run some scenario, and then run the following command.</source>
          <target>Run some scenario, and then run the following command.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>You can optionally continue saving additional snapshots, and then stop the trace capturing by running the following command.</source>
          <target>You can optionally continue saving additional snapshots, and then stop the trace capturing by running the following command.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>File-based trace profile</source>
          <target>File-based trace profile</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>To start a file-based trace profile, run following command.</source>
          <target>To start a file-based trace profile, run following command.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Run some scenario, and then run the following command to stop trace capturing.</source>
          <target>Run some scenario, and then run the following command to stop trace capturing.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Extending profile definitions</source>
          <target>Extending profile definitions</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Profile definitions can be extended and composed using the command line.</source>
          <target>Profile definitions can be extended and composed using the command line.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>For example, to add <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReadyThread</pc> stacks to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">perf!FileIOProfiles.InSequentialFile</pc> profile, run the following command.</source>
          <target>For example, to add <pc dataRefEnd="id2" dataRefStart="id1" id="p1">ReadyThread</pc> stacks to the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">perf!FileIOProfiles.InSequentialFile</pc> profile, run the following command.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Xperf Profiles</source>
          <target>Xperf Profiles</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>