<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\start.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">302f8daa72324855e4a9637564fb29246c5d3ee6</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>start</source>
          <target>start</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>start</source>
          <target>start</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>start</source>
          <target>start</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Displays logger start options.</source>
          <target>Displays logger start options.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Parameters</source>
          <target>Parameters</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Command</source>
          <target>Command</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-start<ph dataRef="id1" id="ph1" />[LoggerName]|[ProfileFileName!ProfileName|SessionName]]</source>
          <target>-start<ph dataRef="id1" id="ph1" />[LoggerName]|[ProfileFileName!ProfileName|SessionName]]</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
          <data id="id3">&lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
          <data id="id5">&lt;em&gt;</data>
          <data id="id6">&lt;/em&gt;</data>
          <data id="id7">&lt;em&gt;</data>
          <data id="id8">&lt;/em&gt;</data>
          <data id="id9">&lt;em&gt;</data>
          <data id="id10">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Starts a logging session for <ph dataRef="id1" id="ph1" />LoggerName<ph dataRef="id2" id="ph2" />, starts loggers in profile <ph dataRef="id3" id="ph3" />ProfileName<ph dataRef="id4" id="ph4" /> defined in the <ph dataRef="id5" id="ph5" />ProfileFileName<ph dataRef="id6" id="ph6" /> file, or starts logger <ph dataRef="id7" id="ph7" />SessionName<ph dataRef="id8" id="ph8" /> defined in the <ph dataRef="id9" id="ph9" />ProfileFileName<ph dataRef="id10" id="ph10" /> file.</source>
          <target>Starts a logging session for <ph dataRef="id1" id="ph1" />LoggerName<ph dataRef="id2" id="ph2" />, starts loggers in profile <ph dataRef="id3" id="ph3" />ProfileName<ph dataRef="id4" id="ph4" /> defined in the <ph dataRef="id5" id="ph5" />ProfileFileName<ph dataRef="id6" id="ph6" /> file, or starts logger <ph dataRef="id7" id="ph7" />SessionName<ph dataRef="id8" id="ph8" /> defined in the <ph dataRef="id9" id="ph9" />ProfileFileName<ph dataRef="id10" id="ph10" /> file.</target>
        </segment>
      </unit>
      <unit id="110">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-update<ph dataRef="id1" id="ph1" />[LoggerName]|[ProfileFileName!ProfileName|SessionName]]</source>
          <target>-update<ph dataRef="id1" id="ph1" />[LoggerName]|[ProfileFileName!ProfileName|SessionName]]</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
          <data id="id3">&lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
          <data id="id5">&lt;em&gt;</data>
          <data id="id6">&lt;/em&gt;</data>
          <data id="id7">&lt;em&gt;</data>
          <data id="id8">&lt;/em&gt;</data>
          <data id="id9">&lt;em&gt;</data>
          <data id="id10">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Updates a logging session for <ph dataRef="id1" id="ph1" />LoggerName<ph dataRef="id2" id="ph2" />, updates loggers in profile <ph dataRef="id3" id="ph3" />ProfileName<ph dataRef="id4" id="ph4" /> defined in the <ph dataRef="id5" id="ph5" />ProfileFileName<ph dataRef="id6" id="ph6" /> file, or updates logger <ph dataRef="id7" id="ph7" />SessionName<ph dataRef="id8" id="ph8" /> defined in the <ph dataRef="id9" id="ph9" />ProfileFileName<ph dataRef="id10" id="ph10" /> file.</source>
          <target>Updates a logging session for <ph dataRef="id1" id="ph1" />LoggerName<ph dataRef="id2" id="ph2" />, updates loggers in profile <ph dataRef="id3" id="ph3" />ProfileName<ph dataRef="id4" id="ph4" /> defined in the <ph dataRef="id5" id="ph5" />ProfileFileName<ph dataRef="id6" id="ph6" /> file, or updates logger <ph dataRef="id7" id="ph7" />SessionName<ph dataRef="id8" id="ph8" /> defined in the <ph dataRef="id9" id="ph9" />ProfileFileName<ph dataRef="id10" id="ph10" /> file.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-flush<ph dataRef="id1" id="ph1" />LoggerName</source>
          <target>-flush<ph dataRef="id1" id="ph1" />LoggerName</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Flushes a logging session for <ph dataRef="id1" id="ph1" />LoggerName<ph dataRef="id2" id="ph2" />.</source>
          <target>Flushes a logging session for <ph dataRef="id1" id="ph1" />LoggerName<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="114">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>This parameter is required to save a buffer mode trace (see <ph dataRef="id1" id="ph1" />-buffering<ph dataRef="id2" id="ph2" /> parameter, below).</source>
          <target>This parameter is required to save a buffer mode trace (see <ph dataRef="id1" id="ph1" />-buffering<ph dataRef="id2" id="ph2" /> parameter, below).</target>
        </segment>
      </unit>
      <unit id="115">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>To save a buffer mode trace, you must issue the <ph dataRef="id1" id="ph1" />-flush<ph dataRef="id2" id="ph2" /> parameter.</source>
          <target>To save a buffer mode trace, you must issue the <ph dataRef="id1" id="ph1" />-flush<ph dataRef="id2" id="ph2" /> parameter.</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-capturestate<ph dataRef="id1" id="ph1" />LoggerName Flags</source>
          <target>-capturestate<ph dataRef="id1" id="ph1" />LoggerName Flags</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Captures state to non-kernel logging session from providers specified in <ph dataRef="id1" id="ph1" />Flags<ph dataRef="id2" id="ph2" />.</source>
          <target>Captures state to non-kernel logging session from providers specified in <ph dataRef="id1" id="ph1" />Flags<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The accepted provider format is the same as for <ph dataRef="id1" id="ph1" />-on<ph dataRef="id2" id="ph2" />.</source>
          <target>The accepted provider format is the same as for <ph dataRef="id1" id="ph1" />-on<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>If flags and level are specified, they are enabled while capturing state.</source>
          <target>If flags and level are specified, they are enabled while capturing state.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>This is called for tracing started with the <ph dataRef="id1" id="ph1" />–buffering<ph dataRef="id2" id="ph2" /> option.</source>
          <target>This is called for tracing started with the <ph dataRef="id1" id="ph1" />–buffering<ph dataRef="id2" id="ph2" /> option.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>It must be followed by <ph dataRef="id1" id="ph1" />–stop<ph dataRef="id2" id="ph2" /> to stop tracing.</source>
          <target>It must be followed by <ph dataRef="id1" id="ph1" />–stop<ph dataRef="id2" id="ph2" /> to stop tracing.</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-on<ph dataRef="id1" id="ph1" />Flags|Groups</source>
          <target>-on<ph dataRef="id1" id="ph1" />Flags|Groups</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>For kernel logging sessions, the sequence of kernel flags and groups to be enabled, separated by plus signs (+).</source>
          <target>For kernel logging sessions, the sequence of kernel flags and groups to be enabled, separated by plus signs (+).</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>For user logging sessions, the sequence of providers to be enabled, separated by plus signs (+).</source>
          <target>For user logging sessions, the sequence of providers to be enabled, separated by plus signs (+).</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">&lt;code&gt;(GUID|KnownProviderName)[:Flags[:Level]]&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The accepted provider format is <ph dataRef="id1" id="ph1" />.</source>
          <target>The accepted provider format is <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="126">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](providers-wpa.md)</data>
        </originalData>
        <segment state="initial">
          <source>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">providers</pc> for a list of valid flags.</source>
          <target>See <pc dataRefEnd="id2" dataRefStart="id1" id="p1">providers</pc> for a list of valid flags.</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-f<ph dataRef="id1" id="ph1" />filename</source>
          <target>-f<ph dataRef="id1" id="ph1" />filename</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Logs events to the specified file.</source>
          <target>Logs events to the specified file.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>The default is \Kernel.etl for kernel traces and \User.etl for user traces.</source>
          <target>The default is \Kernel.etl for kernel traces and \User.etl for user traces.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-buffersize<ph dataRef="id1" id="ph1" />Size</source>
          <target>-buffersize<ph dataRef="id1" id="ph1" />Size</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets trace buffer size to <ph dataRef="id1" id="ph1" />Size<ph dataRef="id2" id="ph2" />, in KB.</source>
          <target>Sets trace buffer size to <ph dataRef="id1" id="ph1" />Size<ph dataRef="id2" id="ph2" />, in KB.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Possible values are 4 to 1024.</source>
          <target>Possible values are 4 to 1024.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>The default is 64.</source>
          <target>The default is 64.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-minbuffers<ph dataRef="id1" id="ph1" />n</source>
          <target>-minbuffers<ph dataRef="id1" id="ph1" />n</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets the minimum number of trace buffers to <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" />.</source>
          <target>Sets the minimum number of trace buffers to <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>The default is 64.</source>
          <target>The default is 64.</target>
        </segment>
      </unit>
      <unit id="137">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-maxbuffers<ph dataRef="id1" id="ph1" />n</source>
          <target>-maxbuffers<ph dataRef="id1" id="ph1" />n</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets the maximum number of trace buffers to <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" />.</source>
          <target>Sets the maximum number of trace buffers to <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>The default is 320.</source>
          <target>The default is 320.</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-maxfile<ph dataRef="id1" id="ph1" />Size</source>
          <target>-maxfile<ph dataRef="id1" id="ph1" />Size</target>
        </segment>
      </unit>
      <unit id="141">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets maximum file size to <ph dataRef="id1" id="ph1" />Size<ph dataRef="id2" id="ph2" /> MB.</source>
          <target>Sets maximum file size to <ph dataRef="id1" id="ph1" />Size<ph dataRef="id2" id="ph2" /> MB.</target>
        </segment>
      </unit>
      <unit id="142">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-flushtimer<ph dataRef="id1" id="ph1" />n</source>
          <target>-flushtimer<ph dataRef="id1" id="ph1" />n</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets the flush timer to <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" /> seconds.</source>
          <target>Sets the flush timer to <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" /> seconds.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-boottrace<ph dataRef="id1" id="ph1" />Flags|Groups|off</source>
          <target>-boottrace<ph dataRef="id1" id="ph1" />Flags|Groups|off</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Configures the Event Tracing for Windows logger to trace boot.</source>
          <target>Configures the Event Tracing for Windows logger to trace boot.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>Set flags to <ph dataRef="id1" id="ph1" />off<ph dataRef="id2" id="ph2" /> to turn off boot tracing.</source>
          <target>Set flags to <ph dataRef="id1" id="ph1" />off<ph dataRef="id2" id="ph2" /> to turn off boot tracing.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>All logging control can be used in conjunction with this.</source>
          <target>All logging control can be used in conjunction with this.</target>
        </segment>
      </unit>
      <unit id="148">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Use in conjunction with <ph dataRef="id1" id="ph1" />-f<ph dataRef="id2" id="ph2" /> to log to a file other than \Perf.etl.</source>
          <target>Use in conjunction with <ph dataRef="id1" id="ph1" />-f<ph dataRef="id2" id="ph2" /> to log to a file other than \Perf.etl.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>-realtime</source>
          <target>-realtime</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Enables real-time tracing.</source>
          <target>Enables real-time tracing.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>-buffering</source>
          <target>-buffering</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Enables buffering mode tracing.</source>
          <target>Enables buffering mode tracing.</target>
        </segment>
      </unit>
      <unit id="153">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>To save, use <ph dataRef="id1" id="ph1" />-flush<ph dataRef="id2" id="ph2" />.</source>
          <target>To save, use <ph dataRef="id1" id="ph1" />-flush<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" />-stop<ph dataRef="id2" id="ph2" /> option does not save the trace.</source>
          <target>The <ph dataRef="id1" id="ph1" />-stop<ph dataRef="id2" id="ph2" /> option does not save the trace.</target>
        </segment>
      </unit>
      <unit id="155">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-filemode<ph dataRef="id1" id="ph1" />Mode</source>
          <target>-filemode<ph dataRef="id1" id="ph1" />Mode</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Sets the file mode.</source>
          <target>Sets the file mode.</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>The default is <ph dataRef="id1" id="ph1" />Sequential<ph dataRef="id2" id="ph2" />.</source>
          <target>The default is <ph dataRef="id1" id="ph1" />Sequential<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="158">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
          <data id="id3">&amp;quot;</data>
          <data id="id4">&amp;quot;</data>
          <data id="id5">&amp;quot;</data>
          <data id="id6">&amp;quot;</data>
          <data id="id7">&amp;quot;</data>
          <data id="id8">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>Possible modes: <ph dataRef="id1" id="ph1" />Sequential<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Circular<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />Append<ph dataRef="id6" id="ph6" />, and <ph dataRef="id7" id="ph7" />NewFile<ph dataRef="id8" id="ph8" />.</source>
          <target>Possible modes: <ph dataRef="id1" id="ph1" />Sequential<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />Circular<ph dataRef="id4" id="ph4" />, <ph dataRef="id5" id="ph5" />Append<ph dataRef="id6" id="ph6" />, and <ph dataRef="id7" id="ph7" />NewFile<ph dataRef="id8" id="ph8" />.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-clocktype<ph dataRef="id1" id="ph1" />ClockType</source>
          <target>-clocktype<ph dataRef="id1" id="ph1" />ClockType</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Sets the clock type.</source>
          <target>Sets the clock type.</target>
        </segment>
      </unit>
      <unit id="161">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>The default is <ph dataRef="id1" id="ph1" />PerfCounter<ph dataRef="id2" id="ph2" />.</source>
          <target>The default is <ph dataRef="id1" id="ph1" />PerfCounter<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="162">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
          <data id="id3">&amp;quot;</data>
          <data id="id4">&amp;quot;</data>
          <data id="id5">&amp;quot;</data>
          <data id="id6">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>Possible types: <ph dataRef="id1" id="ph1" />Cycle<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />PerfCounter<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />SystemTime<ph dataRef="id6" id="ph6" />.</source>
          <target>Possible types: <ph dataRef="id1" id="ph1" />Cycle<ph dataRef="id2" id="ph2" />, <ph dataRef="id3" id="ph3" />PerfCounter<ph dataRef="id4" id="ph4" />, and <ph dataRef="id5" id="ph5" />SystemTime<ph dataRef="id6" id="ph6" />.</target>
        </segment>
      </unit>
      <unit id="163">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-stackwalk<ph dataRef="id1" id="ph1" />flags|@file</source>
          <target>-stackwalk<ph dataRef="id1" id="ph1" />flags|@file</target>
        </segment>
      </unit>
      <unit id="164">
        <originalData>
          <data id="id1">&lt;code&gt;Flag+...&lt;/code&gt;</data>
          <data id="id2">&lt;em&gt;</data>
          <data id="id3">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Enables stack walking for the events specified as <ph dataRef="id1" id="ph1" />, or parses the <ph dataRef="id2" id="ph2" />file<ph dataRef="id3" id="ph3" /> File for flags.</source>
          <target>Enables stack walking for the events specified as <ph dataRef="id1" id="ph1" />, or parses the <ph dataRef="id2" id="ph2" />file<ph dataRef="id3" id="ph3" /> File for flags.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](stackwalk.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">stackwalk</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">stackwalk</pc>.</target>
        </segment>
      </unit>
      <unit id="166">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-pids<ph dataRef="id1" id="ph1" />pid [...]</source>
          <target>-pids<ph dataRef="id1" id="ph1" />pid [...]</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">&lt;code&gt;pid [...]&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Applies flags to processes <ph dataRef="id1" id="ph1" />.</source>
          <target>Applies flags to processes <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Used in conjunction with private loggers.</source>
          <target>Used in conjunction with private loggers.</target>
        </segment>
      </unit>
      <unit id="169">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>-pidnewprocess<ph dataRef="id1" id="ph1" />command-line</source>
          <target>-pidnewprocess<ph dataRef="id1" id="ph1" />command-line</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">&amp;lt;&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Applies flags to a new process that Xperf will start with <ph dataRef="id1" id="ph1" />command-line<ph dataRef="id2" id="ph2" />.</source>
          <target>Applies flags to a new process that Xperf will start with <ph dataRef="id1" id="ph1" />command-line<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Used in conjunction with private loggers.</source>
          <target>Used in conjunction with private loggers.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>-waitfornewprocess</source>
          <target>-waitfornewprocess</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">&lt;code&gt;-pidNewProcess&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Waits for a new process created using <ph dataRef="id1" id="ph1" /> to return before exiting.</source>
          <target>Waits for a new process created using <ph dataRef="id1" id="ph1" /> to return before exiting.</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>-heap</source>
          <target>-heap</target>
        </segment>
      </unit>
      <unit id="175">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
          <data id="id3">&lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Enables heap tracing in processes specified by <ph dataRef="id1" id="ph1" />Pids<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />PidNewProcess<ph dataRef="id4" id="ph4" />.</source>
          <target>Enables heap tracing in processes specified by <ph dataRef="id1" id="ph1" />Pids<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />PidNewProcess<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>-critsec</source>
          <target>-critsec</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
          <data id="id3">&lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Enables critical section tracing in processes specified by <ph dataRef="id1" id="ph1" />Pids<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />PidNewProcess<ph dataRef="id4" id="ph4" />.</source>
          <target>Enables critical section tracing in processes specified by <ph dataRef="id1" id="ph1" />Pids<ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" />PidNewProcess<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="178">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
          <data id="id2">&amp;lt;</data>
          <data id="id3">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>-setprofint<ph dataRef="id1" id="ph1" />[<ph dataRef="id2" id="ph2" />n<ph dataRef="id3" id="ph3" />] [cached]</source>
          <target>-setprofint<ph dataRef="id1" id="ph1" />[<ph dataRef="id2" id="ph2" />n<ph dataRef="id3" id="ph3" />] [cached]</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">&lt;code&gt;&amp;lt;n&amp;gt; [1221..10000000]&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets sampled profile interval to <ph dataRef="id1" id="ph1" />.</source>
          <target>Sets sampled profile interval to <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>If cached is specified, intervals are cached in ETW and reapplied whenever new ETW kernel loggers with sampled profile are started.</source>
          <target>If cached is specified, intervals are cached in ETW and reapplied whenever new ETW kernel loggers with sampled profile are started.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>The units are 100ns.</source>
          <target>The units are 100ns.</target>
        </segment>
      </unit>
      <unit id="182">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>The default value for <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" /> is 10000; that is, 1ms: not cached.</source>
          <target>The default value for <ph dataRef="id1" id="ph1" />n<ph dataRef="id2" id="ph2" /> is 10000; that is, 1ms: not cached.</target>
        </segment>
      </unit>
      <unit id="183">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-save<ph dataRef="id1" id="ph1" />ProfileFileName!ProfileName|SessionName merged.etl</source>
          <target>-save<ph dataRef="id1" id="ph1" />ProfileFileName!ProfileName|SessionName merged.etl</target>
        </segment>
      </unit>
      <unit id="184">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
          <data id="id3">&lt;em&gt;</data>
          <data id="id4">&lt;/em&gt;</data>
          <data id="id5">&lt;em&gt;</data>
          <data id="id6">&lt;/em&gt;</data>
          <data id="id7">&lt;em&gt;</data>
          <data id="id8">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Flushes the loggers in profile <ph dataRef="id1" id="ph1" />ProfileName<ph dataRef="id2" id="ph2" /> defined in file <ph dataRef="id3" id="ph3" />ProfileFileName<ph dataRef="id4" id="ph4" /> and merges the ETL files to merged.etl; or flushes logger <ph dataRef="id5" id="ph5" />SessionName<ph dataRef="id6" id="ph6" /> defined in file <ph dataRef="id7" id="ph7" />ProfileFileName<ph dataRef="id8" id="ph8" /> and merges the ETL file to Merged.etl.</source>
          <target>Flushes the loggers in profile <ph dataRef="id1" id="ph1" />ProfileName<ph dataRef="id2" id="ph2" /> defined in file <ph dataRef="id3" id="ph3" />ProfileFileName<ph dataRef="id4" id="ph4" /> and merges the ETL files to merged.etl; or flushes logger <ph dataRef="id5" id="ph5" />SessionName<ph dataRef="id6" id="ph6" /> defined in file <ph dataRef="id7" id="ph7" />ProfileFileName<ph dataRef="id8" id="ph8" /> and merges the ETL file to Merged.etl.</target>
        </segment>
      </unit>
      <unit id="185">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>-seteresourcesample<ph dataRef="id1" id="ph1" />n1<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />n2<ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />n3</source>
          <target>-seteresourcesample<ph dataRef="id1" id="ph1" />n1<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />n2<ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />n3</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Sets ERESOURCE sampling, where n1 release sampling rate is greater than or equal to 1000, n2 contention sampling rate is greater than or equal to 1, and n3 number of excessive timeouts is greater than or equal to 1.</source>
          <target>Sets ERESOURCE sampling, where n1 release sampling rate is greater than or equal to 1000, n2 contention sampling rate is greater than or equal to 1, and n3 number of excessive timeouts is greater than or equal to 1.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>The contention sample rate is the rate at which spinlock events are acquired when collisions occur.</source>
          <target>The contention sample rate is the rate at which spinlock events are acquired when collisions occur.</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>For example, if this value is 100, one spinlock event is acquired for each one hundred Spin Lock collisions.</source>
          <target>For example, if this value is 100, one spinlock event is acquired for each one hundred Spin Lock collisions.</target>
        </segment>
      </unit>
      <unit id="189">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
          <data id="id3">&amp;lt;</data>
          <data id="id4">&amp;gt;</data>
          <data id="id5">&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>-setspinlocksample<ph dataRef="id1" id="ph1" />n1<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />n2<ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />n3</source>
          <target>-setspinlocksample<ph dataRef="id1" id="ph1" />n1<ph dataRef="id2" id="ph2" /><ph dataRef="id3" id="ph3" />n2<ph dataRef="id4" id="ph4" /><ph dataRef="id5" id="ph5" />n3</target>
        </segment>
      </unit>
      <unit id="190">
        <originalData>
          <data id="id1">&lt;code&gt;&amp;lt;n1&amp;gt; [ &amp;gt;=1]&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets the spinlock spin threshold to <ph dataRef="id1" id="ph1" />.</source>
          <target>Sets the spinlock spin threshold to <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">&lt;code&gt;&amp;lt;n2&amp;gt; [ &amp;gt;= 1000]&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets the spinlock acquire sample rate to <ph dataRef="id1" id="ph1" />.</source>
          <target>Sets the spinlock acquire sample rate to <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="192">
        <originalData>
          <data id="id1">&lt;code&gt;&amp;lt;n3&amp;gt; [ &amp;gt;= 1]&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets the spinlock contention sample rate to <ph dataRef="id1" id="ph1" />.</source>
          <target>Sets the spinlock contention sample rate to <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>Only 64-bit Windows 7, Windows Server 2008 R2, and newer versions of the operating system support spinlock instrumentation.</source>
          <target>Only 64-bit Windows 7, Windows Server 2008 R2, and newer versions of the operating system support spinlock instrumentation.</target>
        </segment>
      </unit>
      <unit id="194">
        <originalData>
          <data id="id1">&lt;/strong&gt; &lt;em&gt;&amp;lt;</data>
          <data id="id2">&amp;gt;+&amp;lt;</data>
          <data id="id3">&amp;gt;+&amp;lt;</data>
          <data id="id4">&amp;gt;+&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>-pooltag<ph dataRef="id1" id="ph1" />P1<ph dataRef="id2" id="ph2" />P2<ph dataRef="id3" id="ph3" />P3<ph dataRef="id4" id="ph4" />P4</source>
          <target>-pooltag<ph dataRef="id1" id="ph1" />P1<ph dataRef="id2" id="ph2" />P2<ph dataRef="id3" id="ph3" />P3<ph dataRef="id4" id="ph4" />P4</target>
        </segment>
      </unit>
      <unit id="195">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Sets the pool tag filters (<ph dataRef="id1" id="ph1" />Pn<ph dataRef="id2" id="ph2" />) separated by plus signs (+) or semicolons (;).</source>
          <target>Sets the pool tag filters (<ph dataRef="id1" id="ph1" />Pn<ph dataRef="id2" id="ph2" />) separated by plus signs (+) or semicolons (;).</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Use a question mark (?) for a single-character wildcard or an asterisk (*) for a multiple-character wildcard.</source>
          <target>Use a question mark (?) for a single-character wildcard or an asterisk (*) for a multiple-character wildcard.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>A maximum of four filters can be specified.</source>
          <target>A maximum of four filters can be specified.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Multiple loggers can be started using multiple start options, each followed by the options to be applied to that logger.</source>
          <target>Multiple loggers can be started using multiple start options, each followed by the options to be applied to that logger.</target>
        </segment>
      </unit>
      <unit id="200">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
          <data id="id3">`-start LoggerName`</data>
        </originalData>
        <segment state="initial">
          <source>If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LoggerName</pc> or <ph dataRef="id3" id="ph1" /> is omitted, the kernel logger is implied.</source>
          <target>If <pc dataRefEnd="id2" dataRefStart="id1" id="p1">LoggerName</pc> or <ph dataRef="id3" id="ph1" /> is omitted, the kernel logger is implied.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Only a single instance of the kernel logger can exist at any time.</source>
          <target>Only a single instance of the kernel logger can exist at any time.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>If one of the loggers fails to start, all the loggers that are already started are stopped.</source>
          <target>If one of the loggers fails to start, all the loggers that are already started are stopped.</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>Xperf Options</source>
          <target>Xperf Options</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>