<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\enabling-heap-data-capture.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">baa8ede728daef61ff99eee4c3f07fb7a93d21c8</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Enabling Heap Data Capture</source>
          <target>Enabling Heap Data Capture</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Enabling Heap Data Capture</source>
          <target>Enabling Heap Data Capture</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Enabling Heap Data Capture</source>
          <target>Enabling Heap Data Capture</target>
        </segment>
      </unit>
      <unit id="104">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>Process heap analysis is most effective when stacks are collected capturing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HeapAlloc</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HeapRealloc</pc> events.</source>
          <target>Process heap analysis is most effective when stacks are collected capturing <pc dataRefEnd="id2" dataRefStart="id1" id="p1">HeapAlloc</pc> and <pc dataRefEnd="id4" dataRefStart="id3" id="p2">HeapRealloc</pc> events.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>To decode stacks with symbols, you must enable symbol decoding.</source>
          <target>To decode stacks with symbols, you must enable symbol decoding.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>You can capture heap data either when a process is started or on an existing process.</source>
          <target>You can capture heap data either when a process is started or on an existing process.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>To Enable Data Capture When a Process Is Started</source>
          <target>To Enable Data Capture When a Process Is Started</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>This example starts the process being analyzed from the command-line sequence that starts data capture.</source>
          <target>This example starts the process being analyzed from the command-line sequence that starts data capture.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Enabling data capture when a process is started guarantees that there is no loss of allocation information or history.</source>
          <target>Enabling data capture when a process is started guarantees that there is no loss of allocation information or history.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Take the following steps to enable data capture on process launch:</source>
          <target>Take the following steps to enable data capture on process launch:</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>From an elevated command prompt, type the following command:</source>
          <target>From an elevated command prompt, type the following command:</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>The following is an example command:</source>
          <target>The following is an example command:</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>The sidebar opens on the desktop.</source>
          <target>The sidebar opens on the desktop.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>The following table describes these commands.</source>
          <target>The following table describes these commands.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Command</source>
          <target>Command</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>-start HeapSession</source>
          <target>-start HeapSession</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Initializes a tracing session or logger session.</source>
          <target>Initializes a tracing session or logger session.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>In this case the session is named <ph dataRef="id1" id="ph1" />HeapSession<ph dataRef="id2" id="ph2" />.</source>
          <target>In this case the session is named <ph dataRef="id1" id="ph1" />HeapSession<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>-heap</source>
          <target>-heap</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>Identifies <ph dataRef="id1" id="ph1" />HeapSession<ph dataRef="id2" id="ph2" /> as a heap trace.</source>
          <target>Identifies <ph dataRef="id1" id="ph1" />HeapSession<ph dataRef="id2" id="ph2" /> as a heap trace.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>-PidNewProcess</source>
          <target>-PidNewProcess</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Initializes a process.</source>
          <target>Initializes a process.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>In this case, initializes the Windows Sidebar.</source>
          <target>In this case, initializes the Windows Sidebar.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>-BufferSize</source>
          <target>-BufferSize</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Sets the buffer size of the buffer in which the event data is stored.</source>
          <target>Sets the buffer size of the buffer in which the event data is stored.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>An optimum size for a buffer is 1024 KB.</source>
          <target>An optimum size for a buffer is 1024 KB.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>The default is 64 KB.</source>
          <target>The default is 64 KB.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>-MinBuffers</source>
          <target>-MinBuffers</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Sets the minimum number of buffers for event data storage.</source>
          <target>Sets the minimum number of buffers for event data storage.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">&lt;/strong&gt;</data>
          <data id="id2">&lt;strong&gt;</data>
          <data id="id3">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>MinBuffers<ph dataRef="id1" id="ph1" /> should be equal to <ph dataRef="id2" id="ph2" />MaxBuffers<ph dataRef="id3" id="ph3" /> to guarantee consistency between traces.</source>
          <target>MinBuffers<ph dataRef="id1" id="ph1" /> should be equal to <ph dataRef="id2" id="ph2" />MaxBuffers<ph dataRef="id3" id="ph3" /> to guarantee consistency between traces.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>-MaxBuffers</source>
          <target>-MaxBuffers</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Allocate <ph dataRef="id1" id="ph1" />MaxBuffers<ph dataRef="id2" id="ph2" /> conservatively, because buffers are allocated from non-paged memory, which is a finite system resource.</source>
          <target>Allocate <ph dataRef="id1" id="ph1" />MaxBuffers<ph dataRef="id2" id="ph2" /> conservatively, because buffers are allocated from non-paged memory, which is a finite system resource.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>-stackwalk</source>
          <target>-stackwalk</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Initializes the stackwalk facility to collect allocation and deallocation information and associate that information with specific threads.</source>
          <target>Initializes the stackwalk facility to collect allocation and deallocation information and associate that information with specific threads.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>HeapAlloc+HeapRealloc</source>
          <target>HeapAlloc+HeapRealloc</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Identifies specific heap events to be captured and presented by the stackwalk facility.</source>
          <target>Identifies specific heap events to be captured and presented by the stackwalk facility.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Type the following command:</source>
          <target>Type the following command:</target>
        </segment>
      </unit>
      <unit id="139">
        <originalData>
          <data id="id1">`-d HeapTrace.etl`</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" /> command merges traces produced in the session into the HeapTrace.etl file.</source>
          <target>The <ph dataRef="id1" id="ph1" /> command merges traces produced in the session into the HeapTrace.etl file.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>To Enable Data Capture on an Existing Process</source>
          <target>To Enable Data Capture on an Existing Process</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>This option enables data capture without stopping and restarting the process.</source>
          <target>This option enables data capture without stopping and restarting the process.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>This may be advantageous when the scenario being analyzed does not occur until well after the application starts, and initial heap allocation (which can generate extremely large trace files) is not needed.</source>
          <target>This may be advantageous when the scenario being analyzed does not occur until well after the application starts, and initial heap allocation (which can generate extremely large trace files) is not needed.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Take the following steps:</source>
          <target>Take the following steps:</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>From an elevated command prompt, start the NT Kernel Logger with the BASE flag as follows:</source>
          <target>From an elevated command prompt, start the NT Kernel Logger with the BASE flag as follows:</target>
        </segment>
      </unit>
      <unit id="145">
        <originalData>
          <data id="id1">*</data>
          <data id="id2">*</data>
        </originalData>
        <segment state="initial">
          <source>To enable heap tracing on an existing process, substitute the actual process ID for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XXX</pc> in the following command:</source>
          <target>To enable heap tracing on an existing process, substitute the actual process ID for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">XXX</pc> in the following command:</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Prepare the traces for analysis in the same manner as done for data capture when a process is started:</source>
          <target>Prepare the traces for analysis in the same manner as done for data capture when a process is started:</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>heap</source>
          <target>heap</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>