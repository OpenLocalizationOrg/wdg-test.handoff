<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\1-collector-definitions.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">23980585030be96043c8d5c51a02cc0f37d60339</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>1. Collector Definitions</source>
          <target>1. Collector Definitions</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>1. Collector Definitions</source>
          <target>1. Collector Definitions</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Windows Performance Recorder (WPR) currently supports three kinds of collectors: the system collector, event collectors, and a heap event collector.</source>
          <target>Windows Performance Recorder (WPR) currently supports three kinds of collectors: the system collector, event collectors, and a heap event collector.</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>The system collector definition specifies buffer sizes and other attributes for Event Tracing for Windows (ETW) system logger sessions that work together with the NT Kernel Logger.</source>
          <target>The system collector definition specifies buffer sizes and other attributes for Event Tracing for Windows (ETW) system logger sessions that work together with the NT Kernel Logger.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Event and heap collector definitions specify buffer sizes and other attributes for ETW user sessions.</source>
          <target>Event and heap collector definitions specify buffer sizes and other attributes for ETW user sessions.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Collector definition order is restricted by the WPR schema.</source>
          <target>Collector definition order is restricted by the WPR schema.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>In the .wprp file, system collector definitions must precede event collector definitions.</source>
          <target>In the .wprp file, system collector definitions must precede event collector definitions.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>These definitions must both precede the heap collector definition (if a heap collector definition is present).</source>
          <target>These definitions must both precede the heap collector definition (if a heap collector definition is present).</target>
        </segment>
      </unit>
      <unit id="109">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](wprcontrolprofiles-schema.md)</data>
        </originalData>
        <segment state="initial">
          <source>The WPR schema is defined in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WPRControlProfiles Schema</pc>.</source>
          <target>The WPR schema is defined in <pc dataRefEnd="id2" dataRefStart="id1" id="p1">WPRControlProfiles Schema</pc>.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Collector Attributes</source>
          <target>Collector Attributes</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Collectors have the following mandatory attributes:</source>
          <target>Collectors have the following mandatory attributes:</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Id</pc>: Unique string identifier that refers to the collector definition in the .wprp file.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Id</pc>: Unique string identifier that refers to the collector definition in the .wprp file.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc>: Name of the collector; for example, "WPR Collector".</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Name</pc>: Name of the collector; for example, "WPR Collector".</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>The system collector name must be "NT Kernel Logger".</source>
          <target>The system collector name must be "NT Kernel Logger".</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Collector definitions must contain the following buffer size definitions:</source>
          <target>Collector definitions must contain the following buffer size definitions:</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BufferSize</pc>: Specifies the size of a single buffer, in kilobytes (KB).</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">BufferSize</pc>: Specifies the size of a single buffer, in kilobytes (KB).</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Buffers</pc>: Specifies the number of buffers or, if the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PercentageOfTotalMemory</pc> attribute is set to "true", the percentage of total memory to use for buffering.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Buffers</pc>: Specifies the number of buffers or, if the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">PercentageOfTotalMemory</pc> attribute is set to "true", the percentage of total memory to use for buffering.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](logging-mode.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information about buffers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Logging Mode</pc>.</source>
          <target>For more information about buffers, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Logging Mode</pc>.</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Collector Definition Examples</source>
          <target>Collector Definition Examples</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>The following code example shows a system collector definition and an event collector definition.</source>
          <target>The following code example shows a system collector definition and an event collector definition.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Inheritance Examples</source>
          <target>Inheritance Examples</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">`Base=""`</data>
        </originalData>
        <segment state="initial">
          <source>Windows Performance Recorder supports inheritance of its objects by using the <ph dataRef="id1" id="ph1" /> attribute in the WPR profile XML schema.</source>
          <target>Windows Performance Recorder supports inheritance of its objects by using the <ph dataRef="id1" id="ph1" /> attribute in the WPR profile XML schema.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>This allows additions or specializations of objects to be built progressively while adding re-use of common definitions.</source>
          <target>This allows additions or specializations of objects to be built progressively while adding re-use of common definitions.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Unintended complexity and side effects can occur in certain scenarios; this section describes examples and recommended best practices.</source>
          <target>Unintended complexity and side effects can occur in certain scenarios; this section describes examples and recommended best practices.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>Example 1</source>
          <target>Example 1</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>inheritance example</source>
          <target>inheritance example</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
        </originalData>
        <segment state="initial">
          <source>If a profile <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile A</pc> wants to use the event collector <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Collector A</pc> with some modifications, it can define a collector <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Collector A2</pc> that derives from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Collector A</pc> (Base="Collector A"), and then references that collector <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Collector A2</pc>.</source>
          <target>If a profile <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile A</pc> wants to use the event collector <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Collector A</pc> with some modifications, it can define a collector <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Collector A2</pc> that derives from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Collector A</pc> (Base="Collector A"), and then references that collector <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Collector A2</pc>.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>This is recommended because only the collector object derives from another collector object and it is referenced directly.</source>
          <target>This is recommended because only the collector object derives from another collector object and it is referenced directly.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Example 2</source>
          <target>Example 2</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>inheritance example 2</source>
          <target>inheritance example 2</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
        </originalData>
        <segment state="initial">
          <source>A profile <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile A</pc> references a collector <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Collector A</pc>. Another profile <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Profile B</pc> requires changes to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Profile A</pc> so it derives from it, and specifies its changes directly in its definition.</source>
          <target>A profile <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile A</pc> references a collector <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Collector A</pc>. Another profile <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Profile B</pc> requires changes to <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Profile A</pc> so it derives from it, and specifies its changes directly in its definition.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>This is recommended because only the profile object derives from another profile object.</source>
          <target>This is recommended because only the profile object derives from another profile object.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Example 3</source>
          <target>Example 3</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>inheritance example 3</source>
          <target>inheritance example 3</target>
        </segment>
      </unit>
      <unit id="135">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
          <data id="id7">**</data>
          <data id="id8">**</data>
          <data id="id9">**</data>
          <data id="id10">**</data>
          <data id="id11">**</data>
          <data id="id12">**</data>
          <data id="id13">**</data>
          <data id="id14">**</data>
          <data id="id15">**</data>
          <data id="id16">**</data>
        </originalData>
        <segment state="initial">
          <source>A profile <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile A</pc> references a collector <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Collector A</pc>. A collector <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Collector A2</pc> derives from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Collector A</pc>. Finally, the profile <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Profile B</pc> derives both from <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Profile A</pc> and also references <pc dataRefEnd="id14" dataRefStart="id13" id="p7">Collector A</pc> that is already referenced in the parent profile of <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Profile B</pc>.</source>
          <target>A profile <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Profile A</pc> references a collector <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Collector A</pc>. A collector <pc dataRefEnd="id6" dataRefStart="id5" id="p3">Collector A2</pc> derives from <pc dataRefEnd="id8" dataRefStart="id7" id="p4">Collector A</pc>. Finally, the profile <pc dataRefEnd="id10" dataRefStart="id9" id="p5">Profile B</pc> derives both from <pc dataRefEnd="id12" dataRefStart="id11" id="p6">Profile A</pc> and also references <pc dataRefEnd="id14" dataRefStart="id13" id="p7">Collector A</pc> that is already referenced in the parent profile of <pc dataRefEnd="id16" dataRefStart="id15" id="p8">Profile B</pc>.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>In this case it’s ambiguous how the definition for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Collector A2</pc> should be evaluated.</source>
          <target>In this case it’s ambiguous how the definition for <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Collector A2</pc> should be evaluated.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>In one case, the profile derivation take precedence, and in another the collector derivation takes precedence.</source>
          <target>In one case, the profile derivation take precedence, and in another the collector derivation takes precedence.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>This is not recommended practice because the ordering is undefined and may lead to different outcomes based on ordering of operations.</source>
          <target>This is not recommended practice because the ordering is undefined and may lead to different outcomes based on ordering of operations.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Based on this, you should never combine derivations across multiple types of objects.</source>
          <target>Based on this, you should never combine derivations across multiple types of objects.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>Authoring Recording Profiles</source>
          <target>Authoring Recording Profiles</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>2. System and Event Provider Definitions</source>
          <target>2. System and Event Provider Definitions</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Recording Profile XML Reference</source>
          <target>Recording Profile XML Reference</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>