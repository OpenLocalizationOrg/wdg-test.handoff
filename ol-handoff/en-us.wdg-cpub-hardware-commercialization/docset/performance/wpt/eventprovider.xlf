<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">docset\performance\wpt\eventprovider.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">b240ec48019117690eacae92d7bbf0721e413973</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>EventProvider</source>
          <target>EventProvider</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>EventProvider</source>
          <target>EventProvider</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>EventProvider</source>
          <target>EventProvider</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Configures the Event Tracing for Windows (ETW) user-mode provider.</source>
          <target>Configures the Event Tracing for Windows (ETW) user-mode provider.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Element Hierarchy</source>
          <target>Element Hierarchy</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>WindowsPerformanceRecorder</source>
          <target>WindowsPerformanceRecorder</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Syntax</source>
          <target>Syntax</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Attributes and Elements</source>
          <target>Attributes and Elements</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Attributes</source>
          <target>Attributes</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Attribute</source>
          <target>Attribute</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Data type</source>
          <target>Data type</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Required</source>
          <target>Required</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Default</source>
          <target>Default</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Id</source>
          <target>Id</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Uniquely identifies the event provider.</source>
          <target>Uniquely identifies the event provider.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>String that must have at least one character and cannot contain colons (:) or spaces.</source>
          <target>String that must have at least one character and cannot contain colons (:) or spaces.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Yes</source>
          <target>Yes</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Name</source>
          <target>Name</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Indicates the name of the event provider.</source>
          <target>Indicates the name of the event provider.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>This attribute can have one of the following values:</source>
          <target>This attribute can have one of the following values:</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>A registered Crimson provider, for example, <ph dataRef="id1" id="ph1" />Microsoft-Windows-Search-Core<ph dataRef="id2" id="ph2" />.</source>
          <target>A registered Crimson provider, for example, <ph dataRef="id1" id="ph1" />Microsoft-Windows-Search-Core<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="123">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>A provider GUID, for example <ph dataRef="id1" id="ph1" />49c2c27c-fe2d-40bf-8c4e-c3fb518037e7<ph dataRef="id2" id="ph2" />.</source>
          <target>A provider GUID, for example <ph dataRef="id1" id="ph1" />49c2c27c-fe2d-40bf-8c4e-c3fb518037e7<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>The name of a legacy provider, for example <ph dataRef="id1" id="ph1" />IE6<ph dataRef="id2" id="ph2" />.</source>
          <target>The name of a legacy provider, for example <ph dataRef="id1" id="ph1" />IE6<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
          <data id="id3">&amp;quot;</data>
          <data id="id4">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>A special-case name, such as <ph dataRef="id1" id="ph1" />PerfTrack<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />DotNetProvider<ph dataRef="id4" id="ph4" />.</source>
          <target>A special-case name, such as <ph dataRef="id1" id="ph1" />PerfTrack<ph dataRef="id2" id="ph2" /> or <ph dataRef="id3" id="ph3" />DotNetProvider<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Yes</source>
          <target>Yes</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>ProcessExeFilter</source>
          <target>ProcessExeFilter</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Filters an event based on the process .exe name specified.</source>
          <target>Filters an event based on the process .exe name specified.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>This is an optional attribute you add to the <ph dataRef="id1" id="ph1" />EventProvider ID<ph dataRef="id2" id="ph2" /> in the WPR profile.</source>
          <target>This is an optional attribute you add to the <ph dataRef="id1" id="ph1" />EventProvider ID<ph dataRef="id2" id="ph2" /> in the WPR profile.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>For example:</source>
          <target>For example:</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>ProcessExeFilter=<ph dataRef="id1" id="ph1" />wpa.exe</source>
          <target>ProcessExeFilter=<ph dataRef="id1" id="ph1" />wpa.exe</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Note</source>
          <target>Note</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://msdn.microsoft.com/library/windows/desktop/aa363758.aspx)</data>
        </originalData>
        <segment state="initial">
          <source>WPR essentially passes on the .exe name into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">EVENT_FILTER_DESCRIPTOR</pc> structure.</source>
          <target>WPR essentially passes on the .exe name into the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">EVENT_FILTER_DESCRIPTOR</pc> structure.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Base</source>
          <target>Base</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Indicates the base for the provider.</source>
          <target>Indicates the base for the provider.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>string</source>
          <target>string</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>NonPagedMemory</source>
          <target>NonPagedMemory</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Indicates whether non-paged memory is to be used.</source>
          <target>Indicates whether non-paged memory is to be used.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>boolean</source>
          <target>boolean</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>false</source>
          <target>false</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Stack</source>
          <target>Stack</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Indicates whether the provider should capture stacks.</source>
          <target>Indicates whether the provider should capture stacks.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>boolean</source>
          <target>boolean</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>false</source>
          <target>false</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>SID</source>
          <target>SID</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Indicates whether to include the security identifier (SID) of the user to the extended data of logged events.</source>
          <target>Indicates whether to include the security identifier (SID) of the user to the extended data of logged events.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>boolean</source>
          <target>boolean</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>false</source>
          <target>false</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>TSID</source>
          <target>TSID</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Indicates whether the terminal session identifier is included in the extended data of logged events.</source>
          <target>Indicates whether the terminal session identifier is included in the extended data of logged events.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>boolean</source>
          <target>boolean</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>false</source>
          <target>false</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Level</source>
          <target>Level</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Indicates the level value.</source>
          <target>Indicates the level value.</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>unsignedByte</source>
          <target>unsignedByte</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>Zero, which ETW treats as 0xFFFFFFFFFFFFFFFF.</source>
          <target>Zero, which ETW treats as 0xFFFFFFFFFFFFFFFF.</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>CaptureStateOnly</source>
          <target>CaptureStateOnly</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>Indicates whether a provider is enabled only at start or save of a tracing session.</source>
          <target>Indicates whether a provider is enabled only at start or save of a tracing session.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>boolean</source>
          <target>boolean</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>No</source>
          <target>No</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>false</source>
          <target>false</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Child Elements</source>
          <target>Child Elements</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>Element</source>
          <target>Element</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Requirement</source>
          <target>Requirement</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>Keywords (in EventProvider)</source>
          <target>Keywords (in EventProvider)</target>
        </segment>
      </unit>
      <unit id="174">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](keyword--in-eventprovider-.md)</data>
        </originalData>
        <segment state="initial">
          <source>Represents a collection of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyword (in EventProvider)</pc> elements.</source>
          <target>Represents a collection of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyword (in EventProvider)</pc> elements.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Required, 1 or more.</source>
          <target>Required, 1 or more.</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>CaptureStateOnStart</source>
          <target>CaptureStateOnStart</target>
        </segment>
      </unit>
      <unit id="177">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](keyword--in-eventprovider-.md)</data>
        </originalData>
        <segment state="initial">
          <source>Represents a collection of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyword (in EventProvider)</pc> elements for events to be captured at the start of a trace.</source>
          <target>Represents a collection of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyword (in EventProvider)</pc> elements for events to be captured at the start of a trace.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Optional, zero or 1.</source>
          <target>Optional, zero or 1.</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>CaptureStateOnSave</source>
          <target>CaptureStateOnSave</target>
        </segment>
      </unit>
      <unit id="180">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](keyword--in-eventprovider-.md)</data>
        </originalData>
        <segment state="initial">
          <source>Represents a collection of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyword (in EventProvider)</pc> elements for events to be captured when a trace is saved.</source>
          <target>Represents a collection of <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Keyword (in EventProvider)</pc> elements for events to be captured when a trace is saved.</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Optional, zero or 1.</source>
          <target>Optional, zero or 1.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Parent Elements</source>
          <target>Parent Elements</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>Element</source>
          <target>Element</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>EventProviders</source>
          <target>EventProviders</target>
        </segment>
      </unit>
      <unit id="186">
        <originalData>
          <data id="id1">&lt;strong&gt;</data>
          <data id="id2">&lt;/strong&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Represents a collection of <ph dataRef="id1" id="ph1" />EventProvider<ph dataRef="id2" id="ph2" /> elements.</source>
          <target>Represents a collection of <ph dataRef="id1" id="ph1" />EventProvider<ph dataRef="id2" id="ph2" /> elements.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Profiles</source>
          <target>Profiles</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Represents a collection of collectors, providers, and profiles.</source>
          <target>Represents a collection of collectors, providers, and profiles.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Remarks</source>
          <target>Remarks</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>Provider definition order is important.</source>
          <target>Provider definition order is important.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Definitions must appear in the following order in the .wprp file:</source>
          <target>Definitions must appear in the following order in the .wprp file:</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Collectors</source>
          <target>Collectors</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>System provider</source>
          <target>System provider</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Event provider(s)</source>
          <target>Event provider(s)</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Optional inner XML tags specify what keywords to enable.</source>
          <target>Optional inner XML tags specify what keywords to enable.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Unlike for system providers, there are no textual constants defined for event providers, so hexadecimal-style strings must be used.</source>
          <target>Unlike for system providers, there are no textual constants defined for event providers, so hexadecimal-style strings must be used.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>However, the syntax is the same as for system provider.</source>
          <target>However, the syntax is the same as for system provider.</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>If no keywords are specified, the default value of zero is used (which is treated by ETW as the string 0xFFFFFFFFFFFFFFFF).</source>
          <target>If no keywords are specified, the default value of zero is used (which is treated by ETW as the string 0xFFFFFFFFFFFFFFFF).</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Derived event providers have all the attributes of the base provider by default.</source>
          <target>Derived event providers have all the attributes of the base provider by default.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>They can be overridden by explicitly specifying them in the derived provider.</source>
          <target>They can be overridden by explicitly specifying them in the derived provider.</target>
        </segment>
      </unit>
      <unit id="201">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](inheritance.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Inheritance</pc>.</source>
          <target>For more information, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Inheritance</pc>.</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>Example</source>
          <target>Example</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>The following example defines two event providers.</source>
          <target>The following example defines two event providers.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>The following code examples define capture-state providers.</source>
          <target>The following code examples define capture-state providers.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>For managed scenarios, use the following event provider definition:</source>
          <target>For managed scenarios, use the following event provider definition:</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>Elements</source>
          <target>Elements</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>