<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\getting-apps-to-run-on-device-guard-protected-devices.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">055bcb111d5ad7493dd4e80b7486140143ccc4ad</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Get apps to run on Device Guard-protected devices (Windows 10)</source>
          <target>Get apps to run on Device Guard-protected devices (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Windows 10 introduces several new features and settings that when combined all equal what we're calling, Device Guard.</source>
          <target>Windows 10 introduces several new features and settings that when combined all equal what we're calling, Device Guard.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Get apps to run on Device Guard-protected devices</source>
          <target>Get apps to run on Device Guard-protected devices</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Windows 10 introduces several new features and settings that when combined all equal what we're calling, Device Guard.</source>
          <target>Windows 10 introduces several new features and settings that when combined all equal what we're calling, Device Guard.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Device Guard can help to protect your enterprise devices against the accidental running of malicious apps by requiring all of your apps to be signed by a trusted entity.</source>
          <target>Device Guard can help to protect your enterprise devices against the accidental running of malicious apps by requiring all of your apps to be signed by a trusted entity.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>To use Device Guard in an enterprise, you must be able to get your existing line-of-business and Independent Software Vendor (ISV)-developed apps to run on a protected device.</source>
          <target>To use Device Guard in an enterprise, you must be able to get your existing line-of-business and Independent Software Vendor (ISV)-developed apps to run on a protected device.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Unfortunately, many line-of-business apps aren't signed, and in many cases, aren't even being actively developed.</source>
          <target>Unfortunately, many line-of-business apps aren't signed, and in many cases, aren't even being actively developed.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Similarly, you may have unsigned software from an ISV that you want to run, or you want to run certain applications from an ISV while not trusting all applications from that ISV.</source>
          <target>Similarly, you may have unsigned software from an ISV that you want to run, or you want to run certain applications from an ISV while not trusting all applications from that ISV.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>As part of the Device Guard features, Windows 10 includes a new tool called Package Inspector.</source>
          <target>As part of the Device Guard features, Windows 10 includes a new tool called Package Inspector.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Package Inspector scans your unsigned apps, and creates catalog files of the installed and running binaries, which can then be signed by the Sign Tool Windows SDK utility and distributed using Group Policy so that your apps will run on Device Guard-protected devices.</source>
          <target>Package Inspector scans your unsigned apps, and creates catalog files of the installed and running binaries, which can then be signed by the Sign Tool Windows SDK utility and distributed using Group Policy so that your apps will run on Device Guard-protected devices.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>What you need to run your apps on Device-Guard protected devices</source>
          <target>What you need to run your apps on Device-Guard protected devices</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Before you can get your apps to run on Device Guard-protected devices, you must have:</source>
          <target>Before you can get your apps to run on Device Guard-protected devices, you must have:</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>A device running Windows 10 Enterprise, Windows 10 Education, or Windows Server 2016 Technical Preview.</source>
          <target>A device running Windows 10 Enterprise, Windows 10 Education, or Windows Server 2016 Technical Preview.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Determined which unsigned apps you need to include in your catalog file.</source>
          <target>Determined which unsigned apps you need to include in your catalog file.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Created a code integrity policy for use by Device Guard.</source>
          <target>Created a code integrity policy for use by Device Guard.</target>
        </segment>
      </unit>
      <unit id="118">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=619282)</data>
        </originalData>
        <segment state="initial">
          <source>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">code signing certificate</pc>, created using an internal public key infrastructure (PKI).</source>
          <target>A <pc dataRefEnd="id2" dataRefStart="id1" id="p1">code signing certificate</pc>, created using an internal public key infrastructure (PKI).</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">]( http://go.microsoft.com/fwlink/p/?LinkId=619283)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SignTool</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SignTool</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>A command-line tool that digitally signs files, verifies signatures in files, or time stamps files.</source>
          <target>A command-line tool that digitally signs files, verifies signatures in files, or time stamps files.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>The tool is installed in the <ph dataRef="id1" id="ph1" />Bin folder of the Microsoft Windows Software Development Kit (SDK) installation path.</source>
          <target>The tool is installed in the <ph dataRef="id1" id="ph1" />Bin folder of the Microsoft Windows Software Development Kit (SDK) installation path.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>Create a catalog file for unsigned apps</source>
          <target>Create a catalog file for unsigned apps</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>You must run Package Inspector on a device that's running a temporary Code Integrity Policy in audit mode, created explicitly for this purpose.</source>
          <target>You must run Package Inspector on a device that's running a temporary Code Integrity Policy in audit mode, created explicitly for this purpose.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>Audit mode lets this policy catch any binaries missed by the inspection tool, but because it's audit mode, allows everything to continue running.</source>
          <target>Audit mode lets this policy catch any binaries missed by the inspection tool, but because it's audit mode, allows everything to continue running.</target>
        </segment>
      </unit>
      <unit id="125">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  This temporary policy, shouldn't be used for normal business purposes.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  This temporary policy, shouldn't be used for normal business purposes.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>To create a catalog file for an existing app</source>
          <target>To create a catalog file for an existing app</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Start PowerShell as an administrator, and create your temporary policy file by typing:</source>
          <target>Start PowerShell as an administrator, and create your temporary policy file by typing:</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Restart your device.</source>
          <target>Restart your device.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Start PowerShell as an administrator, and start scanning your file system by typing:</source>
          <target>Start PowerShell as an administrator, and start scanning your file system by typing:</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Where:</source>
          <target>Where:</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Option</source>
          <target>Option</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">&amp;lt;&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>start <ph dataRef="id1" id="ph1" />drive_letter<ph dataRef="id2" id="ph2" />:</source>
          <target>start <ph dataRef="id1" id="ph1" />drive_letter<ph dataRef="id2" id="ph2" />:</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Specifies to start a scan.</source>
          <target>Specifies to start a scan.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>For example, starting to scan the C: drive.</source>
          <target>For example, starting to scan the C: drive.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>-path</source>
          <target>-path</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>File path to the package being inspected.</source>
          <target>File path to the package being inspected.</target>
        </segment>
      </unit>
      <unit id="138">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>Copy the app installation media to your C:<ph dataRef="id1" id="ph1" /> drive, and then install and run the program.</source>
          <target>Copy the app installation media to your C:<ph dataRef="id1" id="ph1" /> drive, and then install and run the program.</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Copying the media to your local drive helps to make sure that the installer and its related files are included in your catalog file.</source>
          <target>Copying the media to your local drive helps to make sure that the installer and its related files are included in your catalog file.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>If you miss the install files, your Code Integrity Policy might trust the app to run, but not to install.</source>
          <target>If you miss the install files, your Code Integrity Policy might trust the app to run, but not to install.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>After you've installed the app, you should check for updates.</source>
          <target>After you've installed the app, you should check for updates.</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>If updates happen while the app is open, you should close and restart the app to make sure everything is caught during the inspection process.</source>
          <target>If updates happen while the app is open, you should close and restart the app to make sure everything is caught during the inspection process.</target>
        </segment>
      </unit>
      <unit id="143">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Because the Package Inspector creates a log entry in the catalog for every binary laid down on the file system, we recommend that you don't run any other installations or updates during the scanning process.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  Because the Package Inspector creates a log entry in the catalog for every binary laid down on the file system, we recommend that you don't run any other installations or updates during the scanning process.</target>
        </segment>
      </unit>
      <unit id="144">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Optional:</pc> If you want to create a multi-app catalog (many apps included in a single catalog file), you can continue to run Steps 2-3 for each additional app.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Optional:</pc> If you want to create a multi-app catalog (many apps included in a single catalog file), you can continue to run Steps 2-3 for each additional app.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>After you've added all of the apps you want to add, you can continue to Step 5.</source>
          <target>After you've added all of the apps you want to add, you can continue to Step 5.</target>
        </segment>
      </unit>
      <unit id="146">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">    -   </data>
          <data id="id4">**</data>
          <data id="id5">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note: </pc>  To streamline your process, we suggest: <ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Actively supported and updated apps.</pc></source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note: </pc>  To streamline your process, we suggest: <ph dataRef="id3" id="ph1" /><pc dataRefEnd="id5" dataRefStart="id4" id="p2">Actively supported and updated apps.</pc></target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Create a single catalog file for each app.</source>
          <target>Create a single catalog file for each app.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Legacy apps, non-active or not updated.</source>
          <target>Legacy apps, non-active or not updated.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Create a single catalog file for all of your legacy apps.</source>
          <target>Create a single catalog file for all of your legacy apps.</target>
        </segment>
      </unit>
      <unit id="150">
        <originalData>
          <data id="id1">\\</data>
        </originalData>
        <segment state="initial">
          <source>Stop the scanning process and create the .<ph dataRef="id1" id="ph1" />InspectedPackage.cat and InspectedPackage.cdf files for your single app in your specified location, by typing:</source>
          <target>Stop the scanning process and create the .<ph dataRef="id1" id="ph1" />InspectedPackage.cat and InspectedPackage.cdf files for your single app in your specified location, by typing:</target>
        </segment>
      </unit>
      <unit id="151">
        <originalData>
          <data id="id1">`scan`</data>
          <data id="id2">`start`</data>
          <data id="id3">`stop`</data>
        </originalData>
        <segment state="initial">
          <source>You can also use the <ph dataRef="id1" id="ph1" /> command in place of using both <ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" /> if you want to create a catalog of files that are already present on your hard drive.</source>
          <target>You can also use the <ph dataRef="id1" id="ph1" /> command in place of using both <ph dataRef="id2" id="ph2" /> and <ph dataRef="id3" id="ph3" /> if you want to create a catalog of files that are already present on your hard drive.</target>
        </segment>
      </unit>
      <unit id="152">
        <originalData>
          <data id="id1">`scan`</data>
        </originalData>
        <segment state="initial">
          <source>The <ph dataRef="id1" id="ph1" /> command recursively scans a specified directory and includes all signable files in the catalog.</source>
          <target>The <ph dataRef="id1" id="ph1" /> command recursively scans a specified directory and includes all signable files in the catalog.</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>You can scan a specified directory by typing:</source>
          <target>You can scan a specified directory by typing:</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">`scan`</data>
          <data id="id2">`stop`</data>
        </originalData>
        <segment state="initial">
          <source>The following table shows the available options for both the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> commands.</source>
          <target>The following table shows the available options for both the <ph dataRef="id1" id="ph1" /> and <ph dataRef="id2" id="ph2" /> commands.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Option</source>
          <target>Option</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="157">
        <originalData>
          <data id="id1">&amp;lt;&lt;em&gt;</data>
          <data id="id2">&lt;/em&gt;&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>stop <ph dataRef="id1" id="ph1" />drive_letter<ph dataRef="id2" id="ph2" />:</source>
          <target>stop <ph dataRef="id1" id="ph1" />drive_letter<ph dataRef="id2" id="ph2" />:</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Specifies that a scan of the specified location is complete, creating either a catalog or a definition file.</source>
          <target>Specifies that a scan of the specified location is complete, creating either a catalog or a definition file.</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>For example, <ph dataRef="id1" id="ph1" />C:</source>
          <target>For example, <ph dataRef="id1" id="ph1" />C:</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">&lt;em&gt;&amp;lt;</data>
        </originalData>
        <segment state="initial">
          <source>scan <ph dataRef="id1" id="ph1" />path to scan</source>
          <target>scan <ph dataRef="id1" id="ph1" />path to scan</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Specifies a directory path to scan.</source>
          <target>Specifies a directory path to scan.</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>This command recursively scans a specified directory and includes all signable files in the catalog.</source>
          <target>This command recursively scans a specified directory and includes all signable files in the catalog.</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>-out</source>
          <target>-out</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Specifies what type of info should be created by the tool.</source>
          <target>Specifies what type of info should be created by the tool.</target>
        </segment>
      </unit>
      <unit id="165">
        <originalData>
          <data id="id1">&lt;code&gt;CAT&lt;/code&gt;</data>
          <data id="id2">&lt;code&gt;CDF&lt;/code&gt;</data>
          <data id="id3">&lt;code&gt;list&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use either <ph dataRef="id1" id="ph1" /> for a catalog file, <ph dataRef="id2" id="ph2" /> for a catalog definition file or <ph dataRef="id3" id="ph3" /> for a delimited list of files.</source>
          <target>You can use either <ph dataRef="id1" id="ph1" /> for a catalog file, <ph dataRef="id2" id="ph2" /> for a catalog definition file or <ph dataRef="id3" id="ph3" /> for a delimited list of files.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>-listpath</source>
          <target>-listpath</target>
        </segment>
      </unit>
      <unit id="167">
        <originalData>
          <data id="id1">&lt;code&gt;-out list&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>Specifies the location where the installer will output the list of files for <ph dataRef="id1" id="ph1" />.</source>
          <target>Specifies the location where the installer will output the list of files for <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="168">
        <originalData>
          <data id="id1">&amp;lt;&lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>-cdfPath <ph dataRef="id1" id="ph1" />file_name</source>
          <target>-cdfPath <ph dataRef="id1" id="ph1" />file_name</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Specifies where the tool should put the created .cdf file.</source>
          <target>Specifies where the tool should put the created .cdf file.</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>If you use this option, you must also specify the file name.</source>
          <target>If you use this option, you must also specify the file name.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>We recommend that you use the full path to the file.</source>
          <target>We recommend that you use the full path to the file.</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>However, relative paths are supported.</source>
          <target>However, relative paths are supported.</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>-resdir</source>
          <target>-resdir</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>This option isn't currently supported.</source>
          <target>This option isn't currently supported.</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>-name</source>
          <target>-name</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>This option isn't currently supported.</source>
          <target>This option isn't currently supported.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>-ph</source>
          <target>-ph</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Specifies whether to include page hashes in the catalog.</source>
          <target>Specifies whether to include page hashes in the catalog.</target>
        </segment>
      </unit>
      <unit id="179">
        <originalData>
          <data id="id1">&lt;code&gt;True&lt;/code&gt;</data>
          <data id="id2">&lt;code&gt;False&lt;/code&gt;</data>
        </originalData>
        <segment state="initial">
          <source>You can use either <ph dataRef="id1" id="ph1" /> to add the hashes or <ph dataRef="id2" id="ph2" /> to not add the hashes.</source>
          <target>You can use either <ph dataRef="id1" id="ph1" /> to add the hashes or <ph dataRef="id2" id="ph2" /> to not add the hashes.</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>-en</source>
          <target>-en</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>Specifies the catalog's encoding type.</source>
          <target>Specifies the catalog's encoding type.</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>By default, it's PKCS_7_ASN_ENCODING | X509_ASN_ENCODING, 0x00010001.</source>
          <target>By default, it's PKCS_7_ASN_ENCODING | X509_ASN_ENCODING, 0x00010001.</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>-ca1</source>
          <target>-ca1</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Specifies the CATATTR1 in the catalog and catalog definition files.</source>
          <target>Specifies the CATATTR1 in the catalog and catalog definition files.</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>-ca2</source>
          <target>-ca2</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>Specifies the CATATTR2 in the catalog and catalog definition files.</source>
          <target>Specifies the CATATTR2 in the catalog and catalog definition files.</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>You can add additional parameters to your catalog beyond what's listed here.</source>
          <target>You can add additional parameters to your catalog beyond what's listed here.</target>
        </segment>
      </unit>
      <unit id="188">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=618024)</data>
        </originalData>
        <segment state="initial">
          <source>For more info, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MakeCat</pc> topic.</source>
          <target>For more info, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">MakeCat</pc> topic.</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Sign your catalog file using Sign Tool</source>
          <target>Sign your catalog file using Sign Tool</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>You can sign your catalog file using Sign Tool, located in the Windows 7 or later Windows Software Development Kit (SDK) or by using the Device Guard signing portal.</source>
          <target>You can sign your catalog file using Sign Tool, located in the Windows 7 or later Windows Software Development Kit (SDK) or by using the Device Guard signing portal.</target>
        </segment>
      </unit>
      <unit id="191">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkID=698760)</data>
        </originalData>
        <segment state="initial">
          <source>For details on using the Device Guard signing portal, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard signing</pc>.</source>
          <target>For details on using the Device Guard signing portal, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Device Guard signing</pc>.</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>This process shows how to use a password-protected Personal Information Exchange (.pfx) file to sign the catalog file.</source>
          <target>This process shows how to use a password-protected Personal Information Exchange (.pfx) file to sign the catalog file.</target>
        </segment>
      </unit>
      <unit id="193">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  To use this tool, you must have an internal certificate authority code signing certificate, or a code signing certificate issued by an external third-party certificate authority.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Important:</pc>  To use this tool, you must have an internal certificate authority code signing certificate, or a code signing certificate issued by an external third-party certificate authority.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>To use Sign Tool</source>
          <target>To use Sign Tool</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Check that your code signing certificates have been imported into your certificate store or that they're on the file system.</source>
          <target>Check that your code signing certificates have been imported into your certificate store or that they're on the file system.</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>Open SignTool.exe and sign the catalog file, based on where your certificate is stored.</source>
          <target>Open SignTool.exe and sign the catalog file, based on where your certificate is stored.</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>If you are using the PFX from a file system location:</source>
          <target>If you are using the PFX from a file system location:</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>If you have imported the certificate into your cert store:</source>
          <target>If you have imported the certificate into your cert store:</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>Where:</source>
          <target>Where:</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>Option</source>
          <target>Option</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>signtool</source>
          <target>signtool</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>Specifies the full path location to SignTool.exe.</source>
          <target>Specifies the full path location to SignTool.exe.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>sign</source>
          <target>sign</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>Digitally signs files.</source>
          <target>Digitally signs files.</target>
        </segment>
      </unit>
      <unit id="206">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=619283)</data>
        </originalData>
        <segment state="initial">
          <source>For a list of the options supported by the sign command, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SignTool options</pc>.</source>
          <target>For a list of the options supported by the sign command, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SignTool options</pc>.</target>
        </segment>
      </unit>
      <unit id="207">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/n <ph dataRef="id1" id="ph1" />SubjectName</source>
          <target>/n <ph dataRef="id1" id="ph1" />SubjectName</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>Specifies the name of the subject of the signing certificate.</source>
          <target>Specifies the name of the subject of the signing certificate.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>This value can be a substring of the entire subject name.</source>
          <target>This value can be a substring of the entire subject name.</target>
        </segment>
      </unit>
      <unit id="210">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/f <ph dataRef="id1" id="ph1" />SignCertFileLocation</source>
          <target>/f <ph dataRef="id1" id="ph1" />SignCertFileLocation</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>Specifies the signing certificate in a file.</source>
          <target>Specifies the signing certificate in a file.</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>If the file is in .pfx format and protected by a password, use the /p option to specify the password.</source>
          <target>If the file is in .pfx format and protected by a password, use the /p option to specify the password.</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>If the file does not contain private keys, use the /csp and /k options to specify the .csp and private key container name.</source>
          <target>If the file does not contain private keys, use the /csp and /k options to specify the .csp and private key container name.</target>
        </segment>
      </unit>
      <unit id="214">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/p <ph dataRef="id1" id="ph1" />Password</source>
          <target>/p <ph dataRef="id1" id="ph1" />Password</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>Specifies the password to use when opening a PFX file.</source>
          <target>Specifies the password to use when opening a PFX file.</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>(Use the /f option to specify a PFX file.)</source>
          <target>(Use the /f option to specify a PFX file.)</target>
        </segment>
      </unit>
      <unit id="217">
        <originalData>
          <data id="id1">&lt;em&gt;</data>
        </originalData>
        <segment state="initial">
          <source>/fd <ph dataRef="id1" id="ph1" />Algorithm</source>
          <target>/fd <ph dataRef="id1" id="ph1" />Algorithm</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>Specifies the file digest algorithm to use for creating file signatures.</source>
          <target>Specifies the file digest algorithm to use for creating file signatures.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>The default is SHA2.</source>
          <target>The default is SHA2.</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>/v</source>
          <target>/v</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Displays verbose output regardless of whether the command runs successfully or fails, and displays warning messages.</source>
          <target>Displays verbose output regardless of whether the command runs successfully or fails, and displays warning messages.</target>
        </segment>
      </unit>
      <unit id="222">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://go.microsoft.com/fwlink/p/?LinkId=618026)</data>
        </originalData>
        <segment state="initial">
          <source>For more detailed info and examples using the available options, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SignTool.exe (Sign Tool)</pc> topic.</source>
          <target>For more detailed info and examples using the available options, see the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">SignTool.exe (Sign Tool)</pc> topic.</target>
        </segment>
      </unit>
      <unit id="223">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>In File Explorer, right-click your catalog file, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>, and then click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Digital Signatures</pc> tab to make sure your catalog file's digital signature is accurate.</source>
          <target>In File Explorer, right-click your catalog file, click <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Properties</pc>, and then click the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Digital Signatures</pc> tab to make sure your catalog file's digital signature is accurate.</target>
        </segment>
      </unit>
      <unit id="224">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>Copy your catalog file to C:<ph dataRef="id1" id="ph1" />Windows<ph dataRef="id2" id="ph2" />System32<ph dataRef="id3" id="ph3" />catroot<ph dataRef="id4" id="ph4" />{F750E6C3-38EE-11D1-85E5-00C04FC295EE} and test the file.</source>
          <target>Copy your catalog file to C:<ph dataRef="id1" id="ph1" />Windows<ph dataRef="id2" id="ph2" />System32<ph dataRef="id3" id="ph3" />catroot<ph dataRef="id4" id="ph4" />{F750E6C3-38EE-11D1-85E5-00C04FC295EE} and test the file.</target>
        </segment>
      </unit>
      <unit id="225">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For testing purposes, you can manually copy your file to this location.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For testing purposes, you can manually copy your file to this location.</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>However, we recommend that you use Group Policy to copy the catalog file to all of your devices for large-scale implementations.</source>
          <target>However, we recommend that you use Group Policy to copy the catalog file to all of your devices for large-scale implementations.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>Troubleshooting the Package Inspector</source>
          <target>Troubleshooting the Package Inspector</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>If you see "Error 1181" while stopping the Package Inspector, you'll need to increase your USN journal size and then clear all of the cached data before re-scanning the impacted apps.</source>
          <target>If you see "Error 1181" while stopping the Package Inspector, you'll need to increase your USN journal size and then clear all of the cached data before re-scanning the impacted apps.</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>You must make sure that you clear the cache by creating and setting a new temporary policy.</source>
          <target>You must make sure that you clear the cache by creating and setting a new temporary policy.</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>If you reuse the same policy, the Package Inspector will fail.</source>
          <target>If you reuse the same policy, the Package Inspector will fail.</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>To increase your journal size</source>
          <target>To increase your journal size</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>Open a command-prompt window, and then type:</source>
          <target>Open a command-prompt window, and then type:</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>Where the "m" value needs to be increased.</source>
          <target>Where the "m" value needs to be increased.</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>We recommend that you change the value to at least 4 times the default value of m=0x2000000.</source>
          <target>We recommend that you change the value to at least 4 times the default value of m=0x2000000.</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>Re-run the failed app installation(s).</source>
          <target>Re-run the failed app installation(s).</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>To clear your cached data and re-scan your apps</source>
          <target>To clear your cached data and re-scan your apps</target>
        </segment>
      </unit>
      <unit id="237">
        <originalData>
          <data id="id1">\\</data>
          <data id="id2">\\</data>
          <data id="id3">\\</data>
          <data id="id4">\\</data>
        </originalData>
        <segment state="initial">
          <source>Delete the SIPolicy.p7b file from the C:<ph dataRef="id1" id="ph1" />Windows<ph dataRef="id2" id="ph2" />System32<ph dataRef="id3" id="ph3" />CodeIntegrity<ph dataRef="id4" id="ph4" /> folder.</source>
          <target>Delete the SIPolicy.p7b file from the C:<ph dataRef="id1" id="ph1" />Windows<ph dataRef="id2" id="ph2" />System32<ph dataRef="id3" id="ph3" />CodeIntegrity<ph dataRef="id4" id="ph4" /> folder.</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>Create a new temporary Code Integrity Policy to clear all of the cached data by starting Windows Powershell as an administrator and typing:</source>
          <target>Create a new temporary Code Integrity Policy to clear all of the cached data by starting Windows Powershell as an administrator and typing:</target>
        </segment>
      </unit>
      <unit id="239">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](#create-a-catalog-file-for-unsigned-apps)</data>
        </originalData>
        <segment state="initial">
          <source>Restart your device and follow the steps in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a catalog file for unsigned apps</pc> section.</source>
          <target>Restart your device and follow the steps in the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Create a catalog file for unsigned apps</pc> section.</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Download SignTool</source>
          <target>Download SignTool</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>