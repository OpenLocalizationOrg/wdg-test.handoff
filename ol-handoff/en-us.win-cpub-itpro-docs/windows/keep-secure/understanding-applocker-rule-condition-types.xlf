<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">windows\keep-secure\understanding-applocker-rule-condition-types.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">df3fe9a9c02e6154c89f814bf62a1b574eb6ae44</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Understanding AppLocker rule condition types (Windows 10)</source>
          <target>Understanding AppLocker rule condition types (Windows 10)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>This topic for the IT professional describes the three types of AppLocker rule conditions.</source>
          <target>This topic for the IT professional describes the three types of AppLocker rule conditions.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Understanding AppLocker rule condition types</source>
          <target>Understanding AppLocker rule condition types</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Applies to</source>
          <target>Applies to</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Windows 10</source>
          <target>Windows 10</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>This topic for the IT professional describes the three types of AppLocker rule conditions.</source>
          <target>This topic for the IT professional describes the three types of AppLocker rule conditions.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>Rule conditions are criteria that the AppLocker rule is based on.</source>
          <target>Rule conditions are criteria that the AppLocker rule is based on.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>Primary conditions are required to create an AppLocker rule.</source>
          <target>Primary conditions are required to create an AppLocker rule.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>The three primary rule conditions are publisher, path, and file hash.</source>
          <target>The three primary rule conditions are publisher, path, and file hash.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Publisher</source>
          <target>Publisher</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>To use a publisher condition, the files must be digitally signed by the software publisher, or you must do so by using an internal certificate.</source>
          <target>To use a publisher condition, the files must be digitally signed by the software publisher, or you must do so by using an internal certificate.</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>Rules that are specified to the version level might have to be updated when a new version of the file is released.</source>
          <target>Rules that are specified to the version level might have to be updated when a new version of the file is released.</target>
        </segment>
      </unit>
      <unit id="113">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](understanding-the-publisher-rule-condition-in-applocker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the publisher rule condition in AppLocker</pc>.</source>
          <target>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the publisher rule condition in AppLocker</pc>.</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Path</source>
          <target>Path</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Any file can be assigned this rule condition; however, because path rules specify locations within the file system, any subdirectory will also be affected by the rule (unless explicitly exempted).</source>
          <target>Any file can be assigned this rule condition; however, because path rules specify locations within the file system, any subdirectory will also be affected by the rule (unless explicitly exempted).</target>
        </segment>
      </unit>
      <unit id="116">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](understanding-the-path-rule-condition-in-applocker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the path rule condition in AppLocker</pc>.</source>
          <target>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the path rule condition in AppLocker</pc>.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>File hash</source>
          <target>File hash</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>Any file can be assigned this rule condition; however, the rule must be updated each time a new version of the file is released because the hash value is unique to that the version of the file.</source>
          <target>Any file can be assigned this rule condition; however, the rule must be updated each time a new version of the file is released because the hash value is unique to that the version of the file.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](understanding-the-file-hash-rule-condition-in-applocker.md)</data>
        </originalData>
        <segment state="initial">
          <source>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the file hash rule condition in AppLocker</pc>.</source>
          <target>For more info about this rule condition, see <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Understanding the file hash rule condition in AppLocker</pc>.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>Considerations</source>
          <target>Considerations</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Selecting the appropriate condition for each rule depends on the overall application control policy goals of the organization, the AppLocker rule maintenance goals, and the condition of the existing (or planned) application deployment.</source>
          <target>Selecting the appropriate condition for each rule depends on the overall application control policy goals of the organization, the AppLocker rule maintenance goals, and the condition of the existing (or planned) application deployment.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>The following questions can help you decide which rule condition to use.</source>
          <target>The following questions can help you decide which rule condition to use.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Is the file digitally signed by a software publisher?</source>
          <target>Is the file digitally signed by a software publisher?</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>If the file is signed by a software publisher, we recommend that you create rules with publisher conditions.</source>
          <target>If the file is signed by a software publisher, we recommend that you create rules with publisher conditions.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>You may still create file hash and path conditions for signed files.</source>
          <target>You may still create file hash and path conditions for signed files.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>However, if the file is not digitally signed by a software publisher, you can:</source>
          <target>However, if the file is not digitally signed by a software publisher, you can:</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>Sign the file by using an internal certificate.</source>
          <target>Sign the file by using an internal certificate.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>Create a rule by using a file hash condition.</source>
          <target>Create a rule by using a file hash condition.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Create a rule by using a path condition.</source>
          <target>Create a rule by using a path condition.</target>
        </segment>
      </unit>
      <unit id="130">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  To determine how many applications on a reference computer are digitally signed, you can use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Get-AppLockerFileInformation</pc> Windows PowerShell cmdlet for a directory of files.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  To determine how many applications on a reference computer are digitally signed, you can use the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Get-AppLockerFileInformation</pc> Windows PowerShell cmdlet for a directory of files.</target>
        </segment>
      </unit>
      <unit id="131">
        <originalData>
          <data id="id1">        `Get-AppLockerFileInformation –Directory C:\Windows\ -FileType EXE -recurse`</data>
        </originalData>
        <segment state="initial">
          <source>For example, <ph dataRef="id1" id="ph1" /> displays the properties for all .exe and .com files within the Windows directory.</source>
          <target>For example, <ph dataRef="id1" id="ph1" /> displays the properties for all .exe and .com files within the Windows directory.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>What rule condition type does your organization prefer?</source>
          <target>What rule condition type does your organization prefer?</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>If your organization is already using Software Restriction Policies (SRP) to restrict what files users can run, rules using file hash or path conditions are probably already in place.</source>
          <target>If your organization is already using Software Restriction Policies (SRP) to restrict what files users can run, rules using file hash or path conditions are probably already in place.</target>
        </segment>
      </unit>
      <unit id="134">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">[</data>
          <data id="id4">](requirements-to-use-applocker.md)</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For a list of supported operating system versions and editions to which SRP and AppLocker rules can be applied, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Requirements to use AppLocker</pc>.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Note:</pc>  For a list of supported operating system versions and editions to which SRP and AppLocker rules can be applied, see <pc dataRefEnd="id4" dataRefStart="id3" id="p2">Requirements to use AppLocker</pc>.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>How AppLocker works</source>
          <target>How AppLocker works</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>