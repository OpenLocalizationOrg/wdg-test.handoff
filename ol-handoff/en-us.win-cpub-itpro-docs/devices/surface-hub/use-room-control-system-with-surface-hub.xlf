<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0" srcLang="en-US" trgLang="en-us" version="2.0" xml:space="default" xmlns="urn:oasis:names:tc:xliff:document:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationtype">Human Translation</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilepath">devices\surface-hub\use-room-control-system-with-surface-hub.md</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">c5b2f743b3160ab0bfd3c4fe2f1dd65866a37453</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="tool-id">mdxliff</mda:meta>
        <mda:meta type="tool-name">mdxliff</mda:meta>
        <mda:meta type="tool-version">1.0-48076a9</mda:meta>
        <mda:meta type="tool-company">Microsoft</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Using a room control system (Surface Hub)</source>
          <target>Using a room control system (Surface Hub)</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Room control systems can be used with your Microsoft Surface Hub.</source>
          <target>Room control systems can be used with your Microsoft Surface Hub.</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Using a room control system (Surface Hub)</source>
          <target>Using a room control system (Surface Hub)</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>Room control systems can be used with your Microsoft Surface Hub.</source>
          <target>Room control systems can be used with your Microsoft Surface Hub.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Using a room control system with your Surface Hub involves connecting room control hardware to the Surface Hub, usually through the RJ11 serial port on the bottom of the Surface Hub.</source>
          <target>Using a room control system with your Surface Hub involves connecting room control hardware to the Surface Hub, usually through the RJ11 serial port on the bottom of the Surface Hub.</target>
        </segment>
      </unit>
      <unit id="106">
        <segment state="initial">
          <source>Terminal settings</source>
          <target>Terminal settings</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source>To connect to a room control system control panel, you don't need to configure any terminal settings on the Surface Hub.</source>
          <target>To connect to a room control system control panel, you don't need to configure any terminal settings on the Surface Hub.</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source>If you want to connect a PC or laptop to your Surface Hub and send serial commands from the Surface Hub, you can use a terminal emulator program like Tera Term or PuTTY.</source>
          <target>If you want to connect a PC or laptop to your Surface Hub and send serial commands from the Surface Hub, you can use a terminal emulator program like Tera Term or PuTTY.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Setting</source>
          <target>Setting</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>Value</source>
          <target>Value</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source>Baud rate</source>
          <target>Baud rate</target>
        </segment>
      </unit>
      <unit id="112">
        <segment state="initial">
          <source>115200</source>
          <target>115200</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Data bits</source>
          <target>Data bits</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>8</source>
          <target>8</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Stop bits</source>
          <target>Stop bits</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>1</source>
          <target>1</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Parity</source>
          <target>Parity</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>none</source>
          <target>none</target>
        </segment>
      </unit>
      <unit id="119">
        <segment state="initial">
          <source>Flow control</source>
          <target>Flow control</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source>none</source>
          <target>none</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Line feed</source>
          <target>Line feed</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source>every carriage return</source>
          <target>every carriage return</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Wiring diagram</source>
          <target>Wiring diagram</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source>You can use a standard RJ-11 (6P6C) connector to connect the Surface Hub serial port to a room control system.</source>
          <target>You can use a standard RJ-11 (6P6C) connector to connect the Surface Hub serial port to a room control system.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>This is the recommended method.</source>
          <target>This is the recommended method.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>You can also use an RJ-11 4-conductor cable, but we do not recommend this method.</source>
          <target>You can also use an RJ-11 4-conductor cable, but we do not recommend this method.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source>This diagram shows the correct pinout used for an RJ-11 (6P6C) to DB9 cable.</source>
          <target>This diagram shows the correct pinout used for an RJ-11 (6P6C) to DB9 cable.</target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>image showing the wiring diagram.</source>
          <target>image showing the wiring diagram.</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>Command sets</source>
          <target>Command sets</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>Room control systems use common meeting-room scenarios for commands.</source>
          <target>Room control systems use common meeting-room scenarios for commands.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Commands originate from the room control system, and are communicated over a serial connection to a Surface Hub.</source>
          <target>Commands originate from the room control system, and are communicated over a serial connection to a Surface Hub.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>Commands are ASCII based, and the Surface Hub will acknowledge when state changes occur.</source>
          <target>Commands are ASCII based, and the Surface Hub will acknowledge when state changes occur.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>The following command modifiers are available.</source>
          <target>The following command modifiers are available.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Commands terminate with a new line character (/n).</source>
          <target>Commands terminate with a new line character (/n).</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Responses can come at any time in response to state changes not triggered directly by a management port command.</source>
          <target>Responses can come at any time in response to state changes not triggered directly by a management port command.</target>
        </segment>
      </unit>
      <unit id="136">
        <segment state="initial">
          <source>Modifier</source>
          <target>Modifier</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Result</source>
          <target>Result</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>Increment a value</source>
          <target>Increment a value</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Decrease a value</source>
          <target>Decrease a value</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source>Set a discrete value</source>
          <target>Set a discrete value</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>?</source>
          <target>?</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Queries for a current value</source>
          <target>Queries for a current value</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>Power</source>
          <target>Power</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>Surface Hub can be in one of these power states.</source>
          <target>Surface Hub can be in one of these power states.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>State</source>
          <target>State</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Energy Star state</source>
          <target>Energy Star state</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>0</source>
          <target>0</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>S5</source>
          <target>S5</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>Off</source>
          <target>Off</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>1</source>
          <target>1</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Power up (indeterminate)</source>
          <target>Power up (indeterminate)</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>2</source>
          <target>2</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source>S3</source>
          <target>S3</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Sleep</source>
          <target>Sleep</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source>3</source>
          <target>3</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>S0</source>
          <target>S0</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Resting</source>
          <target>Resting</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>4</source>
          <target>4</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>S0</source>
          <target>S0</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>Ambient</source>
          <target>Ambient</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>5</source>
          <target>5</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>S0</source>
          <target>S0</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>Ready</source>
          <target>Ready</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>In Replacement PC mode, the power states are only Ready and Off and only change the display.</source>
          <target>In Replacement PC mode, the power states are only Ready and Off and only change the display.</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>The management port can't be used to power on the replacement PC.</source>
          <target>The management port can't be used to power on the replacement PC.</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>State</source>
          <target>State</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>Energy Star state</source>
          <target>Energy Star state</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="170">
        <segment state="initial">
          <source>0</source>
          <target>0</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>S5</source>
          <target>S5</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>Off</source>
          <target>Off</target>
        </segment>
      </unit>
      <unit id="173">
        <segment state="initial">
          <source>5</source>
          <target>5</target>
        </segment>
      </unit>
      <unit id="174">
        <segment state="initial">
          <source>50</source>
          <target>50</target>
        </segment>
      </unit>
      <unit id="175">
        <segment state="initial">
          <source>Ready</source>
          <target>Ready</target>
        </segment>
      </unit>
      <unit id="176">
        <segment state="initial">
          <source>For a control device, anything other than 5 / Ready should be considered off.</source>
          <target>For a control device, anything other than 5 / Ready should be considered off.</target>
        </segment>
      </unit>
      <unit id="177">
        <segment state="initial">
          <source>Each PowerOn command results in two state changes and reponses.</source>
          <target>Each PowerOn command results in two state changes and reponses.</target>
        </segment>
      </unit>
      <unit id="178">
        <segment state="initial">
          <source>Command</source>
          <target>Command</target>
        </segment>
      </unit>
      <unit id="179">
        <segment state="initial">
          <source>State change</source>
          <target>State change</target>
        </segment>
      </unit>
      <unit id="180">
        <segment state="initial">
          <source>Response</source>
          <target>Response</target>
        </segment>
      </unit>
      <unit id="181">
        <segment state="initial">
          <source>PowerOn</source>
          <target>PowerOn</target>
        </segment>
      </unit>
      <unit id="182">
        <segment state="initial">
          <source>Device turns on (display + PC).</source>
          <target>Device turns on (display + PC).</target>
        </segment>
      </unit>
      <unit id="183">
        <segment state="initial">
          <source>PC service notifies SMC that the PC is ready.</source>
          <target>PC service notifies SMC that the PC is ready.</target>
        </segment>
      </unit>
      <unit id="184">
        <segment state="initial">
          <source>Power=0</source>
          <target>Power=0</target>
        </segment>
      </unit>
      <unit id="185">
        <segment state="initial">
          <source>Power=5</source>
          <target>Power=5</target>
        </segment>
      </unit>
      <unit id="186">
        <segment state="initial">
          <source>PowerOff</source>
          <target>PowerOff</target>
        </segment>
      </unit>
      <unit id="187">
        <segment state="initial">
          <source>Device transitions to ambient state (PC on, display dim).</source>
          <target>Device transitions to ambient state (PC on, display dim).</target>
        </segment>
      </unit>
      <unit id="188">
        <segment state="initial">
          <source>Power=0</source>
          <target>Power=0</target>
        </segment>
      </unit>
      <unit id="189">
        <segment state="initial">
          <source>Power?</source>
          <target>Power?</target>
        </segment>
      </unit>
      <unit id="190">
        <segment state="initial">
          <source>SMC reports the last-known power state.</source>
          <target>SMC reports the last-known power state.</target>
        </segment>
      </unit>
      <unit id="191">
        <segment state="initial">
          <source>Power=</source>
          <target>Power=</target>
        </segment>
      </unit>
      <unit id="192">
        <segment state="initial">
          <source>Brightness</source>
          <target>Brightness</target>
        </segment>
      </unit>
      <unit id="193">
        <segment state="initial">
          <source>The current brightness level is a range from 0 to 100.</source>
          <target>The current brightness level is a range from 0 to 100.</target>
        </segment>
      </unit>
      <unit id="194">
        <segment state="initial">
          <source>Changes to brightness levels can be sent by a room control system, or other system.</source>
          <target>Changes to brightness levels can be sent by a room control system, or other system.</target>
        </segment>
      </unit>
      <unit id="195">
        <segment state="initial">
          <source>Command</source>
          <target>Command</target>
        </segment>
      </unit>
      <unit id="196">
        <segment state="initial">
          <source>State change</source>
          <target>State change</target>
        </segment>
      </unit>
      <unit id="197">
        <segment state="initial">
          <source>Response</source>
          <target>Response</target>
        </segment>
      </unit>
      <unit id="198">
        <segment state="initial">
          <source>Brightness+</source>
          <target>Brightness+</target>
        </segment>
      </unit>
      <unit id="199">
        <segment state="initial">
          <source>System management controller (SMC) sends the brightness up command.</source>
          <target>System management controller (SMC) sends the brightness up command.</target>
        </segment>
      </unit>
      <unit id="200">
        <segment state="initial">
          <source>PC service on the room control system notifies SMC of new brightness level.</source>
          <target>PC service on the room control system notifies SMC of new brightness level.</target>
        </segment>
      </unit>
      <unit id="201">
        <segment state="initial">
          <source>Brightness = 51</source>
          <target>Brightness = 51</target>
        </segment>
      </unit>
      <unit id="202">
        <segment state="initial">
          <source>Brightness-</source>
          <target>Brightness-</target>
        </segment>
      </unit>
      <unit id="203">
        <segment state="initial">
          <source>SMC sends the brightness down command.</source>
          <target>SMC sends the brightness down command.</target>
        </segment>
      </unit>
      <unit id="204">
        <segment state="initial">
          <source>PC service notifies SMC of new brightness level.</source>
          <target>PC service notifies SMC of new brightness level.</target>
        </segment>
      </unit>
      <unit id="205">
        <segment state="initial">
          <source>Brightness = 50</source>
          <target>Brightness = 50</target>
        </segment>
      </unit>
      <unit id="206">
        <segment state="initial">
          <source>Volume</source>
          <target>Volume</target>
        </segment>
      </unit>
      <unit id="207">
        <segment state="initial">
          <source>The current volume level is a range from 0 to 100.</source>
          <target>The current volume level is a range from 0 to 100.</target>
        </segment>
      </unit>
      <unit id="208">
        <segment state="initial">
          <source>Changes to volume levels can be sent by a room control system, or other system.</source>
          <target>Changes to volume levels can be sent by a room control system, or other system.</target>
        </segment>
      </unit>
      <unit id="209">
        <segment state="initial">
          <source>Command</source>
          <target>Command</target>
        </segment>
      </unit>
      <unit id="210">
        <segment state="initial">
          <source>State change</source>
          <target>State change</target>
        </segment>
      </unit>
      <unit id="211">
        <segment state="initial">
          <source>Response</source>
          <target>Response</target>
        </segment>
      </unit>
      <unit id="212">
        <segment state="initial">
          <source>Volume+</source>
          <target>Volume+</target>
        </segment>
      </unit>
      <unit id="213">
        <segment state="initial">
          <source>SMC sends the volume up command.</source>
          <target>SMC sends the volume up command.</target>
        </segment>
      </unit>
      <unit id="214">
        <segment state="initial">
          <source>PC service notifies SMC of new volume level.</source>
          <target>PC service notifies SMC of new volume level.</target>
        </segment>
      </unit>
      <unit id="215">
        <segment state="initial">
          <source>Volume = 51</source>
          <target>Volume = 51</target>
        </segment>
      </unit>
      <unit id="216">
        <segment state="initial">
          <source>Volume-</source>
          <target>Volume-</target>
        </segment>
      </unit>
      <unit id="217">
        <segment state="initial">
          <source>SMC sends the volume down command.</source>
          <target>SMC sends the volume down command.</target>
        </segment>
      </unit>
      <unit id="218">
        <segment state="initial">
          <source>PC service notifies SMC of new volume level.</source>
          <target>PC service notifies SMC of new volume level.</target>
        </segment>
      </unit>
      <unit id="219">
        <segment state="initial">
          <source>Volume = 50</source>
          <target>Volume = 50</target>
        </segment>
      </unit>
      <unit id="220">
        <segment state="initial">
          <source>Mute for audio</source>
          <target>Mute for audio</target>
        </segment>
      </unit>
      <unit id="221">
        <segment state="initial">
          <source>Audio can be muted.</source>
          <target>Audio can be muted.</target>
        </segment>
      </unit>
      <unit id="222">
        <segment state="initial">
          <source>Command</source>
          <target>Command</target>
        </segment>
      </unit>
      <unit id="223">
        <segment state="initial">
          <source>State change</source>
          <target>State change</target>
        </segment>
      </unit>
      <unit id="224">
        <segment state="initial">
          <source>Response</source>
          <target>Response</target>
        </segment>
      </unit>
      <unit id="225">
        <segment state="initial">
          <source>AudioMute+</source>
          <target>AudioMute+</target>
        </segment>
      </unit>
      <unit id="226">
        <segment state="initial">
          <source>SMC sends the audio mute command.</source>
          <target>SMC sends the audio mute command.</target>
        </segment>
      </unit>
      <unit id="227">
        <segment state="initial">
          <source>PC service notifies SMC that audio is muted.</source>
          <target>PC service notifies SMC that audio is muted.</target>
        </segment>
      </unit>
      <unit id="228">
        <segment state="initial">
          <source>none</source>
          <target>none</target>
        </segment>
      </unit>
      <unit id="229">
        <segment state="initial">
          <source>Video source</source>
          <target>Video source</target>
        </segment>
      </unit>
      <unit id="230">
        <segment state="initial">
          <source>Several display sources can be used.</source>
          <target>Several display sources can be used.</target>
        </segment>
      </unit>
      <unit id="231">
        <segment state="initial">
          <source>State</source>
          <target>State</target>
        </segment>
      </unit>
      <unit id="232">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="233">
        <segment state="initial">
          <source>0</source>
          <target>0</target>
        </segment>
      </unit>
      <unit id="234">
        <segment state="initial">
          <source>Onboard PC</source>
          <target>Onboard PC</target>
        </segment>
      </unit>
      <unit id="235">
        <segment state="initial">
          <source>1</source>
          <target>1</target>
        </segment>
      </unit>
      <unit id="236">
        <segment state="initial">
          <source>DisplayPort</source>
          <target>DisplayPort</target>
        </segment>
      </unit>
      <unit id="237">
        <segment state="initial">
          <source>2</source>
          <target>2</target>
        </segment>
      </unit>
      <unit id="238">
        <segment state="initial">
          <source>HDMI</source>
          <target>HDMI</target>
        </segment>
      </unit>
      <unit id="239">
        <segment state="initial">
          <source>3</source>
          <target>3</target>
        </segment>
      </unit>
      <unit id="240">
        <segment state="initial">
          <source>VGA</source>
          <target>VGA</target>
        </segment>
      </unit>
      <unit id="241">
        <segment state="initial">
          <source>Changes to display source can be sent by a room control system, or other system.</source>
          <target>Changes to display source can be sent by a room control system, or other system.</target>
        </segment>
      </unit>
      <unit id="242">
        <segment state="initial">
          <source>Command</source>
          <target>Command</target>
        </segment>
      </unit>
      <unit id="243">
        <segment state="initial">
          <source>State change</source>
          <target>State change</target>
        </segment>
      </unit>
      <unit id="244">
        <segment state="initial">
          <source>Response</source>
          <target>Response</target>
        </segment>
      </unit>
      <unit id="245">
        <segment state="initial">
          <source>Source=</source>
          <target>Source=</target>
        </segment>
      </unit>
      <unit id="246">
        <segment state="initial">
          <source>SMC changes to the desired source.</source>
          <target>SMC changes to the desired source.</target>
        </segment>
      </unit>
      <unit id="247">
        <segment state="initial">
          <source>PC service notifies SMC that the display source has switched.</source>
          <target>PC service notifies SMC that the display source has switched.</target>
        </segment>
      </unit>
      <unit id="248">
        <segment state="initial">
          <source>Source=</source>
          <target>Source=</target>
        </segment>
      </unit>
      <unit id="249">
        <segment state="initial">
          <source>Source+</source>
          <target>Source+</target>
        </segment>
      </unit>
      <unit id="250">
        <segment state="initial">
          <source>SMC cycles to the next active input source.</source>
          <target>SMC cycles to the next active input source.</target>
        </segment>
      </unit>
      <unit id="251">
        <segment state="initial">
          <source>PC service notifies SMC of the current input source.</source>
          <target>PC service notifies SMC of the current input source.</target>
        </segment>
      </unit>
      <unit id="252">
        <segment state="initial">
          <source>Source=</source>
          <target>Source=</target>
        </segment>
      </unit>
      <unit id="253">
        <segment state="initial">
          <source>Source-</source>
          <target>Source-</target>
        </segment>
      </unit>
      <unit id="254">
        <segment state="initial">
          <source>SMC cycles to the previous active input source.</source>
          <target>SMC cycles to the previous active input source.</target>
        </segment>
      </unit>
      <unit id="255">
        <segment state="initial">
          <source>PC service notifies SMC of the current input source.</source>
          <target>PC service notifies SMC of the current input source.</target>
        </segment>
      </unit>
      <unit id="256">
        <segment state="initial">
          <source>Source=</source>
          <target>Source=</target>
        </segment>
      </unit>
      <unit id="257">
        <segment state="initial">
          <source>Source?</source>
          <target>Source?</target>
        </segment>
      </unit>
      <unit id="258">
        <segment state="initial">
          <source>SMC queries PC service for the active input source.</source>
          <target>SMC queries PC service for the active input source.</target>
        </segment>
      </unit>
      <unit id="259">
        <segment state="initial">
          <source>PC service notifies SMC of the current in;put source.</source>
          <target>PC service notifies SMC of the current in;put source.</target>
        </segment>
      </unit>
      <unit id="260">
        <segment state="initial">
          <source>Source=</source>
          <target>Source=</target>
        </segment>
      </unit>
      <unit id="261">
        <segment state="initial">
          <source>Errors</source>
          <target>Errors</target>
        </segment>
      </unit>
      <unit id="262">
        <segment state="initial">
          <source>Errors are returned following the format in this table.</source>
          <target>Errors are returned following the format in this table.</target>
        </segment>
      </unit>
      <unit id="263">
        <segment state="initial">
          <source>Error</source>
          <target>Error</target>
        </segment>
      </unit>
      <unit id="264">
        <segment state="initial">
          <source>Notes</source>
          <target>Notes</target>
        </segment>
      </unit>
      <unit id="265">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Error: Unknown command '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</source>
          <target>Error: Unknown command '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</target>
        </segment>
      </unit>
      <unit id="266">
        <segment state="initial">
          <source>The instruction contains an unknown initial command.</source>
          <target>The instruction contains an unknown initial command.</target>
        </segment>
      </unit>
      <unit id="267">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
          <data id="id3">&amp;quot;</data>
          <data id="id4">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>For example, <ph dataRef="id1" id="ph1" />VOL+<ph dataRef="id2" id="ph2" /> would be invalid and return <ph dataRef="id3" id="ph3" /> Error: Unknown command 'VOL'<ph dataRef="id4" id="ph4" />.</source>
          <target>For example, <ph dataRef="id1" id="ph1" />VOL+<ph dataRef="id2" id="ph2" /> would be invalid and return <ph dataRef="id3" id="ph3" /> Error: Unknown command 'VOL'<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="268">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Error: Unknown operator '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</source>
          <target>Error: Unknown operator '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</target>
        </segment>
      </unit>
      <unit id="269">
        <segment state="initial">
          <source>The instruction contains an unknown operator.</source>
          <target>The instruction contains an unknown operator.</target>
        </segment>
      </unit>
      <unit id="270">
        <originalData>
          <data id="id1">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>For example, <ph dataRef="id1" id="ph1" />Volume!</source>
          <target>For example, <ph dataRef="id1" id="ph1" />Volume!</target>
        </segment>
      </unit>
      <unit id="271">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>would be invalid and return <ph dataRef="id1" id="ph1" /> Error: Unknown operator '!'<ph dataRef="id2" id="ph2" />.</source>
          <target>would be invalid and return <ph dataRef="id1" id="ph1" /> Error: Unknown operator '!'<ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="272">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Error: Unknown parameter '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</source>
          <target>Error: Unknown parameter '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</target>
        </segment>
      </unit>
      <unit id="273">
        <segment state="initial">
          <source>The instruction contains an unknown parameter.</source>
          <target>The instruction contains an unknown parameter.</target>
        </segment>
      </unit>
      <unit id="274">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
          <data id="id3">&amp;quot;</data>
          <data id="id4">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>For example, <ph dataRef="id1" id="ph1" />Volume=abc<ph dataRef="id2" id="ph2" /> would be invalid and return <ph dataRef="id3" id="ph3" /> Error: Unknown parameter 'abc'<ph dataRef="id4" id="ph4" />.</source>
          <target>For example, <ph dataRef="id1" id="ph1" />Volume=abc<ph dataRef="id2" id="ph2" /> would be invalid and return <ph dataRef="id3" id="ph3" /> Error: Unknown parameter 'abc'<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="275">
        <originalData>
          <data id="id1">&amp;lt;</data>
          <data id="id2">&amp;gt;</data>
        </originalData>
        <segment state="initial">
          <source>Error: Command not available when off '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</source>
          <target>Error: Command not available when off '<ph dataRef="id1" id="ph1" />input<ph dataRef="id2" id="ph2" />'.</target>
        </segment>
      </unit>
      <unit id="276">
        <segment state="initial">
          <source>When the Surface Hub is off, commands other than Power return this error.</source>
          <target>When the Surface Hub is off, commands other than Power return this error.</target>
        </segment>
      </unit>
      <unit id="277">
        <originalData>
          <data id="id1">&amp;quot;</data>
          <data id="id2">&amp;quot;</data>
          <data id="id3">&amp;quot;</data>
          <data id="id4">&amp;quot;</data>
        </originalData>
        <segment state="initial">
          <source>For example, <ph dataRef="id1" id="ph1" />Volume+<ph dataRef="id2" id="ph2" /> would be invalid and return <ph dataRef="id3" id="ph3" /> Error: Command not available when off 'Volume'<ph dataRef="id4" id="ph4" />.</source>
          <target>For example, <ph dataRef="id1" id="ph1" />Volume+<ph dataRef="id2" id="ph2" /> would be invalid and return <ph dataRef="id3" id="ph3" /> Error: Command not available when off 'Volume'<ph dataRef="id4" id="ph4" />.</target>
        </segment>
      </unit>
      <unit id="278">
        <segment state="initial">
          <source>Related topics</source>
          <target>Related topics</target>
        </segment>
      </unit>
      <unit id="279">
        <segment state="initial">
          <source>Manage Microsoft Surface Hub</source>
          <target>Manage Microsoft Surface Hub</target>
        </segment>
      </unit>
      <unit id="280">
        <segment state="initial">
          <source>Microsoft Surface Hub administrator's guide</source>
          <target>Microsoft Surface Hub administrator's guide</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>